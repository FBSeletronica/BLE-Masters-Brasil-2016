

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Sep 26 00:20:41 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0008                     	;# 
    46  0009                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  000D                     	;# 
    51  000E                     	;# 
    52  0010                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0014                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001B                     	;# 
    67  001C                     	;# 
    68  001D                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  0090                     	;# 
    75  0091                     	;# 
    76  0092                     	;# 
    77  0093                     	;# 
    78  0094                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  009F                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0113                     	;# 
    96  0114                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011C                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  018E                     	;# 
   106  0191                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0197                     	;# 
   115  0199                     	;# 
   116  0199                     	;# 
   117  0199                     	;# 
   118  019A                     	;# 
   119  019A                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019D                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019E                     	;# 
   134  019E                     	;# 
   135  019F                     	;# 
   136  019F                     	;# 
   137  019F                     	;# 
   138  019F                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  020D                     	;# 
   142  020E                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  028C                     	;# 
   160  028D                     	;# 
   161  028E                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  029B                     	;# 
   172  029E                     	;# 
   173  030C                     	;# 
   174  030D                     	;# 
   175  030E                     	;# 
   176  038C                     	;# 
   177  038D                     	;# 
   178  038E                     	;# 
   179  0391                     	;# 
   180  0392                     	;# 
   181  0393                     	;# 
   182  0394                     	;# 
   183  0395                     	;# 
   184  0396                     	;# 
   185  0397                     	;# 
   186  0398                     	;# 
   187  0399                     	;# 
   188  040E                     	;# 
   189  0413                     	;# 
   190  0413                     	;# 
   191  0414                     	;# 
   192  0414                     	;# 
   193  0415                     	;# 
   194  0416                     	;# 
   195  0417                     	;# 
   196  0418                     	;# 
   197  041A                     	;# 
   198  041A                     	;# 
   199  041B                     	;# 
   200  041B                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  041F                     	;# 
   205  0493                     	;# 
   206  0494                     	;# 
   207  0495                     	;# 
   208  0496                     	;# 
   209  049A                     	;# 
   210  049B                     	;# 
   211  049C                     	;# 
   212  049D                     	;# 
   213  058C                     	;# 
   214  058C                     	;# 
   215  058D                     	;# 
   216  058E                     	;# 
   217  058E                     	;# 
   218  058F                     	;# 
   219  0590                     	;# 
   220  0590                     	;# 
   221  0591                     	;# 
   222  0592                     	;# 
   223  0592                     	;# 
   224  0593                     	;# 
   225  0594                     	;# 
   226  0594                     	;# 
   227  0595                     	;# 
   228  0596                     	;# 
   229  0596                     	;# 
   230  0597                     	;# 
   231  0598                     	;# 
   232  0599                     	;# 
   233  059A                     	;# 
   234  059B                     	;# 
   235  059B                     	;# 
   236  059C                     	;# 
   237  059D                     	;# 
   238  060C                     	;# 
   239  060C                     	;# 
   240  060D                     	;# 
   241  060E                     	;# 
   242  060F                     	;# 
   243  060F                     	;# 
   244  0610                     	;# 
   245  0611                     	;# 
   246  0612                     	;# 
   247  0613                     	;# 
   248  0614                     	;# 
   249  0617                     	;# 
   250  0618                     	;# 
   251  0619                     	;# 
   252  061A                     	;# 
   253  061B                     	;# 
   254  061C                     	;# 
   255  0691                     	;# 
   256  0692                     	;# 
   257  0693                     	;# 
   258  0694                     	;# 
   259  0695                     	;# 
   260  0696                     	;# 
   261  0697                     	;# 
   262  0699                     	;# 
   263  069A                     	;# 
   264  0711                     	;# 
   265  0712                     	;# 
   266  0713                     	;# 
   267  0714                     	;# 
   268  0715                     	;# 
   269  0718                     	;# 
   270  0718                     	;# 
   271  0719                     	;# 
   272  071A                     	;# 
   273  071A                     	;# 
   274  071B                     	;# 
   275  071C                     	;# 
   276  071D                     	;# 
   277  0791                     	;# 
   278  0791                     	;# 
   279  0792                     	;# 
   280  0793                     	;# 
   281  0793                     	;# 
   282  0794                     	;# 
   283  0795                     	;# 
   284  0795                     	;# 
   285  0796                     	;# 
   286  0797                     	;# 
   287  0797                     	;# 
   288  0798                     	;# 
   289  0799                     	;# 
   290  079A                     	;# 
   291  080C                     	;# 
   292  080C                     	;# 
   293  080D                     	;# 
   294  080E                     	;# 
   295  080E                     	;# 
   296  080F                     	;# 
   297  0810                     	;# 
   298  0810                     	;# 
   299  0811                     	;# 
   300  0812                     	;# 
   301  0812                     	;# 
   302  0813                     	;# 
   303  0814                     	;# 
   304  0815                     	;# 
   305  0816                     	;# 
   306  0817                     	;# 
   307  0818                     	;# 
   308  0819                     	;# 
   309  081A                     	;# 
   310  081A                     	;# 
   311  081B                     	;# 
   312  081C                     	;# 
   313  081C                     	;# 
   314  081D                     	;# 
   315  088C                     	;# 
   316  088D                     	;# 
   317  088E                     	;# 
   318  088F                     	;# 
   319  088F                     	;# 
   320  0890                     	;# 
   321  0891                     	;# 
   322  0892                     	;# 
   323  0893                     	;# 
   324  0893                     	;# 
   325  0894                     	;# 
   326  0895                     	;# 
   327  0896                     	;# 
   328  0897                     	;# 
   329  0897                     	;# 
   330  0898                     	;# 
   331  0899                     	;# 
   332  0D8C                     	;# 
   333  0D8C                     	;# 
   334  0D8D                     	;# 
   335  0D8E                     	;# 
   336  0D8F                     	;# 
   337  0D8F                     	;# 
   338  0D90                     	;# 
   339  0D91                     	;# 
   340  0D92                     	;# 
   341  0D92                     	;# 
   342  0D93                     	;# 
   343  0D94                     	;# 
   344  0D95                     	;# 
   345  0D95                     	;# 
   346  0D96                     	;# 
   347  0D97                     	;# 
   348  0D98                     	;# 
   349  0D99                     	;# 
   350  0D9A                     	;# 
   351  0D9B                     	;# 
   352  0D9C                     	;# 
   353  0D9D                     	;# 
   354  0D9E                     	;# 
   355  0D9E                     	;# 
   356  0D9F                     	;# 
   357  0DA0                     	;# 
   358  0DA1                     	;# 
   359  0DA1                     	;# 
   360  0DA2                     	;# 
   361  0DA3                     	;# 
   362  0DA4                     	;# 
   363  0DA4                     	;# 
   364  0DA5                     	;# 
   365  0DA6                     	;# 
   366  0DA7                     	;# 
   367  0DA7                     	;# 
   368  0DA8                     	;# 
   369  0DA9                     	;# 
   370  0DAA                     	;# 
   371  0DAB                     	;# 
   372  0DAC                     	;# 
   373  0DAD                     	;# 
   374  0DAE                     	;# 
   375  0DAF                     	;# 
   376  0E0F                     	;# 
   377  0E10                     	;# 
   378  0E11                     	;# 
   379  0E12                     	;# 
   380  0E13                     	;# 
   381  0E14                     	;# 
   382  0E15                     	;# 
   383  0E16                     	;# 
   384  0E17                     	;# 
   385  0E18                     	;# 
   386  0E19                     	;# 
   387  0E1A                     	;# 
   388  0E1B                     	;# 
   389  0E1C                     	;# 
   390  0E1D                     	;# 
   391  0E1E                     	;# 
   392  0E1F                     	;# 
   393  0E20                     	;# 
   394  0E21                     	;# 
   395  0E22                     	;# 
   396  0E23                     	;# 
   397  0E24                     	;# 
   398  0E25                     	;# 
   399  0E26                     	;# 
   400  0E27                     	;# 
   401  0E28                     	;# 
   402  0E29                     	;# 
   403  0E2A                     	;# 
   404  0E2B                     	;# 
   405  0E2C                     	;# 
   406  0E2D                     	;# 
   407  0E2E                     	;# 
   408  0E90                     	;# 
   409  0E91                     	;# 
   410  0E92                     	;# 
   411  0E94                     	;# 
   412  0E95                     	;# 
   413  0E9C                     	;# 
   414  0E9D                     	;# 
   415  0E9E                     	;# 
   416  0E9F                     	;# 
   417  0EA0                     	;# 
   418  0EA1                     	;# 
   419  0EA2                     	;# 
   420  0EA3                     	;# 
   421  0EA4                     	;# 
   422  0EA5                     	;# 
   423  0EA6                     	;# 
   424  0EA7                     	;# 
   425  0F0F                     	;# 
   426  0F10                     	;# 
   427  0F11                     	;# 
   428  0F12                     	;# 
   429  0F13                     	;# 
   430  0F14                     	;# 
   431  0F15                     	;# 
   432  0F16                     	;# 
   433  0F17                     	;# 
   434  0F18                     	;# 
   435  0F19                     	;# 
   436  0F1A                     	;# 
   437  0F1B                     	;# 
   438  0F1C                     	;# 
   439  0F1D                     	;# 
   440  0F1E                     	;# 
   441  0F1F                     	;# 
   442  0F20                     	;# 
   443  0F21                     	;# 
   444  0F22                     	;# 
   445  0F23                     	;# 
   446  0F24                     	;# 
   447  0F25                     	;# 
   448  0F26                     	;# 
   449  0F27                     	;# 
   450  0F28                     	;# 
   451  0F29                     	;# 
   452  0F2A                     	;# 
   453  0F2B                     	;# 
   454  0F2C                     	;# 
   455  0F2D                     	;# 
   456  0F2E                     	;# 
   457  0F2F                     	;# 
   458  0F30                     	;# 
   459  0F31                     	;# 
   460  0F32                     	;# 
   461  0F33                     	;# 
   462  0F34                     	;# 
   463  0F35                     	;# 
   464  0F36                     	;# 
   465  0F37                     	;# 
   466  0FE4                     	;# 
   467  0FE5                     	;# 
   468  0FE6                     	;# 
   469  0FE7                     	;# 
   470  0FE8                     	;# 
   471  0FE9                     	;# 
   472  0FEA                     	;# 
   473  0FEB                     	;# 
   474  0FED                     	;# 
   475  0FEE                     	;# 
   476  0FEF                     	;# 
   477  0000                     	;# 
   478  0001                     	;# 
   479  0002                     	;# 
   480  0003                     	;# 
   481  0004                     	;# 
   482  0005                     	;# 
   483  0006                     	;# 
   484  0007                     	;# 
   485  0008                     	;# 
   486  0009                     	;# 
   487  000A                     	;# 
   488  000B                     	;# 
   489  000C                     	;# 
   490  000D                     	;# 
   491  000E                     	;# 
   492  0010                     	;# 
   493  0011                     	;# 
   494  0012                     	;# 
   495  0013                     	;# 
   496  0014                     	;# 
   497  0015                     	;# 
   498  0016                     	;# 
   499  0016                     	;# 
   500  0017                     	;# 
   501  0018                     	;# 
   502  0019                     	;# 
   503  001A                     	;# 
   504  001A                     	;# 
   505  001B                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  001D                     	;# 
   509  001E                     	;# 
   510  001F                     	;# 
   511  008C                     	;# 
   512  008D                     	;# 
   513  008E                     	;# 
   514  0090                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0093                     	;# 
   518  0094                     	;# 
   519  0095                     	;# 
   520  0096                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  010C                     	;# 
   531  010D                     	;# 
   532  010E                     	;# 
   533  0111                     	;# 
   534  0112                     	;# 
   535  0113                     	;# 
   536  0114                     	;# 
   537  0115                     	;# 
   538  0116                     	;# 
   539  0117                     	;# 
   540  0118                     	;# 
   541  0119                     	;# 
   542  011C                     	;# 
   543  018C                     	;# 
   544  018D                     	;# 
   545  018E                     	;# 
   546  0191                     	;# 
   547  0191                     	;# 
   548  0192                     	;# 
   549  0193                     	;# 
   550  0193                     	;# 
   551  0194                     	;# 
   552  0195                     	;# 
   553  0196                     	;# 
   554  0197                     	;# 
   555  0199                     	;# 
   556  0199                     	;# 
   557  0199                     	;# 
   558  019A                     	;# 
   559  019A                     	;# 
   560  019A                     	;# 
   561  019B                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019B                     	;# 
   566  019C                     	;# 
   567  019C                     	;# 
   568  019C                     	;# 
   569  019D                     	;# 
   570  019D                     	;# 
   571  019D                     	;# 
   572  019E                     	;# 
   573  019E                     	;# 
   574  019E                     	;# 
   575  019F                     	;# 
   576  019F                     	;# 
   577  019F                     	;# 
   578  019F                     	;# 
   579  019F                     	;# 
   580  020C                     	;# 
   581  020D                     	;# 
   582  020E                     	;# 
   583  0211                     	;# 
   584  0211                     	;# 
   585  0212                     	;# 
   586  0212                     	;# 
   587  0213                     	;# 
   588  0213                     	;# 
   589  0214                     	;# 
   590  0214                     	;# 
   591  0215                     	;# 
   592  0215                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0216                     	;# 
   596  0216                     	;# 
   597  0217                     	;# 
   598  0217                     	;# 
   599  028C                     	;# 
   600  028D                     	;# 
   601  028E                     	;# 
   602  0291                     	;# 
   603  0291                     	;# 
   604  0292                     	;# 
   605  0293                     	;# 
   606  0294                     	;# 
   607  0298                     	;# 
   608  0298                     	;# 
   609  0299                     	;# 
   610  029A                     	;# 
   611  029B                     	;# 
   612  029E                     	;# 
   613  030C                     	;# 
   614  030D                     	;# 
   615  030E                     	;# 
   616  038C                     	;# 
   617  038D                     	;# 
   618  038E                     	;# 
   619  0391                     	;# 
   620  0392                     	;# 
   621  0393                     	;# 
   622  0394                     	;# 
   623  0395                     	;# 
   624  0396                     	;# 
   625  0397                     	;# 
   626  0398                     	;# 
   627  0399                     	;# 
   628  040E                     	;# 
   629  0413                     	;# 
   630  0413                     	;# 
   631  0414                     	;# 
   632  0414                     	;# 
   633  0415                     	;# 
   634  0416                     	;# 
   635  0417                     	;# 
   636  0418                     	;# 
   637  041A                     	;# 
   638  041A                     	;# 
   639  041B                     	;# 
   640  041B                     	;# 
   641  041C                     	;# 
   642  041D                     	;# 
   643  041E                     	;# 
   644  041F                     	;# 
   645  0493                     	;# 
   646  0494                     	;# 
   647  0495                     	;# 
   648  0496                     	;# 
   649  049A                     	;# 
   650  049B                     	;# 
   651  049C                     	;# 
   652  049D                     	;# 
   653  058C                     	;# 
   654  058C                     	;# 
   655  058D                     	;# 
   656  058E                     	;# 
   657  058E                     	;# 
   658  058F                     	;# 
   659  0590                     	;# 
   660  0590                     	;# 
   661  0591                     	;# 
   662  0592                     	;# 
   663  0592                     	;# 
   664  0593                     	;# 
   665  0594                     	;# 
   666  0594                     	;# 
   667  0595                     	;# 
   668  0596                     	;# 
   669  0596                     	;# 
   670  0597                     	;# 
   671  0598                     	;# 
   672  0599                     	;# 
   673  059A                     	;# 
   674  059B                     	;# 
   675  059B                     	;# 
   676  059C                     	;# 
   677  059D                     	;# 
   678  060C                     	;# 
   679  060C                     	;# 
   680  060D                     	;# 
   681  060E                     	;# 
   682  060F                     	;# 
   683  060F                     	;# 
   684  0610                     	;# 
   685  0611                     	;# 
   686  0612                     	;# 
   687  0613                     	;# 
   688  0614                     	;# 
   689  0617                     	;# 
   690  0618                     	;# 
   691  0619                     	;# 
   692  061A                     	;# 
   693  061B                     	;# 
   694  061C                     	;# 
   695  0691                     	;# 
   696  0692                     	;# 
   697  0693                     	;# 
   698  0694                     	;# 
   699  0695                     	;# 
   700  0696                     	;# 
   701  0697                     	;# 
   702  0699                     	;# 
   703  069A                     	;# 
   704  0711                     	;# 
   705  0712                     	;# 
   706  0713                     	;# 
   707  0714                     	;# 
   708  0715                     	;# 
   709  0718                     	;# 
   710  0718                     	;# 
   711  0719                     	;# 
   712  071A                     	;# 
   713  071A                     	;# 
   714  071B                     	;# 
   715  071C                     	;# 
   716  071D                     	;# 
   717  0791                     	;# 
   718  0791                     	;# 
   719  0792                     	;# 
   720  0793                     	;# 
   721  0793                     	;# 
   722  0794                     	;# 
   723  0795                     	;# 
   724  0795                     	;# 
   725  0796                     	;# 
   726  0797                     	;# 
   727  0797                     	;# 
   728  0798                     	;# 
   729  0799                     	;# 
   730  079A                     	;# 
   731  080C                     	;# 
   732  080C                     	;# 
   733  080D                     	;# 
   734  080E                     	;# 
   735  080E                     	;# 
   736  080F                     	;# 
   737  0810                     	;# 
   738  0810                     	;# 
   739  0811                     	;# 
   740  0812                     	;# 
   741  0812                     	;# 
   742  0813                     	;# 
   743  0814                     	;# 
   744  0815                     	;# 
   745  0816                     	;# 
   746  0817                     	;# 
   747  0818                     	;# 
   748  0819                     	;# 
   749  081A                     	;# 
   750  081A                     	;# 
   751  081B                     	;# 
   752  081C                     	;# 
   753  081C                     	;# 
   754  081D                     	;# 
   755  088C                     	;# 
   756  088D                     	;# 
   757  088E                     	;# 
   758  088F                     	;# 
   759  088F                     	;# 
   760  0890                     	;# 
   761  0891                     	;# 
   762  0892                     	;# 
   763  0893                     	;# 
   764  0893                     	;# 
   765  0894                     	;# 
   766  0895                     	;# 
   767  0896                     	;# 
   768  0897                     	;# 
   769  0897                     	;# 
   770  0898                     	;# 
   771  0899                     	;# 
   772  0D8C                     	;# 
   773  0D8C                     	;# 
   774  0D8D                     	;# 
   775  0D8E                     	;# 
   776  0D8F                     	;# 
   777  0D8F                     	;# 
   778  0D90                     	;# 
   779  0D91                     	;# 
   780  0D92                     	;# 
   781  0D92                     	;# 
   782  0D93                     	;# 
   783  0D94                     	;# 
   784  0D95                     	;# 
   785  0D95                     	;# 
   786  0D96                     	;# 
   787  0D97                     	;# 
   788  0D98                     	;# 
   789  0D99                     	;# 
   790  0D9A                     	;# 
   791  0D9B                     	;# 
   792  0D9C                     	;# 
   793  0D9D                     	;# 
   794  0D9E                     	;# 
   795  0D9E                     	;# 
   796  0D9F                     	;# 
   797  0DA0                     	;# 
   798  0DA1                     	;# 
   799  0DA1                     	;# 
   800  0DA2                     	;# 
   801  0DA3                     	;# 
   802  0DA4                     	;# 
   803  0DA4                     	;# 
   804  0DA5                     	;# 
   805  0DA6                     	;# 
   806  0DA7                     	;# 
   807  0DA7                     	;# 
   808  0DA8                     	;# 
   809  0DA9                     	;# 
   810  0DAA                     	;# 
   811  0DAB                     	;# 
   812  0DAC                     	;# 
   813  0DAD                     	;# 
   814  0DAE                     	;# 
   815  0DAF                     	;# 
   816  0E0F                     	;# 
   817  0E10                     	;# 
   818  0E11                     	;# 
   819  0E12                     	;# 
   820  0E13                     	;# 
   821  0E14                     	;# 
   822  0E15                     	;# 
   823  0E16                     	;# 
   824  0E17                     	;# 
   825  0E18                     	;# 
   826  0E19                     	;# 
   827  0E1A                     	;# 
   828  0E1B                     	;# 
   829  0E1C                     	;# 
   830  0E1D                     	;# 
   831  0E1E                     	;# 
   832  0E1F                     	;# 
   833  0E20                     	;# 
   834  0E21                     	;# 
   835  0E22                     	;# 
   836  0E23                     	;# 
   837  0E24                     	;# 
   838  0E25                     	;# 
   839  0E26                     	;# 
   840  0E27                     	;# 
   841  0E28                     	;# 
   842  0E29                     	;# 
   843  0E2A                     	;# 
   844  0E2B                     	;# 
   845  0E2C                     	;# 
   846  0E2D                     	;# 
   847  0E2E                     	;# 
   848  0E90                     	;# 
   849  0E91                     	;# 
   850  0E92                     	;# 
   851  0E94                     	;# 
   852  0E95                     	;# 
   853  0E9C                     	;# 
   854  0E9D                     	;# 
   855  0E9E                     	;# 
   856  0E9F                     	;# 
   857  0EA0                     	;# 
   858  0EA1                     	;# 
   859  0EA2                     	;# 
   860  0EA3                     	;# 
   861  0EA4                     	;# 
   862  0EA5                     	;# 
   863  0EA6                     	;# 
   864  0EA7                     	;# 
   865  0F0F                     	;# 
   866  0F10                     	;# 
   867  0F11                     	;# 
   868  0F12                     	;# 
   869  0F13                     	;# 
   870  0F14                     	;# 
   871  0F15                     	;# 
   872  0F16                     	;# 
   873  0F17                     	;# 
   874  0F18                     	;# 
   875  0F19                     	;# 
   876  0F1A                     	;# 
   877  0F1B                     	;# 
   878  0F1C                     	;# 
   879  0F1D                     	;# 
   880  0F1E                     	;# 
   881  0F1F                     	;# 
   882  0F20                     	;# 
   883  0F21                     	;# 
   884  0F22                     	;# 
   885  0F23                     	;# 
   886  0F24                     	;# 
   887  0F25                     	;# 
   888  0F26                     	;# 
   889  0F27                     	;# 
   890  0F28                     	;# 
   891  0F29                     	;# 
   892  0F2A                     	;# 
   893  0F2B                     	;# 
   894  0F2C                     	;# 
   895  0F2D                     	;# 
   896  0F2E                     	;# 
   897  0F2F                     	;# 
   898  0F30                     	;# 
   899  0F31                     	;# 
   900  0F32                     	;# 
   901  0F33                     	;# 
   902  0F34                     	;# 
   903  0F35                     	;# 
   904  0F36                     	;# 
   905  0F37                     	;# 
   906  0FE4                     	;# 
   907  0FE5                     	;# 
   908  0FE6                     	;# 
   909  0FE7                     	;# 
   910  0FE8                     	;# 
   911  0FE9                     	;# 
   912  0FEA                     	;# 
   913  0FEB                     	;# 
   914  0FED                     	;# 
   915  0FEE                     	;# 
   916  0FEF                     	;# 
   917  0000                     	;# 
   918  0001                     	;# 
   919  0002                     	;# 
   920  0003                     	;# 
   921  0004                     	;# 
   922  0005                     	;# 
   923  0006                     	;# 
   924  0007                     	;# 
   925  0008                     	;# 
   926  0009                     	;# 
   927  000A                     	;# 
   928  000B                     	;# 
   929  000C                     	;# 
   930  000D                     	;# 
   931  000E                     	;# 
   932  0010                     	;# 
   933  0011                     	;# 
   934  0012                     	;# 
   935  0013                     	;# 
   936  0014                     	;# 
   937  0015                     	;# 
   938  0016                     	;# 
   939  0016                     	;# 
   940  0017                     	;# 
   941  0018                     	;# 
   942  0019                     	;# 
   943  001A                     	;# 
   944  001A                     	;# 
   945  001B                     	;# 
   946  001B                     	;# 
   947  001C                     	;# 
   948  001D                     	;# 
   949  001E                     	;# 
   950  001F                     	;# 
   951  008C                     	;# 
   952  008D                     	;# 
   953  008E                     	;# 
   954  0090                     	;# 
   955  0091                     	;# 
   956  0092                     	;# 
   957  0093                     	;# 
   958  0094                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0098                     	;# 
   962  0099                     	;# 
   963  009A                     	;# 
   964  009B                     	;# 
   965  009B                     	;# 
   966  009C                     	;# 
   967  009D                     	;# 
   968  009E                     	;# 
   969  009F                     	;# 
   970  010C                     	;# 
   971  010D                     	;# 
   972  010E                     	;# 
   973  0111                     	;# 
   974  0112                     	;# 
   975  0113                     	;# 
   976  0114                     	;# 
   977  0115                     	;# 
   978  0116                     	;# 
   979  0117                     	;# 
   980  0118                     	;# 
   981  0119                     	;# 
   982  011C                     	;# 
   983  018C                     	;# 
   984  018D                     	;# 
   985  018E                     	;# 
   986  0191                     	;# 
   987  0191                     	;# 
   988  0192                     	;# 
   989  0193                     	;# 
   990  0193                     	;# 
   991  0194                     	;# 
   992  0195                     	;# 
   993  0196                     	;# 
   994  0197                     	;# 
   995  0199                     	;# 
   996  0199                     	;# 
   997  0199                     	;# 
   998  019A                     	;# 
   999  019A                     	;# 
  1000  019A                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019B                     	;# 
  1004  019B                     	;# 
  1005  019B                     	;# 
  1006  019C                     	;# 
  1007  019C                     	;# 
  1008  019C                     	;# 
  1009  019D                     	;# 
  1010  019D                     	;# 
  1011  019D                     	;# 
  1012  019E                     	;# 
  1013  019E                     	;# 
  1014  019E                     	;# 
  1015  019F                     	;# 
  1016  019F                     	;# 
  1017  019F                     	;# 
  1018  019F                     	;# 
  1019  019F                     	;# 
  1020  020C                     	;# 
  1021  020D                     	;# 
  1022  020E                     	;# 
  1023  0211                     	;# 
  1024  0211                     	;# 
  1025  0212                     	;# 
  1026  0212                     	;# 
  1027  0213                     	;# 
  1028  0213                     	;# 
  1029  0214                     	;# 
  1030  0214                     	;# 
  1031  0215                     	;# 
  1032  0215                     	;# 
  1033  0215                     	;# 
  1034  0215                     	;# 
  1035  0216                     	;# 
  1036  0216                     	;# 
  1037  0217                     	;# 
  1038  0217                     	;# 
  1039  028C                     	;# 
  1040  028D                     	;# 
  1041  028E                     	;# 
  1042  0291                     	;# 
  1043  0291                     	;# 
  1044  0292                     	;# 
  1045  0293                     	;# 
  1046  0294                     	;# 
  1047  0298                     	;# 
  1048  0298                     	;# 
  1049  0299                     	;# 
  1050  029A                     	;# 
  1051  029B                     	;# 
  1052  029E                     	;# 
  1053  030C                     	;# 
  1054  030D                     	;# 
  1055  030E                     	;# 
  1056  038C                     	;# 
  1057  038D                     	;# 
  1058  038E                     	;# 
  1059  0391                     	;# 
  1060  0392                     	;# 
  1061  0393                     	;# 
  1062  0394                     	;# 
  1063  0395                     	;# 
  1064  0396                     	;# 
  1065  0397                     	;# 
  1066  0398                     	;# 
  1067  0399                     	;# 
  1068  040E                     	;# 
  1069  0413                     	;# 
  1070  0413                     	;# 
  1071  0414                     	;# 
  1072  0414                     	;# 
  1073  0415                     	;# 
  1074  0416                     	;# 
  1075  0417                     	;# 
  1076  0418                     	;# 
  1077  041A                     	;# 
  1078  041A                     	;# 
  1079  041B                     	;# 
  1080  041B                     	;# 
  1081  041C                     	;# 
  1082  041D                     	;# 
  1083  041E                     	;# 
  1084  041F                     	;# 
  1085  0493                     	;# 
  1086  0494                     	;# 
  1087  0495                     	;# 
  1088  0496                     	;# 
  1089  049A                     	;# 
  1090  049B                     	;# 
  1091  049C                     	;# 
  1092  049D                     	;# 
  1093  058C                     	;# 
  1094  058C                     	;# 
  1095  058D                     	;# 
  1096  058E                     	;# 
  1097  058E                     	;# 
  1098  058F                     	;# 
  1099  0590                     	;# 
  1100  0590                     	;# 
  1101  0591                     	;# 
  1102  0592                     	;# 
  1103  0592                     	;# 
  1104  0593                     	;# 
  1105  0594                     	;# 
  1106  0594                     	;# 
  1107  0595                     	;# 
  1108  0596                     	;# 
  1109  0596                     	;# 
  1110  0597                     	;# 
  1111  0598                     	;# 
  1112  0599                     	;# 
  1113  059A                     	;# 
  1114  059B                     	;# 
  1115  059B                     	;# 
  1116  059C                     	;# 
  1117  059D                     	;# 
  1118  060C                     	;# 
  1119  060C                     	;# 
  1120  060D                     	;# 
  1121  060E                     	;# 
  1122  060F                     	;# 
  1123  060F                     	;# 
  1124  0610                     	;# 
  1125  0611                     	;# 
  1126  0612                     	;# 
  1127  0613                     	;# 
  1128  0614                     	;# 
  1129  0617                     	;# 
  1130  0618                     	;# 
  1131  0619                     	;# 
  1132  061A                     	;# 
  1133  061B                     	;# 
  1134  061C                     	;# 
  1135  0691                     	;# 
  1136  0692                     	;# 
  1137  0693                     	;# 
  1138  0694                     	;# 
  1139  0695                     	;# 
  1140  0696                     	;# 
  1141  0697                     	;# 
  1142  0699                     	;# 
  1143  069A                     	;# 
  1144  0711                     	;# 
  1145  0712                     	;# 
  1146  0713                     	;# 
  1147  0714                     	;# 
  1148  0715                     	;# 
  1149  0718                     	;# 
  1150  0718                     	;# 
  1151  0719                     	;# 
  1152  071A                     	;# 
  1153  071A                     	;# 
  1154  071B                     	;# 
  1155  071C                     	;# 
  1156  071D                     	;# 
  1157  0791                     	;# 
  1158  0791                     	;# 
  1159  0792                     	;# 
  1160  0793                     	;# 
  1161  0793                     	;# 
  1162  0794                     	;# 
  1163  0795                     	;# 
  1164  0795                     	;# 
  1165  0796                     	;# 
  1166  0797                     	;# 
  1167  0797                     	;# 
  1168  0798                     	;# 
  1169  0799                     	;# 
  1170  079A                     	;# 
  1171  080C                     	;# 
  1172  080C                     	;# 
  1173  080D                     	;# 
  1174  080E                     	;# 
  1175  080E                     	;# 
  1176  080F                     	;# 
  1177  0810                     	;# 
  1178  0810                     	;# 
  1179  0811                     	;# 
  1180  0812                     	;# 
  1181  0812                     	;# 
  1182  0813                     	;# 
  1183  0814                     	;# 
  1184  0815                     	;# 
  1185  0816                     	;# 
  1186  0817                     	;# 
  1187  0818                     	;# 
  1188  0819                     	;# 
  1189  081A                     	;# 
  1190  081A                     	;# 
  1191  081B                     	;# 
  1192  081C                     	;# 
  1193  081C                     	;# 
  1194  081D                     	;# 
  1195  088C                     	;# 
  1196  088D                     	;# 
  1197  088E                     	;# 
  1198  088F                     	;# 
  1199  088F                     	;# 
  1200  0890                     	;# 
  1201  0891                     	;# 
  1202  0892                     	;# 
  1203  0893                     	;# 
  1204  0893                     	;# 
  1205  0894                     	;# 
  1206  0895                     	;# 
  1207  0896                     	;# 
  1208  0897                     	;# 
  1209  0897                     	;# 
  1210  0898                     	;# 
  1211  0899                     	;# 
  1212  0D8C                     	;# 
  1213  0D8C                     	;# 
  1214  0D8D                     	;# 
  1215  0D8E                     	;# 
  1216  0D8F                     	;# 
  1217  0D8F                     	;# 
  1218  0D90                     	;# 
  1219  0D91                     	;# 
  1220  0D92                     	;# 
  1221  0D92                     	;# 
  1222  0D93                     	;# 
  1223  0D94                     	;# 
  1224  0D95                     	;# 
  1225  0D95                     	;# 
  1226  0D96                     	;# 
  1227  0D97                     	;# 
  1228  0D98                     	;# 
  1229  0D99                     	;# 
  1230  0D9A                     	;# 
  1231  0D9B                     	;# 
  1232  0D9C                     	;# 
  1233  0D9D                     	;# 
  1234  0D9E                     	;# 
  1235  0D9E                     	;# 
  1236  0D9F                     	;# 
  1237  0DA0                     	;# 
  1238  0DA1                     	;# 
  1239  0DA1                     	;# 
  1240  0DA2                     	;# 
  1241  0DA3                     	;# 
  1242  0DA4                     	;# 
  1243  0DA4                     	;# 
  1244  0DA5                     	;# 
  1245  0DA6                     	;# 
  1246  0DA7                     	;# 
  1247  0DA7                     	;# 
  1248  0DA8                     	;# 
  1249  0DA9                     	;# 
  1250  0DAA                     	;# 
  1251  0DAB                     	;# 
  1252  0DAC                     	;# 
  1253  0DAD                     	;# 
  1254  0DAE                     	;# 
  1255  0DAF                     	;# 
  1256  0E0F                     	;# 
  1257  0E10                     	;# 
  1258  0E11                     	;# 
  1259  0E12                     	;# 
  1260  0E13                     	;# 
  1261  0E14                     	;# 
  1262  0E15                     	;# 
  1263  0E16                     	;# 
  1264  0E17                     	;# 
  1265  0E18                     	;# 
  1266  0E19                     	;# 
  1267  0E1A                     	;# 
  1268  0E1B                     	;# 
  1269  0E1C                     	;# 
  1270  0E1D                     	;# 
  1271  0E1E                     	;# 
  1272  0E1F                     	;# 
  1273  0E20                     	;# 
  1274  0E21                     	;# 
  1275  0E22                     	;# 
  1276  0E23                     	;# 
  1277  0E24                     	;# 
  1278  0E25                     	;# 
  1279  0E26                     	;# 
  1280  0E27                     	;# 
  1281  0E28                     	;# 
  1282  0E29                     	;# 
  1283  0E2A                     	;# 
  1284  0E2B                     	;# 
  1285  0E2C                     	;# 
  1286  0E2D                     	;# 
  1287  0E2E                     	;# 
  1288  0E90                     	;# 
  1289  0E91                     	;# 
  1290  0E92                     	;# 
  1291  0E94                     	;# 
  1292  0E95                     	;# 
  1293  0E9C                     	;# 
  1294  0E9D                     	;# 
  1295  0E9E                     	;# 
  1296  0E9F                     	;# 
  1297  0EA0                     	;# 
  1298  0EA1                     	;# 
  1299  0EA2                     	;# 
  1300  0EA3                     	;# 
  1301  0EA4                     	;# 
  1302  0EA5                     	;# 
  1303  0EA6                     	;# 
  1304  0EA7                     	;# 
  1305  0F0F                     	;# 
  1306  0F10                     	;# 
  1307  0F11                     	;# 
  1308  0F12                     	;# 
  1309  0F13                     	;# 
  1310  0F14                     	;# 
  1311  0F15                     	;# 
  1312  0F16                     	;# 
  1313  0F17                     	;# 
  1314  0F18                     	;# 
  1315  0F19                     	;# 
  1316  0F1A                     	;# 
  1317  0F1B                     	;# 
  1318  0F1C                     	;# 
  1319  0F1D                     	;# 
  1320  0F1E                     	;# 
  1321  0F1F                     	;# 
  1322  0F20                     	;# 
  1323  0F21                     	;# 
  1324  0F22                     	;# 
  1325  0F23                     	;# 
  1326  0F24                     	;# 
  1327  0F25                     	;# 
  1328  0F26                     	;# 
  1329  0F27                     	;# 
  1330  0F28                     	;# 
  1331  0F29                     	;# 
  1332  0F2A                     	;# 
  1333  0F2B                     	;# 
  1334  0F2C                     	;# 
  1335  0F2D                     	;# 
  1336  0F2E                     	;# 
  1337  0F2F                     	;# 
  1338  0F30                     	;# 
  1339  0F31                     	;# 
  1340  0F32                     	;# 
  1341  0F33                     	;# 
  1342  0F34                     	;# 
  1343  0F35                     	;# 
  1344  0F36                     	;# 
  1345  0F37                     	;# 
  1346  0FE4                     	;# 
  1347  0FE5                     	;# 
  1348  0FE6                     	;# 
  1349  0FE7                     	;# 
  1350  0FE8                     	;# 
  1351  0FE9                     	;# 
  1352  0FEA                     	;# 
  1353  0FEB                     	;# 
  1354  0FED                     	;# 
  1355  0FEE                     	;# 
  1356  0FEF                     	;# 
  1357  0000                     	;# 
  1358  0001                     	;# 
  1359  0002                     	;# 
  1360  0003                     	;# 
  1361  0004                     	;# 
  1362  0005                     	;# 
  1363  0006                     	;# 
  1364  0007                     	;# 
  1365  0008                     	;# 
  1366  0009                     	;# 
  1367  000A                     	;# 
  1368  000B                     	;# 
  1369  000C                     	;# 
  1370  000D                     	;# 
  1371  000E                     	;# 
  1372  0010                     	;# 
  1373  0011                     	;# 
  1374  0012                     	;# 
  1375  0013                     	;# 
  1376  0014                     	;# 
  1377  0015                     	;# 
  1378  0016                     	;# 
  1379  0016                     	;# 
  1380  0017                     	;# 
  1381  0018                     	;# 
  1382  0019                     	;# 
  1383  001A                     	;# 
  1384  001A                     	;# 
  1385  001B                     	;# 
  1386  001B                     	;# 
  1387  001C                     	;# 
  1388  001D                     	;# 
  1389  001E                     	;# 
  1390  001F                     	;# 
  1391  008C                     	;# 
  1392  008D                     	;# 
  1393  008E                     	;# 
  1394  0090                     	;# 
  1395  0091                     	;# 
  1396  0092                     	;# 
  1397  0093                     	;# 
  1398  0094                     	;# 
  1399  0095                     	;# 
  1400  0096                     	;# 
  1401  0098                     	;# 
  1402  0099                     	;# 
  1403  009A                     	;# 
  1404  009B                     	;# 
  1405  009B                     	;# 
  1406  009C                     	;# 
  1407  009D                     	;# 
  1408  009E                     	;# 
  1409  009F                     	;# 
  1410  010C                     	;# 
  1411  010D                     	;# 
  1412  010E                     	;# 
  1413  0111                     	;# 
  1414  0112                     	;# 
  1415  0113                     	;# 
  1416  0114                     	;# 
  1417  0115                     	;# 
  1418  0116                     	;# 
  1419  0117                     	;# 
  1420  0118                     	;# 
  1421  0119                     	;# 
  1422  011C                     	;# 
  1423  018C                     	;# 
  1424  018D                     	;# 
  1425  018E                     	;# 
  1426  0191                     	;# 
  1427  0191                     	;# 
  1428  0192                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0194                     	;# 
  1432  0195                     	;# 
  1433  0196                     	;# 
  1434  0197                     	;# 
  1435  0199                     	;# 
  1436  0199                     	;# 
  1437  0199                     	;# 
  1438  019A                     	;# 
  1439  019A                     	;# 
  1440  019A                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019B                     	;# 
  1444  019B                     	;# 
  1445  019B                     	;# 
  1446  019C                     	;# 
  1447  019C                     	;# 
  1448  019C                     	;# 
  1449  019D                     	;# 
  1450  019D                     	;# 
  1451  019D                     	;# 
  1452  019E                     	;# 
  1453  019E                     	;# 
  1454  019E                     	;# 
  1455  019F                     	;# 
  1456  019F                     	;# 
  1457  019F                     	;# 
  1458  019F                     	;# 
  1459  019F                     	;# 
  1460  020C                     	;# 
  1461  020D                     	;# 
  1462  020E                     	;# 
  1463  0211                     	;# 
  1464  0211                     	;# 
  1465  0212                     	;# 
  1466  0212                     	;# 
  1467  0213                     	;# 
  1468  0213                     	;# 
  1469  0214                     	;# 
  1470  0214                     	;# 
  1471  0215                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0215                     	;# 
  1475  0216                     	;# 
  1476  0216                     	;# 
  1477  0217                     	;# 
  1478  0217                     	;# 
  1479  028C                     	;# 
  1480  028D                     	;# 
  1481  028E                     	;# 
  1482  0291                     	;# 
  1483  0291                     	;# 
  1484  0292                     	;# 
  1485  0293                     	;# 
  1486  0294                     	;# 
  1487  0298                     	;# 
  1488  0298                     	;# 
  1489  0299                     	;# 
  1490  029A                     	;# 
  1491  029B                     	;# 
  1492  029E                     	;# 
  1493  030C                     	;# 
  1494  030D                     	;# 
  1495  030E                     	;# 
  1496  038C                     	;# 
  1497  038D                     	;# 
  1498  038E                     	;# 
  1499  0391                     	;# 
  1500  0392                     	;# 
  1501  0393                     	;# 
  1502  0394                     	;# 
  1503  0395                     	;# 
  1504  0396                     	;# 
  1505  0397                     	;# 
  1506  0398                     	;# 
  1507  0399                     	;# 
  1508  040E                     	;# 
  1509  0413                     	;# 
  1510  0413                     	;# 
  1511  0414                     	;# 
  1512  0414                     	;# 
  1513  0415                     	;# 
  1514  0416                     	;# 
  1515  0417                     	;# 
  1516  0418                     	;# 
  1517  041A                     	;# 
  1518  041A                     	;# 
  1519  041B                     	;# 
  1520  041B                     	;# 
  1521  041C                     	;# 
  1522  041D                     	;# 
  1523  041E                     	;# 
  1524  041F                     	;# 
  1525  0493                     	;# 
  1526  0494                     	;# 
  1527  0495                     	;# 
  1528  0496                     	;# 
  1529  049A                     	;# 
  1530  049B                     	;# 
  1531  049C                     	;# 
  1532  049D                     	;# 
  1533  058C                     	;# 
  1534  058C                     	;# 
  1535  058D                     	;# 
  1536  058E                     	;# 
  1537  058E                     	;# 
  1538  058F                     	;# 
  1539  0590                     	;# 
  1540  0590                     	;# 
  1541  0591                     	;# 
  1542  0592                     	;# 
  1543  0592                     	;# 
  1544  0593                     	;# 
  1545  0594                     	;# 
  1546  0594                     	;# 
  1547  0595                     	;# 
  1548  0596                     	;# 
  1549  0596                     	;# 
  1550  0597                     	;# 
  1551  0598                     	;# 
  1552  0599                     	;# 
  1553  059A                     	;# 
  1554  059B                     	;# 
  1555  059B                     	;# 
  1556  059C                     	;# 
  1557  059D                     	;# 
  1558  060C                     	;# 
  1559  060C                     	;# 
  1560  060D                     	;# 
  1561  060E                     	;# 
  1562  060F                     	;# 
  1563  060F                     	;# 
  1564  0610                     	;# 
  1565  0611                     	;# 
  1566  0612                     	;# 
  1567  0613                     	;# 
  1568  0614                     	;# 
  1569  0617                     	;# 
  1570  0618                     	;# 
  1571  0619                     	;# 
  1572  061A                     	;# 
  1573  061B                     	;# 
  1574  061C                     	;# 
  1575  0691                     	;# 
  1576  0692                     	;# 
  1577  0693                     	;# 
  1578  0694                     	;# 
  1579  0695                     	;# 
  1580  0696                     	;# 
  1581  0697                     	;# 
  1582  0699                     	;# 
  1583  069A                     	;# 
  1584  0711                     	;# 
  1585  0712                     	;# 
  1586  0713                     	;# 
  1587  0714                     	;# 
  1588  0715                     	;# 
  1589  0718                     	;# 
  1590  0718                     	;# 
  1591  0719                     	;# 
  1592  071A                     	;# 
  1593  071A                     	;# 
  1594  071B                     	;# 
  1595  071C                     	;# 
  1596  071D                     	;# 
  1597  0791                     	;# 
  1598  0791                     	;# 
  1599  0792                     	;# 
  1600  0793                     	;# 
  1601  0793                     	;# 
  1602  0794                     	;# 
  1603  0795                     	;# 
  1604  0795                     	;# 
  1605  0796                     	;# 
  1606  0797                     	;# 
  1607  0797                     	;# 
  1608  0798                     	;# 
  1609  0799                     	;# 
  1610  079A                     	;# 
  1611  080C                     	;# 
  1612  080C                     	;# 
  1613  080D                     	;# 
  1614  080E                     	;# 
  1615  080E                     	;# 
  1616  080F                     	;# 
  1617  0810                     	;# 
  1618  0810                     	;# 
  1619  0811                     	;# 
  1620  0812                     	;# 
  1621  0812                     	;# 
  1622  0813                     	;# 
  1623  0814                     	;# 
  1624  0815                     	;# 
  1625  0816                     	;# 
  1626  0817                     	;# 
  1627  0818                     	;# 
  1628  0819                     	;# 
  1629  081A                     	;# 
  1630  081A                     	;# 
  1631  081B                     	;# 
  1632  081C                     	;# 
  1633  081C                     	;# 
  1634  081D                     	;# 
  1635  088C                     	;# 
  1636  088D                     	;# 
  1637  088E                     	;# 
  1638  088F                     	;# 
  1639  088F                     	;# 
  1640  0890                     	;# 
  1641  0891                     	;# 
  1642  0892                     	;# 
  1643  0893                     	;# 
  1644  0893                     	;# 
  1645  0894                     	;# 
  1646  0895                     	;# 
  1647  0896                     	;# 
  1648  0897                     	;# 
  1649  0897                     	;# 
  1650  0898                     	;# 
  1651  0899                     	;# 
  1652  0D8C                     	;# 
  1653  0D8C                     	;# 
  1654  0D8D                     	;# 
  1655  0D8E                     	;# 
  1656  0D8F                     	;# 
  1657  0D8F                     	;# 
  1658  0D90                     	;# 
  1659  0D91                     	;# 
  1660  0D92                     	;# 
  1661  0D92                     	;# 
  1662  0D93                     	;# 
  1663  0D94                     	;# 
  1664  0D95                     	;# 
  1665  0D95                     	;# 
  1666  0D96                     	;# 
  1667  0D97                     	;# 
  1668  0D98                     	;# 
  1669  0D99                     	;# 
  1670  0D9A                     	;# 
  1671  0D9B                     	;# 
  1672  0D9C                     	;# 
  1673  0D9D                     	;# 
  1674  0D9E                     	;# 
  1675  0D9E                     	;# 
  1676  0D9F                     	;# 
  1677  0DA0                     	;# 
  1678  0DA1                     	;# 
  1679  0DA1                     	;# 
  1680  0DA2                     	;# 
  1681  0DA3                     	;# 
  1682  0DA4                     	;# 
  1683  0DA4                     	;# 
  1684  0DA5                     	;# 
  1685  0DA6                     	;# 
  1686  0DA7                     	;# 
  1687  0DA7                     	;# 
  1688  0DA8                     	;# 
  1689  0DA9                     	;# 
  1690  0DAA                     	;# 
  1691  0DAB                     	;# 
  1692  0DAC                     	;# 
  1693  0DAD                     	;# 
  1694  0DAE                     	;# 
  1695  0DAF                     	;# 
  1696  0E0F                     	;# 
  1697  0E10                     	;# 
  1698  0E11                     	;# 
  1699  0E12                     	;# 
  1700  0E13                     	;# 
  1701  0E14                     	;# 
  1702  0E15                     	;# 
  1703  0E16                     	;# 
  1704  0E17                     	;# 
  1705  0E18                     	;# 
  1706  0E19                     	;# 
  1707  0E1A                     	;# 
  1708  0E1B                     	;# 
  1709  0E1C                     	;# 
  1710  0E1D                     	;# 
  1711  0E1E                     	;# 
  1712  0E1F                     	;# 
  1713  0E20                     	;# 
  1714  0E21                     	;# 
  1715  0E22                     	;# 
  1716  0E23                     	;# 
  1717  0E24                     	;# 
  1718  0E25                     	;# 
  1719  0E26                     	;# 
  1720  0E27                     	;# 
  1721  0E28                     	;# 
  1722  0E29                     	;# 
  1723  0E2A                     	;# 
  1724  0E2B                     	;# 
  1725  0E2C                     	;# 
  1726  0E2D                     	;# 
  1727  0E2E                     	;# 
  1728  0E90                     	;# 
  1729  0E91                     	;# 
  1730  0E92                     	;# 
  1731  0E94                     	;# 
  1732  0E95                     	;# 
  1733  0E9C                     	;# 
  1734  0E9D                     	;# 
  1735  0E9E                     	;# 
  1736  0E9F                     	;# 
  1737  0EA0                     	;# 
  1738  0EA1                     	;# 
  1739  0EA2                     	;# 
  1740  0EA3                     	;# 
  1741  0EA4                     	;# 
  1742  0EA5                     	;# 
  1743  0EA6                     	;# 
  1744  0EA7                     	;# 
  1745  0F0F                     	;# 
  1746  0F10                     	;# 
  1747  0F11                     	;# 
  1748  0F12                     	;# 
  1749  0F13                     	;# 
  1750  0F14                     	;# 
  1751  0F15                     	;# 
  1752  0F16                     	;# 
  1753  0F17                     	;# 
  1754  0F18                     	;# 
  1755  0F19                     	;# 
  1756  0F1A                     	;# 
  1757  0F1B                     	;# 
  1758  0F1C                     	;# 
  1759  0F1D                     	;# 
  1760  0F1E                     	;# 
  1761  0F1F                     	;# 
  1762  0F20                     	;# 
  1763  0F21                     	;# 
  1764  0F22                     	;# 
  1765  0F23                     	;# 
  1766  0F24                     	;# 
  1767  0F25                     	;# 
  1768  0F26                     	;# 
  1769  0F27                     	;# 
  1770  0F28                     	;# 
  1771  0F29                     	;# 
  1772  0F2A                     	;# 
  1773  0F2B                     	;# 
  1774  0F2C                     	;# 
  1775  0F2D                     	;# 
  1776  0F2E                     	;# 
  1777  0F2F                     	;# 
  1778  0F30                     	;# 
  1779  0F31                     	;# 
  1780  0F32                     	;# 
  1781  0F33                     	;# 
  1782  0F34                     	;# 
  1783  0F35                     	;# 
  1784  0F36                     	;# 
  1785  0F37                     	;# 
  1786  0FE4                     	;# 
  1787  0FE5                     	;# 
  1788  0FE6                     	;# 
  1789  0FE7                     	;# 
  1790  0FE8                     	;# 
  1791  0FE9                     	;# 
  1792  0FEA                     	;# 
  1793  0FEB                     	;# 
  1794  0FED                     	;# 
  1795  0FEE                     	;# 
  1796  0FEF                     	;# 
  1797  0000                     	;# 
  1798  0001                     	;# 
  1799  0002                     	;# 
  1800  0003                     	;# 
  1801  0004                     	;# 
  1802  0005                     	;# 
  1803  0006                     	;# 
  1804  0007                     	;# 
  1805  0008                     	;# 
  1806  0009                     	;# 
  1807  000A                     	;# 
  1808  000B                     	;# 
  1809  000C                     	;# 
  1810  000D                     	;# 
  1811  000E                     	;# 
  1812  0010                     	;# 
  1813  0011                     	;# 
  1814  0012                     	;# 
  1815  0013                     	;# 
  1816  0014                     	;# 
  1817  0015                     	;# 
  1818  0016                     	;# 
  1819  0016                     	;# 
  1820  0017                     	;# 
  1821  0018                     	;# 
  1822  0019                     	;# 
  1823  001A                     	;# 
  1824  001A                     	;# 
  1825  001B                     	;# 
  1826  001B                     	;# 
  1827  001C                     	;# 
  1828  001D                     	;# 
  1829  001E                     	;# 
  1830  001F                     	;# 
  1831  008C                     	;# 
  1832  008D                     	;# 
  1833  008E                     	;# 
  1834  0090                     	;# 
  1835  0091                     	;# 
  1836  0092                     	;# 
  1837  0093                     	;# 
  1838  0094                     	;# 
  1839  0095                     	;# 
  1840  0096                     	;# 
  1841  0098                     	;# 
  1842  0099                     	;# 
  1843  009A                     	;# 
  1844  009B                     	;# 
  1845  009B                     	;# 
  1846  009C                     	;# 
  1847  009D                     	;# 
  1848  009E                     	;# 
  1849  009F                     	;# 
  1850  010C                     	;# 
  1851  010D                     	;# 
  1852  010E                     	;# 
  1853  0111                     	;# 
  1854  0112                     	;# 
  1855  0113                     	;# 
  1856  0114                     	;# 
  1857  0115                     	;# 
  1858  0116                     	;# 
  1859  0117                     	;# 
  1860  0118                     	;# 
  1861  0119                     	;# 
  1862  011C                     	;# 
  1863  018C                     	;# 
  1864  018D                     	;# 
  1865  018E                     	;# 
  1866  0191                     	;# 
  1867  0191                     	;# 
  1868  0192                     	;# 
  1869  0193                     	;# 
  1870  0193                     	;# 
  1871  0194                     	;# 
  1872  0195                     	;# 
  1873  0196                     	;# 
  1874  0197                     	;# 
  1875  0199                     	;# 
  1876  0199                     	;# 
  1877  0199                     	;# 
  1878  019A                     	;# 
  1879  019A                     	;# 
  1880  019A                     	;# 
  1881  019B                     	;# 
  1882  019B                     	;# 
  1883  019B                     	;# 
  1884  019B                     	;# 
  1885  019B                     	;# 
  1886  019C                     	;# 
  1887  019C                     	;# 
  1888  019C                     	;# 
  1889  019D                     	;# 
  1890  019D                     	;# 
  1891  019D                     	;# 
  1892  019E                     	;# 
  1893  019E                     	;# 
  1894  019E                     	;# 
  1895  019F                     	;# 
  1896  019F                     	;# 
  1897  019F                     	;# 
  1898  019F                     	;# 
  1899  019F                     	;# 
  1900  020C                     	;# 
  1901  020D                     	;# 
  1902  020E                     	;# 
  1903  0211                     	;# 
  1904  0211                     	;# 
  1905  0212                     	;# 
  1906  0212                     	;# 
  1907  0213                     	;# 
  1908  0213                     	;# 
  1909  0214                     	;# 
  1910  0214                     	;# 
  1911  0215                     	;# 
  1912  0215                     	;# 
  1913  0215                     	;# 
  1914  0215                     	;# 
  1915  0216                     	;# 
  1916  0216                     	;# 
  1917  0217                     	;# 
  1918  0217                     	;# 
  1919  028C                     	;# 
  1920  028D                     	;# 
  1921  028E                     	;# 
  1922  0291                     	;# 
  1923  0291                     	;# 
  1924  0292                     	;# 
  1925  0293                     	;# 
  1926  0294                     	;# 
  1927  0298                     	;# 
  1928  0298                     	;# 
  1929  0299                     	;# 
  1930  029A                     	;# 
  1931  029B                     	;# 
  1932  029E                     	;# 
  1933  030C                     	;# 
  1934  030D                     	;# 
  1935  030E                     	;# 
  1936  038C                     	;# 
  1937  038D                     	;# 
  1938  038E                     	;# 
  1939  0391                     	;# 
  1940  0392                     	;# 
  1941  0393                     	;# 
  1942  0394                     	;# 
  1943  0395                     	;# 
  1944  0396                     	;# 
  1945  0397                     	;# 
  1946  0398                     	;# 
  1947  0399                     	;# 
  1948  040E                     	;# 
  1949  0413                     	;# 
  1950  0413                     	;# 
  1951  0414                     	;# 
  1952  0414                     	;# 
  1953  0415                     	;# 
  1954  0416                     	;# 
  1955  0417                     	;# 
  1956  0418                     	;# 
  1957  041A                     	;# 
  1958  041A                     	;# 
  1959  041B                     	;# 
  1960  041B                     	;# 
  1961  041C                     	;# 
  1962  041D                     	;# 
  1963  041E                     	;# 
  1964  041F                     	;# 
  1965  0493                     	;# 
  1966  0494                     	;# 
  1967  0495                     	;# 
  1968  0496                     	;# 
  1969  049A                     	;# 
  1970  049B                     	;# 
  1971  049C                     	;# 
  1972  049D                     	;# 
  1973  058C                     	;# 
  1974  058C                     	;# 
  1975  058D                     	;# 
  1976  058E                     	;# 
  1977  058E                     	;# 
  1978  058F                     	;# 
  1979  0590                     	;# 
  1980  0590                     	;# 
  1981  0591                     	;# 
  1982  0592                     	;# 
  1983  0592                     	;# 
  1984  0593                     	;# 
  1985  0594                     	;# 
  1986  0594                     	;# 
  1987  0595                     	;# 
  1988  0596                     	;# 
  1989  0596                     	;# 
  1990  0597                     	;# 
  1991  0598                     	;# 
  1992  0599                     	;# 
  1993  059A                     	;# 
  1994  059B                     	;# 
  1995  059B                     	;# 
  1996  059C                     	;# 
  1997  059D                     	;# 
  1998  060C                     	;# 
  1999  060C                     	;# 
  2000  060D                     	;# 
  2001  060E                     	;# 
  2002  060F                     	;# 
  2003  060F                     	;# 
  2004  0610                     	;# 
  2005  0611                     	;# 
  2006  0612                     	;# 
  2007  0613                     	;# 
  2008  0614                     	;# 
  2009  0617                     	;# 
  2010  0618                     	;# 
  2011  0619                     	;# 
  2012  061A                     	;# 
  2013  061B                     	;# 
  2014  061C                     	;# 
  2015  0691                     	;# 
  2016  0692                     	;# 
  2017  0693                     	;# 
  2018  0694                     	;# 
  2019  0695                     	;# 
  2020  0696                     	;# 
  2021  0697                     	;# 
  2022  0699                     	;# 
  2023  069A                     	;# 
  2024  0711                     	;# 
  2025  0712                     	;# 
  2026  0713                     	;# 
  2027  0714                     	;# 
  2028  0715                     	;# 
  2029  0718                     	;# 
  2030  0718                     	;# 
  2031  0719                     	;# 
  2032  071A                     	;# 
  2033  071A                     	;# 
  2034  071B                     	;# 
  2035  071C                     	;# 
  2036  071D                     	;# 
  2037  0791                     	;# 
  2038  0791                     	;# 
  2039  0792                     	;# 
  2040  0793                     	;# 
  2041  0793                     	;# 
  2042  0794                     	;# 
  2043  0795                     	;# 
  2044  0795                     	;# 
  2045  0796                     	;# 
  2046  0797                     	;# 
  2047  0797                     	;# 
  2048  0798                     	;# 
  2049  0799                     	;# 
  2050  079A                     	;# 
  2051  080C                     	;# 
  2052  080C                     	;# 
  2053  080D                     	;# 
  2054  080E                     	;# 
  2055  080E                     	;# 
  2056  080F                     	;# 
  2057  0810                     	;# 
  2058  0810                     	;# 
  2059  0811                     	;# 
  2060  0812                     	;# 
  2061  0812                     	;# 
  2062  0813                     	;# 
  2063  0814                     	;# 
  2064  0815                     	;# 
  2065  0816                     	;# 
  2066  0817                     	;# 
  2067  0818                     	;# 
  2068  0819                     	;# 
  2069  081A                     	;# 
  2070  081A                     	;# 
  2071  081B                     	;# 
  2072  081C                     	;# 
  2073  081C                     	;# 
  2074  081D                     	;# 
  2075  088C                     	;# 
  2076  088D                     	;# 
  2077  088E                     	;# 
  2078  088F                     	;# 
  2079  088F                     	;# 
  2080  0890                     	;# 
  2081  0891                     	;# 
  2082  0892                     	;# 
  2083  0893                     	;# 
  2084  0893                     	;# 
  2085  0894                     	;# 
  2086  0895                     	;# 
  2087  0896                     	;# 
  2088  0897                     	;# 
  2089  0897                     	;# 
  2090  0898                     	;# 
  2091  0899                     	;# 
  2092  0D8C                     	;# 
  2093  0D8C                     	;# 
  2094  0D8D                     	;# 
  2095  0D8E                     	;# 
  2096  0D8F                     	;# 
  2097  0D8F                     	;# 
  2098  0D90                     	;# 
  2099  0D91                     	;# 
  2100  0D92                     	;# 
  2101  0D92                     	;# 
  2102  0D93                     	;# 
  2103  0D94                     	;# 
  2104  0D95                     	;# 
  2105  0D95                     	;# 
  2106  0D96                     	;# 
  2107  0D97                     	;# 
  2108  0D98                     	;# 
  2109  0D99                     	;# 
  2110  0D9A                     	;# 
  2111  0D9B                     	;# 
  2112  0D9C                     	;# 
  2113  0D9D                     	;# 
  2114  0D9E                     	;# 
  2115  0D9E                     	;# 
  2116  0D9F                     	;# 
  2117  0DA0                     	;# 
  2118  0DA1                     	;# 
  2119  0DA1                     	;# 
  2120  0DA2                     	;# 
  2121  0DA3                     	;# 
  2122  0DA4                     	;# 
  2123  0DA4                     	;# 
  2124  0DA5                     	;# 
  2125  0DA6                     	;# 
  2126  0DA7                     	;# 
  2127  0DA7                     	;# 
  2128  0DA8                     	;# 
  2129  0DA9                     	;# 
  2130  0DAA                     	;# 
  2131  0DAB                     	;# 
  2132  0DAC                     	;# 
  2133  0DAD                     	;# 
  2134  0DAE                     	;# 
  2135  0DAF                     	;# 
  2136  0E0F                     	;# 
  2137  0E10                     	;# 
  2138  0E11                     	;# 
  2139  0E12                     	;# 
  2140  0E13                     	;# 
  2141  0E14                     	;# 
  2142  0E15                     	;# 
  2143  0E16                     	;# 
  2144  0E17                     	;# 
  2145  0E18                     	;# 
  2146  0E19                     	;# 
  2147  0E1A                     	;# 
  2148  0E1B                     	;# 
  2149  0E1C                     	;# 
  2150  0E1D                     	;# 
  2151  0E1E                     	;# 
  2152  0E1F                     	;# 
  2153  0E20                     	;# 
  2154  0E21                     	;# 
  2155  0E22                     	;# 
  2156  0E23                     	;# 
  2157  0E24                     	;# 
  2158  0E25                     	;# 
  2159  0E26                     	;# 
  2160  0E27                     	;# 
  2161  0E28                     	;# 
  2162  0E29                     	;# 
  2163  0E2A                     	;# 
  2164  0E2B                     	;# 
  2165  0E2C                     	;# 
  2166  0E2D                     	;# 
  2167  0E2E                     	;# 
  2168  0E90                     	;# 
  2169  0E91                     	;# 
  2170  0E92                     	;# 
  2171  0E94                     	;# 
  2172  0E95                     	;# 
  2173  0E9C                     	;# 
  2174  0E9D                     	;# 
  2175  0E9E                     	;# 
  2176  0E9F                     	;# 
  2177  0EA0                     	;# 
  2178  0EA1                     	;# 
  2179  0EA2                     	;# 
  2180  0EA3                     	;# 
  2181  0EA4                     	;# 
  2182  0EA5                     	;# 
  2183  0EA6                     	;# 
  2184  0EA7                     	;# 
  2185  0F0F                     	;# 
  2186  0F10                     	;# 
  2187  0F11                     	;# 
  2188  0F12                     	;# 
  2189  0F13                     	;# 
  2190  0F14                     	;# 
  2191  0F15                     	;# 
  2192  0F16                     	;# 
  2193  0F17                     	;# 
  2194  0F18                     	;# 
  2195  0F19                     	;# 
  2196  0F1A                     	;# 
  2197  0F1B                     	;# 
  2198  0F1C                     	;# 
  2199  0F1D                     	;# 
  2200  0F1E                     	;# 
  2201  0F1F                     	;# 
  2202  0F20                     	;# 
  2203  0F21                     	;# 
  2204  0F22                     	;# 
  2205  0F23                     	;# 
  2206  0F24                     	;# 
  2207  0F25                     	;# 
  2208  0F26                     	;# 
  2209  0F27                     	;# 
  2210  0F28                     	;# 
  2211  0F29                     	;# 
  2212  0F2A                     	;# 
  2213  0F2B                     	;# 
  2214  0F2C                     	;# 
  2215  0F2D                     	;# 
  2216  0F2E                     	;# 
  2217  0F2F                     	;# 
  2218  0F30                     	;# 
  2219  0F31                     	;# 
  2220  0F32                     	;# 
  2221  0F33                     	;# 
  2222  0F34                     	;# 
  2223  0F35                     	;# 
  2224  0F36                     	;# 
  2225  0F37                     	;# 
  2226  0FE4                     	;# 
  2227  0FE5                     	;# 
  2228  0FE6                     	;# 
  2229  0FE7                     	;# 
  2230  0FE8                     	;# 
  2231  0FE9                     	;# 
  2232  0FEA                     	;# 
  2233  0FEB                     	;# 
  2234  0FED                     	;# 
  2235  0FEE                     	;# 
  2236  0FEF                     	;# 
  2237  0000                     	;# 
  2238  0001                     	;# 
  2239  0002                     	;# 
  2240  0003                     	;# 
  2241  0004                     	;# 
  2242  0005                     	;# 
  2243  0006                     	;# 
  2244  0007                     	;# 
  2245  0008                     	;# 
  2246  0009                     	;# 
  2247  000A                     	;# 
  2248  000B                     	;# 
  2249  000C                     	;# 
  2250  000D                     	;# 
  2251  000E                     	;# 
  2252  0010                     	;# 
  2253  0011                     	;# 
  2254  0012                     	;# 
  2255  0013                     	;# 
  2256  0014                     	;# 
  2257  0015                     	;# 
  2258  0016                     	;# 
  2259  0016                     	;# 
  2260  0017                     	;# 
  2261  0018                     	;# 
  2262  0019                     	;# 
  2263  001A                     	;# 
  2264  001A                     	;# 
  2265  001B                     	;# 
  2266  001B                     	;# 
  2267  001C                     	;# 
  2268  001D                     	;# 
  2269  001E                     	;# 
  2270  001F                     	;# 
  2271  008C                     	;# 
  2272  008D                     	;# 
  2273  008E                     	;# 
  2274  0090                     	;# 
  2275  0091                     	;# 
  2276  0092                     	;# 
  2277  0093                     	;# 
  2278  0094                     	;# 
  2279  0095                     	;# 
  2280  0096                     	;# 
  2281  0098                     	;# 
  2282  0099                     	;# 
  2283  009A                     	;# 
  2284  009B                     	;# 
  2285  009B                     	;# 
  2286  009C                     	;# 
  2287  009D                     	;# 
  2288  009E                     	;# 
  2289  009F                     	;# 
  2290  010C                     	;# 
  2291  010D                     	;# 
  2292  010E                     	;# 
  2293  0111                     	;# 
  2294  0112                     	;# 
  2295  0113                     	;# 
  2296  0114                     	;# 
  2297  0115                     	;# 
  2298  0116                     	;# 
  2299  0117                     	;# 
  2300  0118                     	;# 
  2301  0119                     	;# 
  2302  011C                     	;# 
  2303  018C                     	;# 
  2304  018D                     	;# 
  2305  018E                     	;# 
  2306  0191                     	;# 
  2307  0191                     	;# 
  2308  0192                     	;# 
  2309  0193                     	;# 
  2310  0193                     	;# 
  2311  0194                     	;# 
  2312  0195                     	;# 
  2313  0196                     	;# 
  2314  0197                     	;# 
  2315  0199                     	;# 
  2316  0199                     	;# 
  2317  0199                     	;# 
  2318  019A                     	;# 
  2319  019A                     	;# 
  2320  019A                     	;# 
  2321  019B                     	;# 
  2322  019B                     	;# 
  2323  019B                     	;# 
  2324  019B                     	;# 
  2325  019B                     	;# 
  2326  019C                     	;# 
  2327  019C                     	;# 
  2328  019C                     	;# 
  2329  019D                     	;# 
  2330  019D                     	;# 
  2331  019D                     	;# 
  2332  019E                     	;# 
  2333  019E                     	;# 
  2334  019E                     	;# 
  2335  019F                     	;# 
  2336  019F                     	;# 
  2337  019F                     	;# 
  2338  019F                     	;# 
  2339  019F                     	;# 
  2340  020C                     	;# 
  2341  020D                     	;# 
  2342  020E                     	;# 
  2343  0211                     	;# 
  2344  0211                     	;# 
  2345  0212                     	;# 
  2346  0212                     	;# 
  2347  0213                     	;# 
  2348  0213                     	;# 
  2349  0214                     	;# 
  2350  0214                     	;# 
  2351  0215                     	;# 
  2352  0215                     	;# 
  2353  0215                     	;# 
  2354  0215                     	;# 
  2355  0216                     	;# 
  2356  0216                     	;# 
  2357  0217                     	;# 
  2358  0217                     	;# 
  2359  028C                     	;# 
  2360  028D                     	;# 
  2361  028E                     	;# 
  2362  0291                     	;# 
  2363  0291                     	;# 
  2364  0292                     	;# 
  2365  0293                     	;# 
  2366  0294                     	;# 
  2367  0298                     	;# 
  2368  0298                     	;# 
  2369  0299                     	;# 
  2370  029A                     	;# 
  2371  029B                     	;# 
  2372  029E                     	;# 
  2373  030C                     	;# 
  2374  030D                     	;# 
  2375  030E                     	;# 
  2376  038C                     	;# 
  2377  038D                     	;# 
  2378  038E                     	;# 
  2379  0391                     	;# 
  2380  0392                     	;# 
  2381  0393                     	;# 
  2382  0394                     	;# 
  2383  0395                     	;# 
  2384  0396                     	;# 
  2385  0397                     	;# 
  2386  0398                     	;# 
  2387  0399                     	;# 
  2388  040E                     	;# 
  2389  0413                     	;# 
  2390  0413                     	;# 
  2391  0414                     	;# 
  2392  0414                     	;# 
  2393  0415                     	;# 
  2394  0416                     	;# 
  2395  0417                     	;# 
  2396  0418                     	;# 
  2397  041A                     	;# 
  2398  041A                     	;# 
  2399  041B                     	;# 
  2400  041B                     	;# 
  2401  041C                     	;# 
  2402  041D                     	;# 
  2403  041E                     	;# 
  2404  041F                     	;# 
  2405  0493                     	;# 
  2406  0494                     	;# 
  2407  0495                     	;# 
  2408  0496                     	;# 
  2409  049A                     	;# 
  2410  049B                     	;# 
  2411  049C                     	;# 
  2412  049D                     	;# 
  2413  058C                     	;# 
  2414  058C                     	;# 
  2415  058D                     	;# 
  2416  058E                     	;# 
  2417  058E                     	;# 
  2418  058F                     	;# 
  2419  0590                     	;# 
  2420  0590                     	;# 
  2421  0591                     	;# 
  2422  0592                     	;# 
  2423  0592                     	;# 
  2424  0593                     	;# 
  2425  0594                     	;# 
  2426  0594                     	;# 
  2427  0595                     	;# 
  2428  0596                     	;# 
  2429  0596                     	;# 
  2430  0597                     	;# 
  2431  0598                     	;# 
  2432  0599                     	;# 
  2433  059A                     	;# 
  2434  059B                     	;# 
  2435  059B                     	;# 
  2436  059C                     	;# 
  2437  059D                     	;# 
  2438  060C                     	;# 
  2439  060C                     	;# 
  2440  060D                     	;# 
  2441  060E                     	;# 
  2442  060F                     	;# 
  2443  060F                     	;# 
  2444  0610                     	;# 
  2445  0611                     	;# 
  2446  0612                     	;# 
  2447  0613                     	;# 
  2448  0614                     	;# 
  2449  0617                     	;# 
  2450  0618                     	;# 
  2451  0619                     	;# 
  2452  061A                     	;# 
  2453  061B                     	;# 
  2454  061C                     	;# 
  2455  0691                     	;# 
  2456  0692                     	;# 
  2457  0693                     	;# 
  2458  0694                     	;# 
  2459  0695                     	;# 
  2460  0696                     	;# 
  2461  0697                     	;# 
  2462  0699                     	;# 
  2463  069A                     	;# 
  2464  0711                     	;# 
  2465  0712                     	;# 
  2466  0713                     	;# 
  2467  0714                     	;# 
  2468  0715                     	;# 
  2469  0718                     	;# 
  2470  0718                     	;# 
  2471  0719                     	;# 
  2472  071A                     	;# 
  2473  071A                     	;# 
  2474  071B                     	;# 
  2475  071C                     	;# 
  2476  071D                     	;# 
  2477  0791                     	;# 
  2478  0791                     	;# 
  2479  0792                     	;# 
  2480  0793                     	;# 
  2481  0793                     	;# 
  2482  0794                     	;# 
  2483  0795                     	;# 
  2484  0795                     	;# 
  2485  0796                     	;# 
  2486  0797                     	;# 
  2487  0797                     	;# 
  2488  0798                     	;# 
  2489  0799                     	;# 
  2490  079A                     	;# 
  2491  080C                     	;# 
  2492  080C                     	;# 
  2493  080D                     	;# 
  2494  080E                     	;# 
  2495  080E                     	;# 
  2496  080F                     	;# 
  2497  0810                     	;# 
  2498  0810                     	;# 
  2499  0811                     	;# 
  2500  0812                     	;# 
  2501  0812                     	;# 
  2502  0813                     	;# 
  2503  0814                     	;# 
  2504  0815                     	;# 
  2505  0816                     	;# 
  2506  0817                     	;# 
  2507  0818                     	;# 
  2508  0819                     	;# 
  2509  081A                     	;# 
  2510  081A                     	;# 
  2511  081B                     	;# 
  2512  081C                     	;# 
  2513  081C                     	;# 
  2514  081D                     	;# 
  2515  088C                     	;# 
  2516  088D                     	;# 
  2517  088E                     	;# 
  2518  088F                     	;# 
  2519  088F                     	;# 
  2520  0890                     	;# 
  2521  0891                     	;# 
  2522  0892                     	;# 
  2523  0893                     	;# 
  2524  0893                     	;# 
  2525  0894                     	;# 
  2526  0895                     	;# 
  2527  0896                     	;# 
  2528  0897                     	;# 
  2529  0897                     	;# 
  2530  0898                     	;# 
  2531  0899                     	;# 
  2532  0D8C                     	;# 
  2533  0D8C                     	;# 
  2534  0D8D                     	;# 
  2535  0D8E                     	;# 
  2536  0D8F                     	;# 
  2537  0D8F                     	;# 
  2538  0D90                     	;# 
  2539  0D91                     	;# 
  2540  0D92                     	;# 
  2541  0D92                     	;# 
  2542  0D93                     	;# 
  2543  0D94                     	;# 
  2544  0D95                     	;# 
  2545  0D95                     	;# 
  2546  0D96                     	;# 
  2547  0D97                     	;# 
  2548  0D98                     	;# 
  2549  0D99                     	;# 
  2550  0D9A                     	;# 
  2551  0D9B                     	;# 
  2552  0D9C                     	;# 
  2553  0D9D                     	;# 
  2554  0D9E                     	;# 
  2555  0D9E                     	;# 
  2556  0D9F                     	;# 
  2557  0DA0                     	;# 
  2558  0DA1                     	;# 
  2559  0DA1                     	;# 
  2560  0DA2                     	;# 
  2561  0DA3                     	;# 
  2562  0DA4                     	;# 
  2563  0DA4                     	;# 
  2564  0DA5                     	;# 
  2565  0DA6                     	;# 
  2566  0DA7                     	;# 
  2567  0DA7                     	;# 
  2568  0DA8                     	;# 
  2569  0DA9                     	;# 
  2570  0DAA                     	;# 
  2571  0DAB                     	;# 
  2572  0DAC                     	;# 
  2573  0DAD                     	;# 
  2574  0DAE                     	;# 
  2575  0DAF                     	;# 
  2576  0E0F                     	;# 
  2577  0E10                     	;# 
  2578  0E11                     	;# 
  2579  0E12                     	;# 
  2580  0E13                     	;# 
  2581  0E14                     	;# 
  2582  0E15                     	;# 
  2583  0E16                     	;# 
  2584  0E17                     	;# 
  2585  0E18                     	;# 
  2586  0E19                     	;# 
  2587  0E1A                     	;# 
  2588  0E1B                     	;# 
  2589  0E1C                     	;# 
  2590  0E1D                     	;# 
  2591  0E1E                     	;# 
  2592  0E1F                     	;# 
  2593  0E20                     	;# 
  2594  0E21                     	;# 
  2595  0E22                     	;# 
  2596  0E23                     	;# 
  2597  0E24                     	;# 
  2598  0E25                     	;# 
  2599  0E26                     	;# 
  2600  0E27                     	;# 
  2601  0E28                     	;# 
  2602  0E29                     	;# 
  2603  0E2A                     	;# 
  2604  0E2B                     	;# 
  2605  0E2C                     	;# 
  2606  0E2D                     	;# 
  2607  0E2E                     	;# 
  2608  0E90                     	;# 
  2609  0E91                     	;# 
  2610  0E92                     	;# 
  2611  0E94                     	;# 
  2612  0E95                     	;# 
  2613  0E9C                     	;# 
  2614  0E9D                     	;# 
  2615  0E9E                     	;# 
  2616  0E9F                     	;# 
  2617  0EA0                     	;# 
  2618  0EA1                     	;# 
  2619  0EA2                     	;# 
  2620  0EA3                     	;# 
  2621  0EA4                     	;# 
  2622  0EA5                     	;# 
  2623  0EA6                     	;# 
  2624  0EA7                     	;# 
  2625  0F0F                     	;# 
  2626  0F10                     	;# 
  2627  0F11                     	;# 
  2628  0F12                     	;# 
  2629  0F13                     	;# 
  2630  0F14                     	;# 
  2631  0F15                     	;# 
  2632  0F16                     	;# 
  2633  0F17                     	;# 
  2634  0F18                     	;# 
  2635  0F19                     	;# 
  2636  0F1A                     	;# 
  2637  0F1B                     	;# 
  2638  0F1C                     	;# 
  2639  0F1D                     	;# 
  2640  0F1E                     	;# 
  2641  0F1F                     	;# 
  2642  0F20                     	;# 
  2643  0F21                     	;# 
  2644  0F22                     	;# 
  2645  0F23                     	;# 
  2646  0F24                     	;# 
  2647  0F25                     	;# 
  2648  0F26                     	;# 
  2649  0F27                     	;# 
  2650  0F28                     	;# 
  2651  0F29                     	;# 
  2652  0F2A                     	;# 
  2653  0F2B                     	;# 
  2654  0F2C                     	;# 
  2655  0F2D                     	;# 
  2656  0F2E                     	;# 
  2657  0F2F                     	;# 
  2658  0F30                     	;# 
  2659  0F31                     	;# 
  2660  0F32                     	;# 
  2661  0F33                     	;# 
  2662  0F34                     	;# 
  2663  0F35                     	;# 
  2664  0F36                     	;# 
  2665  0F37                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE9                     	;# 
  2672  0FEA                     	;# 
  2673  0FEB                     	;# 
  2674  0FED                     	;# 
  2675  0FEE                     	;# 
  2676  0FEF                     	;# 
  2677  0000                     	;# 
  2678  0001                     	;# 
  2679  0002                     	;# 
  2680  0003                     	;# 
  2681  0004                     	;# 
  2682  0005                     	;# 
  2683  0006                     	;# 
  2684  0007                     	;# 
  2685  0008                     	;# 
  2686  0009                     	;# 
  2687  000A                     	;# 
  2688  000B                     	;# 
  2689  000C                     	;# 
  2690  000D                     	;# 
  2691  000E                     	;# 
  2692  0010                     	;# 
  2693  0011                     	;# 
  2694  0012                     	;# 
  2695  0013                     	;# 
  2696  0014                     	;# 
  2697  0015                     	;# 
  2698  0016                     	;# 
  2699  0016                     	;# 
  2700  0017                     	;# 
  2701  0018                     	;# 
  2702  0019                     	;# 
  2703  001A                     	;# 
  2704  001A                     	;# 
  2705  001B                     	;# 
  2706  001B                     	;# 
  2707  001C                     	;# 
  2708  001D                     	;# 
  2709  001E                     	;# 
  2710  001F                     	;# 
  2711  008C                     	;# 
  2712  008D                     	;# 
  2713  008E                     	;# 
  2714  0090                     	;# 
  2715  0091                     	;# 
  2716  0092                     	;# 
  2717  0093                     	;# 
  2718  0094                     	;# 
  2719  0095                     	;# 
  2720  0096                     	;# 
  2721  0098                     	;# 
  2722  0099                     	;# 
  2723  009A                     	;# 
  2724  009B                     	;# 
  2725  009B                     	;# 
  2726  009C                     	;# 
  2727  009D                     	;# 
  2728  009E                     	;# 
  2729  009F                     	;# 
  2730  010C                     	;# 
  2731  010D                     	;# 
  2732  010E                     	;# 
  2733  0111                     	;# 
  2734  0112                     	;# 
  2735  0113                     	;# 
  2736  0114                     	;# 
  2737  0115                     	;# 
  2738  0116                     	;# 
  2739  0117                     	;# 
  2740  0118                     	;# 
  2741  0119                     	;# 
  2742  011C                     	;# 
  2743  018C                     	;# 
  2744  018D                     	;# 
  2745  018E                     	;# 
  2746  0191                     	;# 
  2747  0191                     	;# 
  2748  0192                     	;# 
  2749  0193                     	;# 
  2750  0193                     	;# 
  2751  0194                     	;# 
  2752  0195                     	;# 
  2753  0196                     	;# 
  2754  0197                     	;# 
  2755  0199                     	;# 
  2756  0199                     	;# 
  2757  0199                     	;# 
  2758  019A                     	;# 
  2759  019A                     	;# 
  2760  019A                     	;# 
  2761  019B                     	;# 
  2762  019B                     	;# 
  2763  019B                     	;# 
  2764  019B                     	;# 
  2765  019B                     	;# 
  2766  019C                     	;# 
  2767  019C                     	;# 
  2768  019C                     	;# 
  2769  019D                     	;# 
  2770  019D                     	;# 
  2771  019D                     	;# 
  2772  019E                     	;# 
  2773  019E                     	;# 
  2774  019E                     	;# 
  2775  019F                     	;# 
  2776  019F                     	;# 
  2777  019F                     	;# 
  2778  019F                     	;# 
  2779  019F                     	;# 
  2780  020C                     	;# 
  2781  020D                     	;# 
  2782  020E                     	;# 
  2783  0211                     	;# 
  2784  0211                     	;# 
  2785  0212                     	;# 
  2786  0212                     	;# 
  2787  0213                     	;# 
  2788  0213                     	;# 
  2789  0214                     	;# 
  2790  0214                     	;# 
  2791  0215                     	;# 
  2792  0215                     	;# 
  2793  0215                     	;# 
  2794  0215                     	;# 
  2795  0216                     	;# 
  2796  0216                     	;# 
  2797  0217                     	;# 
  2798  0217                     	;# 
  2799  028C                     	;# 
  2800  028D                     	;# 
  2801  028E                     	;# 
  2802  0291                     	;# 
  2803  0291                     	;# 
  2804  0292                     	;# 
  2805  0293                     	;# 
  2806  0294                     	;# 
  2807  0298                     	;# 
  2808  0298                     	;# 
  2809  0299                     	;# 
  2810  029A                     	;# 
  2811  029B                     	;# 
  2812  029E                     	;# 
  2813  030C                     	;# 
  2814  030D                     	;# 
  2815  030E                     	;# 
  2816  038C                     	;# 
  2817  038D                     	;# 
  2818  038E                     	;# 
  2819  0391                     	;# 
  2820  0392                     	;# 
  2821  0393                     	;# 
  2822  0394                     	;# 
  2823  0395                     	;# 
  2824  0396                     	;# 
  2825  0397                     	;# 
  2826  0398                     	;# 
  2827  0399                     	;# 
  2828  040E                     	;# 
  2829  0413                     	;# 
  2830  0413                     	;# 
  2831  0414                     	;# 
  2832  0414                     	;# 
  2833  0415                     	;# 
  2834  0416                     	;# 
  2835  0417                     	;# 
  2836  0418                     	;# 
  2837  041A                     	;# 
  2838  041A                     	;# 
  2839  041B                     	;# 
  2840  041B                     	;# 
  2841  041C                     	;# 
  2842  041D                     	;# 
  2843  041E                     	;# 
  2844  041F                     	;# 
  2845  0493                     	;# 
  2846  0494                     	;# 
  2847  0495                     	;# 
  2848  0496                     	;# 
  2849  049A                     	;# 
  2850  049B                     	;# 
  2851  049C                     	;# 
  2852  049D                     	;# 
  2853  058C                     	;# 
  2854  058C                     	;# 
  2855  058D                     	;# 
  2856  058E                     	;# 
  2857  058E                     	;# 
  2858  058F                     	;# 
  2859  0590                     	;# 
  2860  0590                     	;# 
  2861  0591                     	;# 
  2862  0592                     	;# 
  2863  0592                     	;# 
  2864  0593                     	;# 
  2865  0594                     	;# 
  2866  0594                     	;# 
  2867  0595                     	;# 
  2868  0596                     	;# 
  2869  0596                     	;# 
  2870  0597                     	;# 
  2871  0598                     	;# 
  2872  0599                     	;# 
  2873  059A                     	;# 
  2874  059B                     	;# 
  2875  059B                     	;# 
  2876  059C                     	;# 
  2877  059D                     	;# 
  2878  060C                     	;# 
  2879  060C                     	;# 
  2880  060D                     	;# 
  2881  060E                     	;# 
  2882  060F                     	;# 
  2883  060F                     	;# 
  2884  0610                     	;# 
  2885  0611                     	;# 
  2886  0612                     	;# 
  2887  0613                     	;# 
  2888  0614                     	;# 
  2889  0617                     	;# 
  2890  0618                     	;# 
  2891  0619                     	;# 
  2892  061A                     	;# 
  2893  061B                     	;# 
  2894  061C                     	;# 
  2895  0691                     	;# 
  2896  0692                     	;# 
  2897  0693                     	;# 
  2898  0694                     	;# 
  2899  0695                     	;# 
  2900  0696                     	;# 
  2901  0697                     	;# 
  2902  0699                     	;# 
  2903  069A                     	;# 
  2904  0711                     	;# 
  2905  0712                     	;# 
  2906  0713                     	;# 
  2907  0714                     	;# 
  2908  0715                     	;# 
  2909  0718                     	;# 
  2910  0718                     	;# 
  2911  0719                     	;# 
  2912  071A                     	;# 
  2913  071A                     	;# 
  2914  071B                     	;# 
  2915  071C                     	;# 
  2916  071D                     	;# 
  2917  0791                     	;# 
  2918  0791                     	;# 
  2919  0792                     	;# 
  2920  0793                     	;# 
  2921  0793                     	;# 
  2922  0794                     	;# 
  2923  0795                     	;# 
  2924  0795                     	;# 
  2925  0796                     	;# 
  2926  0797                     	;# 
  2927  0797                     	;# 
  2928  0798                     	;# 
  2929  0799                     	;# 
  2930  079A                     	;# 
  2931  080C                     	;# 
  2932  080C                     	;# 
  2933  080D                     	;# 
  2934  080E                     	;# 
  2935  080E                     	;# 
  2936  080F                     	;# 
  2937  0810                     	;# 
  2938  0810                     	;# 
  2939  0811                     	;# 
  2940  0812                     	;# 
  2941  0812                     	;# 
  2942  0813                     	;# 
  2943  0814                     	;# 
  2944  0815                     	;# 
  2945  0816                     	;# 
  2946  0817                     	;# 
  2947  0818                     	;# 
  2948  0819                     	;# 
  2949  081A                     	;# 
  2950  081A                     	;# 
  2951  081B                     	;# 
  2952  081C                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  088C                     	;# 
  2956  088D                     	;# 
  2957  088E                     	;# 
  2958  088F                     	;# 
  2959  088F                     	;# 
  2960  0890                     	;# 
  2961  0891                     	;# 
  2962  0892                     	;# 
  2963  0893                     	;# 
  2964  0893                     	;# 
  2965  0894                     	;# 
  2966  0895                     	;# 
  2967  0896                     	;# 
  2968  0897                     	;# 
  2969  0897                     	;# 
  2970  0898                     	;# 
  2971  0899                     	;# 
  2972  0D8C                     	;# 
  2973  0D8C                     	;# 
  2974  0D8D                     	;# 
  2975  0D8E                     	;# 
  2976  0D8F                     	;# 
  2977  0D8F                     	;# 
  2978  0D90                     	;# 
  2979  0D91                     	;# 
  2980  0D92                     	;# 
  2981  0D92                     	;# 
  2982  0D93                     	;# 
  2983  0D94                     	;# 
  2984  0D95                     	;# 
  2985  0D95                     	;# 
  2986  0D96                     	;# 
  2987  0D97                     	;# 
  2988  0D98                     	;# 
  2989  0D99                     	;# 
  2990  0D9A                     	;# 
  2991  0D9B                     	;# 
  2992  0D9C                     	;# 
  2993  0D9D                     	;# 
  2994  0D9E                     	;# 
  2995  0D9E                     	;# 
  2996  0D9F                     	;# 
  2997  0DA0                     	;# 
  2998  0DA1                     	;# 
  2999  0DA1                     	;# 
  3000  0DA2                     	;# 
  3001  0DA3                     	;# 
  3002  0DA4                     	;# 
  3003  0DA4                     	;# 
  3004  0DA5                     	;# 
  3005  0DA6                     	;# 
  3006  0DA7                     	;# 
  3007  0DA7                     	;# 
  3008  0DA8                     	;# 
  3009  0DA9                     	;# 
  3010  0DAA                     	;# 
  3011  0DAB                     	;# 
  3012  0DAC                     	;# 
  3013  0DAD                     	;# 
  3014  0DAE                     	;# 
  3015  0DAF                     	;# 
  3016  0E0F                     	;# 
  3017  0E10                     	;# 
  3018  0E11                     	;# 
  3019  0E12                     	;# 
  3020  0E13                     	;# 
  3021  0E14                     	;# 
  3022  0E15                     	;# 
  3023  0E16                     	;# 
  3024  0E17                     	;# 
  3025  0E18                     	;# 
  3026  0E19                     	;# 
  3027  0E1A                     	;# 
  3028  0E1B                     	;# 
  3029  0E1C                     	;# 
  3030  0E1D                     	;# 
  3031  0E1E                     	;# 
  3032  0E1F                     	;# 
  3033  0E20                     	;# 
  3034  0E21                     	;# 
  3035  0E22                     	;# 
  3036  0E23                     	;# 
  3037  0E24                     	;# 
  3038  0E25                     	;# 
  3039  0E26                     	;# 
  3040  0E27                     	;# 
  3041  0E28                     	;# 
  3042  0E29                     	;# 
  3043  0E2A                     	;# 
  3044  0E2B                     	;# 
  3045  0E2C                     	;# 
  3046  0E2D                     	;# 
  3047  0E2E                     	;# 
  3048  0E90                     	;# 
  3049  0E91                     	;# 
  3050  0E92                     	;# 
  3051  0E94                     	;# 
  3052  0E95                     	;# 
  3053  0E9C                     	;# 
  3054  0E9D                     	;# 
  3055  0E9E                     	;# 
  3056  0E9F                     	;# 
  3057  0EA0                     	;# 
  3058  0EA1                     	;# 
  3059  0EA2                     	;# 
  3060  0EA3                     	;# 
  3061  0EA4                     	;# 
  3062  0EA5                     	;# 
  3063  0EA6                     	;# 
  3064  0EA7                     	;# 
  3065  0F0F                     	;# 
  3066  0F10                     	;# 
  3067  0F11                     	;# 
  3068  0F12                     	;# 
  3069  0F13                     	;# 
  3070  0F14                     	;# 
  3071  0F15                     	;# 
  3072  0F16                     	;# 
  3073  0F17                     	;# 
  3074  0F18                     	;# 
  3075  0F19                     	;# 
  3076  0F1A                     	;# 
  3077  0F1B                     	;# 
  3078  0F1C                     	;# 
  3079  0F1D                     	;# 
  3080  0F1E                     	;# 
  3081  0F1F                     	;# 
  3082  0F20                     	;# 
  3083  0F21                     	;# 
  3084  0F22                     	;# 
  3085  0F23                     	;# 
  3086  0F24                     	;# 
  3087  0F25                     	;# 
  3088  0F26                     	;# 
  3089  0F27                     	;# 
  3090  0F28                     	;# 
  3091  0F29                     	;# 
  3092  0F2A                     	;# 
  3093  0F2B                     	;# 
  3094  0F2C                     	;# 
  3095  0F2D                     	;# 
  3096  0F2E                     	;# 
  3097  0F2F                     	;# 
  3098  0F30                     	;# 
  3099  0F31                     	;# 
  3100  0F32                     	;# 
  3101  0F33                     	;# 
  3102  0F34                     	;# 
  3103  0F35                     	;# 
  3104  0F36                     	;# 
  3105  0F37                     	;# 
  3106  0FE4                     	;# 
  3107  0FE5                     	;# 
  3108  0FE6                     	;# 
  3109  0FE7                     	;# 
  3110  0FE8                     	;# 
  3111  0FE9                     	;# 
  3112  0FEA                     	;# 
  3113  0FEB                     	;# 
  3114  0FED                     	;# 
  3115  0FEE                     	;# 
  3116  0FEF                     	;# 
  3117                           
  3118                           	psect	stringtext
  3119  0800                     __pstringtext:	
  3120  0800                     _hexpowers:	
  3121  0800  3401               	retlw	1
  3122  0801  3400               	retlw	0
  3123  0802  3410               	retlw	16
  3124  0803  3400               	retlw	0
  3125  0804  3400               	retlw	0
  3126  0805  3401               	retlw	1
  3127  0806  3400               	retlw	0
  3128  0807  3410               	retlw	16
  3129  0808                     __end_of_hexpowers:	
  3130  0010                     _PIR1bits	set	16
  3131  001B                     _PR2	set	27
  3132  001E                     _T2CLKCON	set	30
  3133  001C                     _T2CON	set	28
  3134  001C                     _T2CONbits	set	28
  3135  001D                     _T2HLT	set	29
  3136  001D                     _T2HLTbits	set	29
  3137  001B                     _T2PR	set	27
  3138  001F                     _T2RST	set	31
  3139  001F                     _T2RSTbits	set	31
  3140  001A                     _T2TMR	set	26
  3141  001A                     _TMR2	set	26
  3142  005F                     _GIE	set	95
  3143  0072                     _RC2	set	114
  3144  009D                     _ADCON0	set	157
  3145  009D                     _ADCON0bits	set	157
  3146  009E                     _ADCON1	set	158
  3147  009F                     _ADCON2	set	159
  3148  009C                     _ADRESH	set	156
  3149  009B                     _ADRESL	set	155
  3150  0095                     _OPTION_REGbits	set	149
  3151  0099                     _OSCCON	set	153
  3152  009A                     _OSCSTAT	set	154
  3153  0098                     _OSCTUNE	set	152
  3154  008C                     _TRISA	set	140
  3155  008D                     _TRISB	set	141
  3156  008E                     _TRISC	set	142
  3157  010C                     _LATA	set	268
  3158  010D                     _LATB	set	269
  3159  010E                     _LATC	set	270
  3160  0862                     _LATA2	set	2146
  3161  0864                     _LATA4	set	2148
  3162  018C                     _ANSELA	set	396
  3163  018D                     _ANSELB	set	397
  3164  018E                     _ANSELC	set	398
  3165  019F                     _BAUD1CON	set	415
  3166  0199                     _RC1REG	set	409
  3167  019D                     _RC1STA	set	413
  3168  019D                     _RC1STAbits	set	413
  3169  019C                     _SPBRGH	set	412
  3170  019B                     _SPBRGL	set	411
  3171  019A                     _TX1REG	set	410
  3172  019E                     _TX1STA	set	414
  3173  020D                     _WPUB	set	525
  3174  020E                     _WPUC	set	526
  3175  029E                     _CCPTMRSbits	set	670
  3176  061C                     _PWM4CON	set	1564
  3177  061B                     _PWM4DCH	set	1563
  3178  061A                     _PWM4DCL	set	1562
  3179  0E0F                     _PPSLOCK	set	3599
  3180  0E0F                     _PPSLOCKbits	set	3599
  3181  0E24                     _RXPPS	set	3620
  3182  0E9F                     _RB7PPS	set	3743
  3183  0EA7                     _RC7PPS	set	3751
  3184  0808                     STR_7:	
  3185  0808  3453               	retlw	83	;'S'
  3186  0809  3455               	retlw	85	;'U'
  3187  080A  3457               	retlw	87	;'W'
  3188  080B  342C               	retlw	44	;','
  3189  080C  3432               	retlw	50	;'2'
  3190  080D  3441               	retlw	65	;'A'
  3191  080E  3433               	retlw	51	;'3'
  3192  080F  3437               	retlw	55	;'7'
  3193  0810  342C               	retlw	44	;','
  3194  0811  3431               	retlw	49	;'1'
  3195  0812  3446               	retlw	70	;'F'
  3196  0813  3425               	retlw	37	;'%'
  3197  0814  3430               	retlw	48	;'0'
  3198  0815  3432               	retlw	50	;'2'
  3199  0816  3478               	retlw	120	;'x'
  3200  0817  3430               	retlw	48	;'0'
  3201  0818  3430               	retlw	48	;'0'
  3202  0819  3425               	retlw	37	;'%'
  3203  081A  3430               	retlw	48	;'0'
  3204  081B  3432               	retlw	50	;'2'
  3205  081C  3478               	retlw	120	;'x'
  3206  081D  3430               	retlw	48	;'0'
  3207  081E  3430               	retlw	48	;'0'
  3208  081F  3425               	retlw	37	;'%'
  3209  0820  3430               	retlw	48	;'0'
  3210  0821  3432               	retlw	50	;'2'
  3211  0822  3478               	retlw	120	;'x'
  3212  0823  3430               	retlw	48	;'0'
  3213  0824  3430               	retlw	48	;'0'
  3214  0825  340A               	retlw	10
  3215  0826  3400               	retlw	0
  3216  0827                     STR_9:	
  3217  0827  3453               	retlw	83	;'S'
  3218  0828  3455               	retlw	85	;'U'
  3219  0829  3457               	retlw	87	;'W'
  3220  082A  342C               	retlw	44	;','
  3221  082B  3432               	retlw	50	;'2'
  3222  082C  3441               	retlw	65	;'A'
  3223  082D  3431               	retlw	49	;'1'
  3224  082E  3443               	retlw	67	;'C'
  3225  082F  342C               	retlw	44	;','
  3226  0830  3430               	retlw	48	;'0'
  3227  0831  3431               	retlw	49	;'1'
  3228  0832  3425               	retlw	37	;'%'
  3229  0833  3430               	retlw	48	;'0'
  3230  0834  3432               	retlw	50	;'2'
  3231  0835  3478               	retlw	120	;'x'
  3232  0836  3430               	retlw	48	;'0'
  3233  0837  3430               	retlw	48	;'0'
  3234  0838  3430               	retlw	48	;'0'
  3235  0839  3430               	retlw	48	;'0'
  3236  083A  3430               	retlw	48	;'0'
  3237  083B  3430               	retlw	48	;'0'
  3238  083C  340A               	retlw	10
  3239  083D  3400               	retlw	0
  3240  083E                     STR_11:	
  3241  083E  3430               	retlw	48	;'0'
  3242  083F  3431               	retlw	49	;'1'
  3243  0840  3432               	retlw	50	;'2'
  3244  0841  3433               	retlw	51	;'3'
  3245  0842  3434               	retlw	52	;'4'
  3246  0843  3435               	retlw	53	;'5'
  3247  0844  3436               	retlw	54	;'6'
  3248  0845  3437               	retlw	55	;'7'
  3249  0846  3438               	retlw	56	;'8'
  3250  0847  3439               	retlw	57	;'9'
  3251  0848  3461               	retlw	97	;'a'
  3252  0849  3462               	retlw	98	;'b'
  3253  084A  3463               	retlw	99	;'c'
  3254  084B  3464               	retlw	100	;'d'
  3255  084C  3465               	retlw	101	;'e'
  3256  084D  3466               	retlw	102	;'f'
  3257  084E  3400               	retlw	0
  3258  084F                     STR_6:	
  3259  084F  3453               	retlw	83	;'S'
  3260  0850  3455               	retlw	85	;'U'
  3261  0851  3457               	retlw	87	;'W'
  3262  0852  342C               	retlw	44	;','
  3263  0853  3432               	retlw	50	;'2'
  3264  0854  3441               	retlw	65	;'A'
  3265  0855  3431               	retlw	49	;'1'
  3266  0856  3439               	retlw	57	;'9'
  3267  0857  342C               	retlw	44	;','
  3268  0858  3425               	retlw	37	;'%'
  3269  0859  3430               	retlw	48	;'0'
  3270  085A  3432               	retlw	50	;'2'
  3271  085B  3478               	retlw	120	;'x'
  3272  085C  340D               	retlw	13
  3273  085D  340A               	retlw	10
  3274  085E  3400               	retlw	0
  3275  085F                     STR_8:	
  3276  085F  3453               	retlw	83	;'S'
  3277  0860  3455               	retlw	85	;'U'
  3278  0861  3457               	retlw	87	;'W'
  3279  0862  342C               	retlw	44	;','
  3280  0863  3432               	retlw	50	;'2'
  3281  0864  3441               	retlw	65	;'A'
  3282  0865  3433               	retlw	51	;'3'
  3283  0866  3438               	retlw	56	;'8'
  3284  0867  342C               	retlw	44	;','
  3285  0868  3425               	retlw	37	;'%'
  3286  0869  3430               	retlw	48	;'0'
  3287  086A  3432               	retlw	50	;'2'
  3288  086B  3478               	retlw	120	;'x'
  3289  086C  340A               	retlw	10
  3290  086D  3400               	retlw	0
  3291  086E                     STR_10:	
  3292  086E  3453               	retlw	83	;'S'
  3293  086F  3455               	retlw	85	;'U'
  3294  0870  3457               	retlw	87	;'W'
  3295  0871  342C               	retlw	44	;','
  3296  0872  3432               	retlw	50	;'2'
  3297  0873  3441               	retlw	65	;'A'
  3298  0874  3431               	retlw	49	;'1'
  3299  0875  3444               	retlw	68	;'D'
  3300  0876  342C               	retlw	44	;','
  3301  0877  3425               	retlw	37	;'%'
  3302  0878  3430               	retlw	48	;'0'
  3303  0879  3432               	retlw	50	;'2'
  3304  087A  3478               	retlw	120	;'x'
  3305  087B  340A               	retlw	10
  3306  087C  3400               	retlw	0
  3307  087D                     STR_3:	
  3308  087D  3453               	retlw	83	;'S'
  3309  087E  3452               	retlw	82	;'R'
  3310  087F  342C               	retlw	44	;','
  3311  0880  3432               	retlw	50	;'2'
  3312  0881  3430               	retlw	48	;'0'
  3313  0882  3430               	retlw	48	;'0'
  3314  0883  3430               	retlw	48	;'0'
  3315  0884  3430               	retlw	48	;'0'
  3316  0885  3430               	retlw	48	;'0'
  3317  0886  3430               	retlw	48	;'0'
  3318  0887  3430               	retlw	48	;'0'
  3319  0888  3400               	retlw	0
  3320  0889                     STR_2:	
  3321  0889  3453               	retlw	83	;'S'
  3322  088A  3453               	retlw	83	;'S'
  3323  088B  342C               	retlw	44	;','
  3324  088C  3446               	retlw	70	;'F'
  3325  088D  3430               	retlw	48	;'0'
  3326  088E  3430               	retlw	48	;'0'
  3327  088F  3430               	retlw	48	;'0'
  3328  0890  3430               	retlw	48	;'0'
  3329  0891  3430               	retlw	48	;'0'
  3330  0892  3430               	retlw	48	;'0'
  3331  0893  3430               	retlw	48	;'0'
  3332  0894  3400               	retlw	0
  3333  0895                     STR_4:	
  3334  0895  3453               	retlw	83	;'S'
  3335  0896  342D               	retlw	45	;'-'
  3336  0897  342C               	retlw	44	;','
  3337  0898  344D               	retlw	77	;'M'
  3338  0899  3461               	retlw	97	;'a'
  3339  089A  3473               	retlw	115	;'s'
  3340  089B  3474               	retlw	116	;'t'
  3341  089C  3465               	retlw	101	;'e'
  3342  089D  3472               	retlw	114	;'r'
  3343  089E  3473               	retlw	115	;'s'
  3344  089F  3431               	retlw	49	;'1'
  3345  08A0  3400               	retlw	0
  3346  08A1                     STR_1:	
  3347  08A1  3453               	retlw	83	;'S'
  3348  08A2  3446               	retlw	70	;'F'
  3349  08A3  342C               	retlw	44	;','
  3350  08A4  3432               	retlw	50	;'2'
  3351  08A5  3400               	retlw	0
  3352  08A6                     STR_5:	
  3353  08A6  3452               	retlw	82	;'R'
  3354  08A7  342C               	retlw	44	;','
  3355  08A8  3431               	retlw	49	;'1'
  3356  08A9  3400               	retlw	0
  3357                           
  3358                           ; #config settings
  3359  0000                     
  3360                           	psect	cinit
  3361  07F6                     start_initialization:	
  3362  07F6                     __initialization:	
  3363                           
  3364                           ; Clear objects allocated to BANK0
  3365  07F6  3020               	movlw	low __pbssBANK0
  3366  07F7  0084               	movwf	4
  3367  07F8  3000               	movlw	high __pbssBANK0
  3368  07F9  0085               	movwf	5
  3369  07FA  3020               	movlw	32
  3370  07FB  3184  2462         	fcall	clear_ram0
  3371  07FD                     end_of_initialization:	
  3372                           ;End of C runtime variable initialization code
  3373                           
  3374  07FD                     __end_of__initialization:	
  3375  07FD  0020               	movlb	0
  3376  07FE  3186  2E3D         	ljmp	_main	;jump to C main() function
  3377                           
  3378                           	psect	bssBANK0
  3379  0020                     __pbssBANK0:	
  3380  0020                     _rxBuffer:	
  3381  0020                     	ds	32
  3382                           
  3383                           	psect	clrtext
  3384  0462                     clear_ram0:	
  3385                           ;	Called with FSR0 containing the base address, and
  3386                           ;	WREG with the size to clear
  3387                           
  3388  0462  0064               	clrwdt	;clear the watchdog before getting into this loop
  3389  0463                     clrloop0:	
  3390  0463  0180               	clrf	0	;clear RAM location pointed to by FSR
  3391  0464  3101               	addfsr 0,1
  3392  0465  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3393  0466  2C63               	goto	clrloop0	;have we reached the end yet?
  3394  0467  3400               	retlw	0	;all done for this memory range, return
  3395                           
  3396                           	psect	cstackCOMMON
  3397  0070                     __pcstackCOMMON:	
  3398  0070                     ?_OSCILLATOR_Initialize:	
  3399  0070                     ??_OSCILLATOR_Initialize:	
  3400                           ; 0 bytes @ 0x0
  3401                           
  3402  0070                     ?_EUSART_Initialize:	
  3403                           ; 0 bytes @ 0x0
  3404                           
  3405  0070                     ??_EUSART_Initialize:	
  3406                           ; 0 bytes @ 0x0
  3407                           
  3408  0070                     ?_TMR2_Initialize:	
  3409                           ; 0 bytes @ 0x0
  3410                           
  3411  0070                     ??_TMR2_Initialize:	
  3412                           ; 0 bytes @ 0x0
  3413                           
  3414  0070                     ?_PWM4_Initialize:	
  3415                           ; 0 bytes @ 0x0
  3416                           
  3417  0070                     ??_PWM4_Initialize:	
  3418                           ; 0 bytes @ 0x0
  3419                           
  3420  0070                     ?_ADC1_Initialize:	
  3421                           ; 0 bytes @ 0x0
  3422                           
  3423  0070                     ??_ADC1_Initialize:	
  3424                           ; 0 bytes @ 0x0
  3425                           
  3426  0070                     ?_TMR2_Start:	
  3427                           ; 0 bytes @ 0x0
  3428                           
  3429  0070                     ??_TMR2_Start:	
  3430                           ; 0 bytes @ 0x0
  3431                           
  3432  0070                     ?_mygets:	
  3433                           ; 0 bytes @ 0x0
  3434                           
  3435  0070                     ??_mygets:	
  3436                           ; 0 bytes @ 0x0
  3437                           
  3438  0070                     ?_SendBatteryValue:	
  3439                           ; 0 bytes @ 0x0
  3440                           
  3441  0070                     ?_isdigit:	
  3442                           ; 0 bytes @ 0x0
  3443                           
  3444  0070                     ??_isdigit:	
  3445                           ; 1 bit 
  3446                           
  3447  0070                     ?_PIN_MANAGER_Initialize:	
  3448                           ; 0 bytes @ 0x0
  3449                           
  3450  0070                     ??_PIN_MANAGER_Initialize:	
  3451                           ; 0 bytes @ 0x0
  3452                           
  3453  0070                     ?_SYSTEM_Initialize:	
  3454                           ; 0 bytes @ 0x0
  3455                           
  3456  0070                     ??_TMR2_HasOverflowOccured:	
  3457                           ; 0 bytes @ 0x0
  3458                           
  3459  0070                     ??_EUSART_Read:	
  3460                           ; 0 bytes @ 0x0
  3461                           
  3462  0070                     ?_EUSART_Write:	
  3463                           ; 0 bytes @ 0x0
  3464                           
  3465  0070                     ??_EUSART_Write:	
  3466                           ; 0 bytes @ 0x0
  3467                           
  3468  0070                     ??_getch:	
  3469                           ; 0 bytes @ 0x0
  3470                           
  3471  0070                     ?_putch:	
  3472                           ; 0 bytes @ 0x0
  3473                           
  3474  0070                     ?_main:	
  3475                           ; 0 bytes @ 0x0
  3476                           
  3477  0070                     ?_TMR2_HasOverflowOccured:	
  3478                           ; 0 bytes @ 0x0
  3479                           
  3480  0070                     ?_EUSART_Read:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  0070                     ?_getch:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486  0070                     ?_ADC1_GetConversion:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489  0070                     ?___wmul:	
  3490                           ; 2 bytes @ 0x0
  3491                           
  3492  0070                     ?___lwdiv:	
  3493                           ; 2 bytes @ 0x0
  3494                           
  3495  0070                     PIN_MANAGER_Initialize@state:	
  3496                           ; 2 bytes @ 0x0
  3497                           
  3498  0070                     TMR2_HasOverflowOccured@status:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501  0070                     EUSART_Write@txData:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504  0070                     _isdigit$767:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507  0070                     ___wmul@multiplier:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510  0070                     ___lwdiv@divisor:	
  3511                           ; 2 bytes @ 0x0
  3512                           
  3513                           
  3514                           ; 2 bytes @ 0x0
  3515  0070                     	ds	1
  3516  0071                     ??_SYSTEM_Initialize:	
  3517  0071                     ??_putch:	
  3518                           ; 0 bytes @ 0x1
  3519                           
  3520  0071                     putch@txData:	
  3521                           ; 0 bytes @ 0x1
  3522                           
  3523  0071                     mygets@c:	
  3524                           ; 1 bytes @ 0x1
  3525                           
  3526  0071                     isdigit@c:	
  3527                           ; 1 bytes @ 0x1
  3528                           
  3529                           
  3530                           ; 1 bytes @ 0x1
  3531  0071                     	ds	1
  3532  0072                     ?_cputs:	
  3533  0072                     ??_ADC1_GetConversion:	
  3534                           ; 0 bytes @ 0x2
  3535                           
  3536  0072                     mygets@i:	
  3537                           ; 0 bytes @ 0x2
  3538                           
  3539  0072                     ___wmul@multiplicand:	
  3540                           ; 1 bytes @ 0x2
  3541                           
  3542  0072                     ___lwdiv@dividend:	
  3543                           ; 2 bytes @ 0x2
  3544                           
  3545  0072                     cputs@s:	
  3546                           ; 2 bytes @ 0x2
  3547                           
  3548                           
  3549                           ; 2 bytes @ 0x2
  3550  0072                     	ds	1
  3551  0073                     ADC1_GetConversion@channel:	
  3552  0073                     mygets@p:	
  3553                           ; 1 bytes @ 0x3
  3554                           
  3555                           
  3556                           ; 1 bytes @ 0x3
  3557  0073                     	ds	1
  3558  0074                     ??_cputs:	
  3559  0074                     ??___wmul:	
  3560                           ; 0 bytes @ 0x4
  3561                           
  3562  0074                     ??___lwdiv:	
  3563                           ; 0 bytes @ 0x4
  3564                           
  3565  0074                     ___wmul@product:	
  3566                           ; 0 bytes @ 0x4
  3567                           
  3568                           
  3569                           ; 2 bytes @ 0x4
  3570  0074                     	ds	1
  3571  0075                     ?_puts:	
  3572  0075                     ___lwdiv@quotient:	
  3573                           ; 2 bytes @ 0x5
  3574                           
  3575  0075                     puts@s:	
  3576                           ; 2 bytes @ 0x5
  3577                           
  3578                           
  3579                           ; 2 bytes @ 0x5
  3580  0075                     	ds	2
  3581  0077                     ?_sendCMD:	
  3582  0077                     ??_puts:	
  3583                           ; 0 bytes @ 0x7
  3584                           
  3585  0077                     ___lwdiv@counter:	
  3586                           ; 0 bytes @ 0x7
  3587                           
  3588  0077                     sendCMD@cmd:	
  3589                           ; 1 bytes @ 0x7
  3590                           
  3591                           
  3592                           ; 2 bytes @ 0x7
  3593  0077                     	ds	1
  3594  0078                     ??_printf:	
  3595                           
  3596                           ; 0 bytes @ 0x8
  3597  0078                     	ds	1
  3598  0079                     ??_sendCMD:	
  3599                           
  3600                           ; 0 bytes @ 0x9
  3601  0079                     	ds	3
  3602  007C                     ??_SendBatteryValue:	
  3603  007C                     ?_SendHealthThermometer:	
  3604                           ; 0 bytes @ 0xC
  3605                           
  3606  007C                     SendHeartHateValue@bpm:	
  3607                           ; 0 bytes @ 0xC
  3608                           
  3609  007C                     SendHealthThermometer@type:	
  3610                           ; 1 bytes @ 0xC
  3611                           
  3612                           
  3613                           ; 1 bytes @ 0xC
  3614  007C                     	ds	1
  3615  007D                     SendHealthThermometer@temperature:	
  3616                           
  3617                           ; 1 bytes @ 0xD
  3618  007D                     	ds	1
  3619                           
  3620                           	psect	cstackBANK0
  3621  0040                     __pcstackBANK0:	
  3622  0040                     ?_printf:	
  3623  0040                     printf@f:	
  3624                           ; 2 bytes @ 0x0
  3625                           
  3626                           
  3627                           ; 2 bytes @ 0x0
  3628  0040                     	ds	8
  3629  0048                     printf@idx:	
  3630                           
  3631                           ; 1 bytes @ 0x8
  3632  0048                     	ds	1
  3633  0049                     printf@ap:	
  3634                           
  3635                           ; 1 bytes @ 0x9
  3636  0049                     	ds	1
  3637  004A                     printf@flag:	
  3638                           
  3639                           ; 1 bytes @ 0xA
  3640  004A                     	ds	1
  3641  004B                     printf@val:	
  3642                           
  3643                           ; 2 bytes @ 0xB
  3644  004B                     	ds	2
  3645  004D                     printf@prec:	
  3646                           
  3647                           ; 1 bytes @ 0xD
  3648  004D                     	ds	1
  3649  004E                     printf@width:	
  3650                           
  3651                           ; 2 bytes @ 0xE
  3652  004E                     	ds	2
  3653  0050                     printf@c:	
  3654                           
  3655                           ; 1 bytes @ 0x10
  3656  0050                     	ds	1
  3657  0051                     ?_SendHeartHateValue:	
  3658  0051                     ??_SendHealthThermometer:	
  3659                           ; 0 bytes @ 0x11
  3660                           
  3661  0051                     SendHeartHateValue@energy:	
  3662                           ; 0 bytes @ 0x11
  3663                           
  3664  0051                     _SendBatteryValue$584:	
  3665                           ; 1 bytes @ 0x11
  3666                           
  3667                           
  3668                           ; 2 bytes @ 0x11
  3669  0051                     	ds	1
  3670  0052                     SendHeartHateValue@RR:	
  3671                           
  3672                           ; 1 bytes @ 0x12
  3673  0052                     	ds	1
  3674  0053                     SendBatteryValue@value:	
  3675  0053                     SendHeartHateValue@BodySensorLocation:	
  3676                           ; 1 bytes @ 0x13
  3677                           
  3678                           
  3679                           ; 1 bytes @ 0x13
  3680  0053                     	ds	1
  3681  0054                     ??_SendHeartHateValue:	
  3682                           
  3683                           ; 0 bytes @ 0x14
  3684  0054                     	ds	6
  3685  005A                     ??_main:	
  3686                           
  3687                           ; 0 bytes @ 0x1A
  3688  005A                     	ds	3
  3689  005D                     main@time:	
  3690                           
  3691                           ; 1 bytes @ 0x1D
  3692  005D                     	ds	1
  3693  005E                     main@value:	
  3694                           
  3695                           ; 1 bytes @ 0x1E
  3696  005E                     	ds	1
  3697                           
  3698                           	psect	maintext
  3699  063D                     __pmaintext:	
  3700 ;;
  3701 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3702 ;;
  3703 ;; *************** function _main *****************
  3704 ;; Defined at:
  3705 ;;		line 32 in file "main.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  value           1   30[BANK0 ] unsigned char 
  3710 ;;  time            1   29[BANK0 ] unsigned char 
  3711 ;; Return value:  Size  Location     Type
  3712 ;;		None               void
  3713 ;; Registers used:
  3714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : B1F/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3723 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3724 ;;Total ram usage:        5 bytes
  3725 ;; Hardware stack levels required when called:    5
  3726 ;; This function calls:
  3727 ;;		_ADC1_GetConversion
  3728 ;;		_SYSTEM_Initialize
  3729 ;;		_SendBatteryValue
  3730 ;;		_SendHealthThermometer
  3731 ;;		_SendHeartHateValue
  3732 ;;		_TMR2_HasOverflowOccured
  3733 ;;		_mygets
  3734 ;;		_sendCMD
  3735 ;; This function is called by:
  3736 ;;		Startup code after reset
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           
  3741                           ;psect for function _main
  3742  063D                     _main:	
  3743                           
  3744                           ;main.c: 34: SYSTEM_Initialize();
  3745                           
  3746                           ;incstack = 0
  3747                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3748  063D  3184  24D3  3186   	fcall	_SYSTEM_Initialize
  3749                           
  3750                           ;main.c: 37: do { LATA4 = 1; } while(0);
  3751  0640  0022               	movlb	2	; select bank2
  3752  0641  160C               	bsf	12,4	;volatile
  3753                           
  3754                           ;main.c: 38: mygets();
  3755  0642  3185  2572  3186   	fcall	_mygets
  3756                           
  3757                           ;main.c: 39: sendCMD( "SF,2");
  3758  0645  30A1               	movlw	low (STR_1| (0+32768))
  3759  0646  00F7               	movwf	sendCMD@cmd
  3760  0647  3088               	movlw	high (STR_1| (0+32768))
  3761  0648  00F8               	movwf	sendCMD@cmd+1
  3762  0649  3184  248D  3186   	fcall	_sendCMD
  3763                           
  3764                           ;main.c: 40: sendCMD( "SS,F0000000");
  3765  064C  3089               	movlw	low (STR_2| (0+32768))
  3766  064D  00F7               	movwf	sendCMD@cmd
  3767  064E  3088               	movlw	high (STR_2| (0+32768))
  3768  064F  00F8               	movwf	sendCMD@cmd+1
  3769  0650  3184  248D  3186   	fcall	_sendCMD
  3770                           
  3771                           ;main.c: 41: sendCMD( "SR,20000000");
  3772  0653  307D               	movlw	low (STR_3| (0+32768))
  3773  0654  00F7               	movwf	sendCMD@cmd
  3774  0655  3088               	movlw	high (STR_3| (0+32768))
  3775  0656  00F8               	movwf	sendCMD@cmd+1
  3776  0657  3184  248D  3186   	fcall	_sendCMD
  3777                           
  3778                           ;main.c: 42: sendCMD( "S-,Masters1");
  3779  065A  3095               	movlw	low (STR_4| (0+32768))
  3780  065B  00F7               	movwf	sendCMD@cmd
  3781  065C  3088               	movlw	high (STR_4| (0+32768))
  3782  065D  00F8               	movwf	sendCMD@cmd+1
  3783  065E  3184  248D  3186   	fcall	_sendCMD
  3784                           
  3785                           ;main.c: 43: sendCMD( "R,1");
  3786  0661  30A6               	movlw	low (STR_5| (0+32768))
  3787  0662  00F7               	movwf	sendCMD@cmd
  3788  0663  3088               	movlw	high (STR_5| (0+32768))
  3789  0664  00F8               	movwf	sendCMD@cmd+1
  3790  0665  3184  248D  3186   	fcall	_sendCMD
  3791                           
  3792                           ;main.c: 44: mygets();
  3793  0668  3185  2572  3186   	fcall	_mygets
  3794                           
  3795                           ;main.c: 45: _delay((unsigned long)((640)*(16000000/4000.0)));
  3796  066B  300D               	movlw	13
  3797  066C  0020               	movlb	0	; select bank0
  3798  066D  00DC               	movwf	??_main+2
  3799  066E  30FD               	movlw	253
  3800  066F  00DB               	movwf	??_main+1
  3801  0670  30AD               	movlw	173
  3802  0671  00DA               	movwf	??_main
  3803  0672                     u907:	
  3804  0672  0BDA               	decfsz	??_main,f
  3805  0673  2E72               	goto	u907
  3806  0674  0BDB               	decfsz	??_main+1,f
  3807  0675  2E72               	goto	u907
  3808  0676  0BDC               	decfsz	??_main+2,f
  3809  0677  2E72               	goto	u907
  3810  0678  0000               	nop
  3811  0679                     l240:	
  3812                           ;main.c: 46: while( !RC2);
  3813                           
  3814  0679  0020               	movlb	0	; select bank0
  3815  067A  190E               	btfsc	14,2	;volatile
  3816  067B  2E82               	goto	l243
  3817  067C  2E79               	goto	l240
  3818  067D                     l245:	
  3819                           ;main.c: 53: do { LATA2 = 0; } while(0);
  3820                           
  3821  067D  0022               	movlb	2	; select bank2
  3822  067E  110C               	bcf	12,2	;volatile
  3823  067F                     l247:	
  3824                           ;main.c: 54: while( !RC2);
  3825                           
  3826  067F  0020               	movlb	0	; select bank0
  3827  0680  1D0E               	btfss	14,2	;volatile
  3828  0681  2E7F               	goto	l247
  3829  0682                     l243:	
  3830                           ;main.c: 49: while (1) {
  3831                           
  3832                           ;main.c: 55: }
  3833                           
  3834                           
  3835                           ;main.c: 51: if(!RC2){
  3836  0682  0020               	movlb	0	; select bank0
  3837  0683  1D0E               	btfss	14,2	;volatile
  3838  0684  2E7D               	goto	l245
  3839                           
  3840                           ;main.c: 56: else{
  3841                           ;main.c: 58: uint8_t time;
  3842                           ;main.c: 60: if ( TMR2_HasOverflowOccured()) {
  3843  0685  3184  2483  3186   	fcall	_TMR2_HasOverflowOccured
  3844  0688  3A00               	xorlw	0
  3845  0689  1903               	skipnz
  3846  068A  2E90               	goto	l1439
  3847                           
  3848                           ;main.c: 61: time++;
  3849  068B  3001               	movlw	1
  3850  068C  0020               	movlb	0	; select bank0
  3851  068D  00DA               	movwf	??_main
  3852  068E  085A               	movf	??_main,w
  3853  068F  07DD               	addwf	main@time,f
  3854  0690                     l1439:	
  3855                           
  3856                           ;main.c: 62: }
  3857                           ;main.c: 64: if ( time >= 50)
  3858  0690  3032               	movlw	50
  3859  0691  0020               	movlb	0	; select bank0
  3860  0692  025D               	subwf	main@time,w
  3861  0693  1C03               	skipc
  3862  0694  2E82               	goto	l243
  3863                           
  3864                           ;main.c: 65: {
  3865                           ;main.c: 66: uint8_t value = ADC1_GetConversion( POT)>>9;
  3866  0695  3004               	movlw	4
  3867  0696  3184  24F9  3186   	fcall	_ADC1_GetConversion
  3868  0699  0870               	movf	?_ADC1_GetConversion,w
  3869  069A  0020               	movlb	0	; select bank0
  3870  069B  00DA               	movwf	??_main
  3871  069C  0871               	movf	?_ADC1_GetConversion+1,w
  3872  069D  00DB               	movwf	??_main+1
  3873  069E  3009               	movlw	9
  3874  069F                     u895:	
  3875  069F  36DB               	lsrf	??_main+1,f
  3876  06A0  0CDA               	rrf	??_main,f
  3877  06A1  0B89               	decfsz	9,f
  3878  06A2  2E9F               	goto	u895
  3879  06A3  085A               	movf	??_main,w
  3880  06A4  00DC               	movwf	??_main+2
  3881  06A5  085C               	movf	??_main+2,w
  3882  06A6  00DE               	movwf	main@value
  3883                           
  3884                           ;main.c: 67: time = 0;
  3885  06A7  01DD               	clrf	main@time
  3886                           
  3887                           ;main.c: 70: SendBatteryValue(value);
  3888  06A8  085E               	movf	main@value,w
  3889  06A9  3185  252E  3186   	fcall	_SendBatteryValue
  3890                           
  3891                           ;main.c: 73: SendHeartHateValue(value,180,235,1);
  3892  06AC  30B4               	movlw	180
  3893  06AD  0020               	movlb	0	; select bank0
  3894  06AE  00DA               	movwf	??_main
  3895  06AF  085A               	movf	??_main,w
  3896  06B0  00D1               	movwf	SendHeartHateValue@energy
  3897  06B1  30EB               	movlw	235
  3898  06B2  00DB               	movwf	??_main+1
  3899  06B3  085B               	movf	??_main+1,w
  3900  06B4  00D2               	movwf	SendHeartHateValue@RR
  3901  06B5  01D3               	clrf	SendHeartHateValue@BodySensorLocation
  3902  06B6  0AD3               	incf	SendHeartHateValue@BodySensorLocation,f
  3903  06B7  085E               	movf	main@value,w
  3904  06B8  3185  2599  3186   	fcall	_SendHeartHateValue
  3905                           
  3906                           ;main.c: 76: SendHealthThermometer(value, 2);
  3907  06BB  3002               	movlw	2
  3908  06BC  0020               	movlb	0	; select bank0
  3909  06BD  00DA               	movwf	??_main
  3910  06BE  085A               	movf	??_main,w
  3911  06BF  00FC               	movwf	SendHealthThermometer@type
  3912  06C0  085E               	movf	main@value,w
  3913  06C1  3185  254D  3186   	fcall	_SendHealthThermometer
  3914                           
  3915                           ;main.c: 78: do { LATA2 = ~LATA2; } while(0);
  3916  06C4  3004               	movlw	4
  3917  06C5  0022               	movlb	2	; select bank2
  3918  06C6  068C               	xorwf	12,f
  3919  06C7  2E82               	goto	l243
  3920  06C8                     __end_of_main:	
  3921                           
  3922                           	psect	text1
  3923  048D                     __ptext1:	
  3924 ;; *************** function _sendCMD *****************
  3925 ;; Defined at:
  3926 ;;		line 126 in file "main.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  cmd             2    7[COMMON] PTR const unsigned char 
  3929 ;;		 -> STR_5(4), STR_4(12), STR_3(12), STR_2(12), 
  3930 ;;		 -> STR_1(5), 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;		None               void
  3935 ;; Registers used:
  3936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;Total ram usage:        2 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    4
  3949 ;; This function calls:
  3950 ;;		_mygets
  3951 ;;		_puts
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           
  3958                           ;psect for function _sendCMD
  3959  048D                     _sendCMD:	
  3960                           
  3961                           ;main.c: 128: puts( cmd);
  3962                           
  3963                           ;incstack = 0
  3964                           ; Regs used in _sendCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3965  048D  0877               	movf	sendCMD@cmd,w
  3966  048E  00F5               	movwf	puts@s
  3967  048F  0878               	movf	sendCMD@cmd+1,w
  3968  0490  00F6               	movwf	puts@s+1
  3969  0491  3184  24AD  3184   	fcall	_puts
  3970                           
  3971                           ;main.c: 129: mygets();
  3972  0494  3185  2572         	fcall	_mygets
  3973  0496  0008               	return
  3974  0497                     __end_of_sendCMD:	
  3975                           
  3976                           	psect	text2
  3977  04AD                     __ptext2:	
  3978 ;; *************** function _puts *****************
  3979 ;; Defined at:
  3980 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\puts.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  s               2    5[COMMON] PTR const unsigned char 
  3983 ;;		 -> STR_5(4), STR_4(12), STR_3(12), STR_2(12), 
  3984 ;;		 -> STR_1(5), 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  2    5[COMMON] int 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    3
  4003 ;; This function calls:
  4004 ;;		_cputs
  4005 ;;		_putch
  4006 ;; This function is called by:
  4007 ;;		_sendCMD
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function _puts
  4013  04AD                     _puts:	
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4017  04AD  0875               	movf	puts@s,w
  4018  04AE  00F2               	movwf	cputs@s
  4019  04AF  0876               	movf	puts@s+1,w
  4020  04B0  00F3               	movwf	cputs@s+1
  4021  04B1  3184  24E5  3184   	fcall	_cputs
  4022  04B4  300A               	movlw	10
  4023  04B5  3184  2457         	fcall	_putch
  4024  04B7  0008               	return
  4025  04B8                     __end_of_puts:	
  4026                           
  4027                           	psect	text3
  4028  04E5                     __ptext3:	
  4029 ;; *************** function _cputs *****************
  4030 ;; Defined at:
  4031 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\cputs.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  s               2    2[COMMON] PTR const unsigned char 
  4034 ;;		 -> STR_5(4), STR_4(12), STR_3(12), STR_2(12), 
  4035 ;;		 -> STR_1(5), 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;		None               void
  4040 ;; Registers used:
  4041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;Total ram usage:        3 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    2
  4054 ;; This function calls:
  4055 ;;		_putch
  4056 ;; This function is called by:
  4057 ;;		_puts
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _cputs
  4063  04E5                     _cputs:	
  4064  04E5                     l1187:	
  4065                           ;incstack = 0
  4066                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4067                           
  4068  04E5  0872               	movf	cputs@s,w
  4069  04E6  0084               	movwf	4
  4070  04E7  0873               	movf	cputs@s+1,w
  4071  04E8  0085               	movwf	5
  4072  04E9  0012               	moviw fsr0++
  4073  04EA  1903               	btfsc	3,2
  4074  04EB  0008               	return
  4075  04EC  0872               	movf	cputs@s,w
  4076  04ED  0084               	movwf	4
  4077  04EE  0873               	movf	cputs@s+1,w
  4078  04EF  0085               	movwf	5
  4079  04F0  0800               	movf	0,w	;code access
  4080  04F1  3184  2457  3184   	fcall	_putch
  4081  04F4  3001               	movlw	1
  4082  04F5  07F2               	addwf	cputs@s,f
  4083  04F6  3000               	movlw	0
  4084  04F7  3DF3               	addwfc	cputs@s+1,f
  4085  04F8  2CE5               	goto	l1187
  4086  04F9                     __end_of_cputs:	
  4087                           
  4088                           	psect	text4
  4089  0483                     __ptext4:	
  4090 ;; *************** function _TMR2_HasOverflowOccured *****************
  4091 ;; Defined at:
  4092 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  status          1    0[COMMON] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      unsigned char 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;Total ram usage:        1 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function _TMR2_HasOverflowOccured
  4121  0483                     _TMR2_HasOverflowOccured:	
  4122                           
  4123                           ;tmr2.c: 125: bool status = PIR1bits.TMR2IF;
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _TMR2_HasOverflowOccured: [wreg+status,2+status,0]
  4127  0483  3000               	movlw	0
  4128  0484  0020               	movlb	0	; select bank0
  4129  0485  1890               	btfsc	16,1	;volatile
  4130  0486  3001               	movlw	1
  4131  0487  00F0               	movwf	TMR2_HasOverflowOccured@status
  4132                           
  4133                           ;tmr2.c: 126: if (status) {
  4134  0488  0870               	movf	TMR2_HasOverflowOccured@status,w
  4135  0489  1D03               	btfss	3,2
  4136                           
  4137                           ;tmr2.c: 128: PIR1bits.TMR2IF = 0;
  4138  048A  1090               	bcf	16,1	;volatile
  4139                           
  4140                           ;tmr2.c: 129: }
  4141                           ;tmr2.c: 130: return status;
  4142  048B  0870               	movf	TMR2_HasOverflowOccured@status,w
  4143  048C  0008               	return
  4144  048D                     __end_of_TMR2_HasOverflowOccured:	
  4145                           
  4146                           	psect	text5
  4147  0599                     __ptext5:	
  4148 ;; *************** function _SendHeartHateValue *****************
  4149 ;; Defined at:
  4150 ;;		line 95 in file "main.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  bpm             1    wreg     unsigned char 
  4153 ;;  energy          1   17[BANK0 ] unsigned char 
  4154 ;;  RR              1   18[BANK0 ] unsigned char 
  4155 ;;  BodySensorLo    1   19[BANK0 ] unsigned char 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  bpm             1   12[COMMON] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;		None               void
  4160 ;; Registers used:
  4161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4167 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;Total ram usage:       10 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    3
  4174 ;; This function calls:
  4175 ;;		_mygets
  4176 ;;		_printf
  4177 ;; This function is called by:
  4178 ;;		_main
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           
  4183                           ;psect for function _SendHeartHateValue
  4184  0599                     _SendHeartHateValue:	
  4185                           
  4186                           ;incstack = 0
  4187                           ; Regs used in _SendHeartHateValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4188                           ;SendHeartHateValue@bpm stored from wreg
  4189  0599  00FC               	movwf	SendHeartHateValue@bpm
  4190                           
  4191                           ;main.c: 97: printf( "SUW,2A37,1F%02x00%02x00%02x00\n", bpm,energy,RR);
  4192  059A  3008               	movlw	low (STR_7| (0+32768))
  4193  059B  0020               	movlb	0	; select bank0
  4194  059C  00C0               	movwf	printf@f
  4195  059D  3088               	movlw	high (STR_7| (0+32768))
  4196  059E  00C1               	movwf	printf@f+1
  4197  059F  087C               	movf	SendHeartHateValue@bpm,w
  4198  05A0  00D4               	movwf	??_SendHeartHateValue
  4199  05A1  01D5               	clrf	??_SendHeartHateValue+1
  4200  05A2  0854               	movf	??_SendHeartHateValue,w
  4201  05A3  00C2               	movwf	?_printf+2
  4202  05A4  0855               	movf	??_SendHeartHateValue+1,w
  4203  05A5  00C3               	movwf	?_printf+3
  4204  05A6  0851               	movf	SendHeartHateValue@energy,w
  4205  05A7  00D6               	movwf	??_SendHeartHateValue+2
  4206  05A8  01D7               	clrf	??_SendHeartHateValue+3
  4207  05A9  0856               	movf	??_SendHeartHateValue+2,w
  4208  05AA  00C4               	movwf	?_printf+4
  4209  05AB  0857               	movf	??_SendHeartHateValue+3,w
  4210  05AC  00C5               	movwf	?_printf+5
  4211  05AD  0852               	movf	SendHeartHateValue@RR,w
  4212  05AE  00D8               	movwf	??_SendHeartHateValue+4
  4213  05AF  01D9               	clrf	??_SendHeartHateValue+5
  4214  05B0  0858               	movf	??_SendHeartHateValue+4,w
  4215  05B1  00C6               	movwf	?_printf+6
  4216  05B2  0859               	movf	??_SendHeartHateValue+5,w
  4217  05B3  00C7               	movwf	?_printf+7
  4218  05B4  3186  26C8  3185   	fcall	_printf
  4219                           
  4220                           ;main.c: 98: mygets();
  4221  05B7  3185  2572  3185   	fcall	_mygets
  4222                           
  4223                           ;main.c: 101: printf( "SUW,2A38,%02x\n",BodySensorLocation);
  4224  05BA  305F               	movlw	low (STR_8| (0+32768))
  4225  05BB  0020               	movlb	0	; select bank0
  4226  05BC  00C0               	movwf	printf@f
  4227  05BD  3088               	movlw	high (STR_8| (0+32768))
  4228  05BE  00C1               	movwf	printf@f+1
  4229  05BF  0853               	movf	SendHeartHateValue@BodySensorLocation,w
  4230  05C0  00D4               	movwf	??_SendHeartHateValue
  4231  05C1  01D5               	clrf	??_SendHeartHateValue+1
  4232  05C2  0854               	movf	??_SendHeartHateValue,w
  4233  05C3  00C2               	movwf	?_printf+2
  4234  05C4  0855               	movf	??_SendHeartHateValue+1,w
  4235  05C5  00C3               	movwf	?_printf+3
  4236  05C6  3186  26C8  3185   	fcall	_printf
  4237                           
  4238                           ;main.c: 102: mygets();
  4239  05C9  3185  2572         	fcall	_mygets
  4240  05CB  0008               	return
  4241  05CC                     __end_of_SendHeartHateValue:	
  4242                           
  4243                           	psect	text6
  4244  054D                     __ptext6:	
  4245 ;; *************** function _SendHealthThermometer *****************
  4246 ;; Defined at:
  4247 ;;		line 106 in file "main.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  temperature     1    wreg     unsigned char 
  4250 ;;  type            1   12[COMMON] unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  temperature     1   13[COMMON] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;		None               void
  4255 ;; Registers used:
  4256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4262 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;Total ram usage:        4 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    3
  4269 ;; This function calls:
  4270 ;;		_mygets
  4271 ;;		_printf
  4272 ;; This function is called by:
  4273 ;;		_main
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function _SendHealthThermometer
  4279  054D                     _SendHealthThermometer:	
  4280                           
  4281                           ;incstack = 0
  4282                           ; Regs used in _SendHealthThermometer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4283                           ;SendHealthThermometer@temperature stored from wreg
  4284  054D  00FD               	movwf	SendHealthThermometer@temperature
  4285                           
  4286                           ;main.c: 108: printf( "SUW,2A1C,01%02x000000\n",temperature);
  4287  054E  3027               	movlw	low (STR_9| (0+32768))
  4288  054F  0020               	movlb	0	; select bank0
  4289  0550  00C0               	movwf	printf@f
  4290  0551  3088               	movlw	high (STR_9| (0+32768))
  4291  0552  00C1               	movwf	printf@f+1
  4292  0553  087D               	movf	SendHealthThermometer@temperature,w
  4293  0554  00D1               	movwf	??_SendHealthThermometer
  4294  0555  01D2               	clrf	??_SendHealthThermometer+1
  4295  0556  0851               	movf	??_SendHealthThermometer,w
  4296  0557  00C2               	movwf	?_printf+2
  4297  0558  0852               	movf	??_SendHealthThermometer+1,w
  4298  0559  00C3               	movwf	?_printf+3
  4299  055A  3186  26C8  3185   	fcall	_printf
  4300                           
  4301                           ;main.c: 109: mygets();
  4302  055D  3185  2572  3185   	fcall	_mygets
  4303                           
  4304                           ;main.c: 111: printf( "SUW,2A1D,%02x\n",type );
  4305  0560  306E               	movlw	low (STR_10| (0+32768))
  4306  0561  0020               	movlb	0	; select bank0
  4307  0562  00C0               	movwf	printf@f
  4308  0563  3088               	movlw	high (STR_10| (0+32768))
  4309  0564  00C1               	movwf	printf@f+1
  4310  0565  087C               	movf	SendHealthThermometer@type,w
  4311  0566  00D1               	movwf	??_SendHealthThermometer
  4312  0567  01D2               	clrf	??_SendHealthThermometer+1
  4313  0568  0851               	movf	??_SendHealthThermometer,w
  4314  0569  00C2               	movwf	?_printf+2
  4315  056A  0852               	movf	??_SendHealthThermometer+1,w
  4316  056B  00C3               	movwf	?_printf+3
  4317  056C  3186  26C8  3185   	fcall	_printf
  4318                           
  4319                           ;main.c: 112: mygets();
  4320  056F  3185  2572         	fcall	_mygets
  4321  0571  0008               	return
  4322  0572                     __end_of_SendHealthThermometer:	
  4323                           
  4324                           	psect	text7
  4325  052E                     __ptext7:	
  4326 ;; *************** function _SendBatteryValue *****************
  4327 ;; Defined at:
  4328 ;;		line 88 in file "main.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  value           1    wreg     unsigned char 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  value           1   19[BANK0 ] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;		None               void
  4335 ;; Registers used:
  4336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4343 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4345 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4346 ;;Total ram usage:        5 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    3
  4349 ;; This function calls:
  4350 ;;		_mygets
  4351 ;;		_printf
  4352 ;; This function is called by:
  4353 ;;		_main
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           
  4358                           ;psect for function _SendBatteryValue
  4359  052E                     _SendBatteryValue:	
  4360                           
  4361                           ;incstack = 0
  4362                           ; Regs used in _SendBatteryValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4363                           ;SendBatteryValue@value stored from wreg
  4364  052E  0020               	movlb	0	; select bank0
  4365  052F  00D3               	movwf	SendBatteryValue@value
  4366                           
  4367                           ;main.c: 90: printf( "SUW,2A19,%02x\r\n", (value>100)? 100: value);
  4368  0530  3065               	movlw	101
  4369  0531  0253               	subwf	SendBatteryValue@value,w
  4370  0532  1803               	skipnc
  4371  0533  2D3B               	goto	l1397
  4372  0534  0853               	movf	SendBatteryValue@value,w
  4373  0535  00FC               	movwf	??_SendBatteryValue
  4374  0536  01FD               	clrf	??_SendBatteryValue+1
  4375  0537  087C               	movf	??_SendBatteryValue,w
  4376  0538  00D1               	movwf	_SendBatteryValue$584
  4377  0539  087D               	movf	??_SendBatteryValue+1,w
  4378  053A  2D3E               	goto	L1
  4379  053B                     l1397:	
  4380  053B  3064               	movlw	100
  4381  053C  00D1               	movwf	_SendBatteryValue$584
  4382  053D  3000               	movlw	0
  4383  053E                     L1:	
  4384  053E  00D2               	movwf	_SendBatteryValue$584+1
  4385  053F  304F               	movlw	low (STR_6| (0+32768))
  4386  0540  00C0               	movwf	printf@f
  4387  0541  3088               	movlw	high (STR_6| (0+32768))
  4388  0542  00C1               	movwf	printf@f+1
  4389  0543  0852               	movf	_SendBatteryValue$584+1,w
  4390  0544  00C3               	movwf	?_printf+3
  4391  0545  0851               	movf	_SendBatteryValue$584,w
  4392  0546  00C2               	movwf	?_printf+2
  4393  0547  3186  26C8  3185   	fcall	_printf
  4394                           
  4395                           ;main.c: 91: mygets();
  4396  054A  3185  2572         	fcall	_mygets
  4397  054C  0008               	return
  4398  054D                     __end_of_SendBatteryValue:	
  4399                           
  4400                           	psect	text8
  4401  06C8                     __ptext8:	
  4402 ;; *************** function _printf *****************
  4403 ;; Defined at:
  4404 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  4407 ;;		 -> STR_10(15), STR_9(23), STR_8(15), STR_7(31), 
  4408 ;;		 -> STR_6(16), 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  idx             1    8[BANK0 ] unsigned char 
  4411 ;;  tmpval          4    0        struct .
  4412 ;;  width           2   14[BANK0 ] int 
  4413 ;;  val             2   11[BANK0 ] unsigned int 
  4414 ;;  cp              2    0        PTR const unsigned char 
  4415 ;;  len             2    0        unsigned int 
  4416 ;;  c               1   16[BANK0 ] char 
  4417 ;;  prec            1   13[BANK0 ] char 
  4418 ;;  flag            1   10[BANK0 ] unsigned char 
  4419 ;;  ap              1    9[BANK0 ] PTR void [1]
  4420 ;;		 -> ?_printf(2), 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  2    0[BANK0 ] int 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4430 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4432 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4433 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4434 ;;Total ram usage:       21 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    2
  4437 ;; This function calls:
  4438 ;;		___lwdiv
  4439 ;;		___wmul
  4440 ;;		_isdigit
  4441 ;;		_putch
  4442 ;; This function is called by:
  4443 ;;		_SendBatteryValue
  4444 ;;		_SendHeartHateValue
  4445 ;;		_SendHealthThermometer
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           
  4450                           ;psect for function _printf
  4451  06C8                     _printf:	
  4452                           
  4453                           ;doprnt.c: 466: va_list ap;
  4454                           ;doprnt.c: 499: signed char c;
  4455                           ;doprnt.c: 501: int width;
  4456                           ;doprnt.c: 506: signed char prec;
  4457                           ;doprnt.c: 508: unsigned char flag;
  4458                           ;doprnt.c: 523: union {
  4459                           ;doprnt.c: 524: unsigned long vd;
  4460                           ;doprnt.c: 525: double integ;
  4461                           ;doprnt.c: 526: } tmpval;
  4462                           ;doprnt.c: 528: unsigned int val;
  4463                           ;doprnt.c: 529: unsigned len;
  4464                           ;doprnt.c: 530: const char * cp;
  4465                           ;doprnt.c: 533: *ap = __va_start();
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4469  06C8  3042               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4470  06C9  00F8               	movwf	??_printf
  4471  06CA  0878               	movf	??_printf,w
  4472  06CB  0020               	movlb	0	; select bank0
  4473  06CC  00C9               	movwf	printf@ap
  4474  06CD                     l1359:	
  4475                           ;doprnt.c: 536: while(c = *f++) {
  4476                           
  4477  06CD  0020               	movlb	0	; select bank0
  4478  06CE  0841               	movf	printf@f+1,w
  4479  06CF  00F9               	movwf	??_printf+1
  4480  06D0  0840               	movf	printf@f,w
  4481  06D1  00F8               	movwf	??_printf
  4482  06D2  0AC0               	incf	printf@f,f
  4483  06D3  1903               	skipnz
  4484  06D4  0AC1               	incf	printf@f+1,f
  4485  06D5  0878               	movf	??_printf,w
  4486  06D6  0084               	movwf	4
  4487  06D7  0879               	movf	??_printf+1,w
  4488  06D8  0085               	movwf	5
  4489  06D9  0800               	movf	0,w	;code access
  4490  06DA  00FA               	movwf	??_printf+2
  4491  06DB  087A               	movf	??_printf+2,w
  4492  06DC  00D0               	movwf	printf@c
  4493  06DD  0850               	movf	printf@c,w
  4494  06DE  1903               	btfsc	3,2
  4495  06DF  0008               	return
  4496                           
  4497                           ;doprnt.c: 538: if(c != '%')
  4498  06E0  3025               	movlw	37
  4499  06E1  0650               	xorwf	printf@c,w
  4500  06E2  1903               	btfsc	3,2
  4501  06E3  2EE9               	goto	l1289
  4502                           
  4503                           ;doprnt.c: 540: {
  4504                           ;doprnt.c: 541: (putch(c) );
  4505  06E4  0850               	movf	printf@c,w
  4506  06E5  3184  2457  3186   	fcall	_putch
  4507                           
  4508                           ;doprnt.c: 542: continue;
  4509  06E8  2ECD               	goto	l1359
  4510  06E9                     l1289:	
  4511                           
  4512                           ;doprnt.c: 543: }
  4513                           ;doprnt.c: 546: width = 0;
  4514  06E9  0020               	movlb	0	; select bank0
  4515  06EA  01CE               	clrf	printf@width
  4516  06EB  01CF               	clrf	printf@width+1
  4517                           
  4518                           ;doprnt.c: 548: flag = 0;
  4519  06EC  01CA               	clrf	printf@flag
  4520                           
  4521                           ;doprnt.c: 551: switch(*f) {
  4522                           
  4523                           ;doprnt.c: 550: for(;;) {
  4524  06ED  2EF3               	goto	l1295
  4525  06EE                     l299:	
  4526                           ;doprnt.c: 579: case '0':
  4527                           
  4528                           
  4529                           ;doprnt.c: 580: flag |= 0x04;
  4530  06EE  154A               	bsf	printf@flag,2
  4531                           
  4532                           ;doprnt.c: 581: f++;
  4533  06EF  3001               	movlw	1
  4534  06F0  07C0               	addwf	printf@f,f
  4535  06F1  3000               	movlw	0
  4536  06F2  3DC1               	addwfc	printf@f+1,f
  4537  06F3                     l1295:	
  4538                           ;doprnt.c: 584: }
  4539                           
  4540                           ;doprnt.c: 582: continue;
  4541                           
  4542  06F3  0840               	movf	printf@f,w
  4543  06F4  0084               	movwf	4
  4544  06F5  0841               	movf	printf@f+1,w
  4545  06F6  0085               	movwf	5
  4546  06F7  0800               	movf	0,w	;code access
  4547                           
  4548                           ; Switch size 1, requested type "space"
  4549                           ; Number of cases is 1, Range of values is 48 to 48
  4550                           ; switch strategies available:
  4551                           ; Name         Instructions Cycles
  4552                           ; simple_byte            4     3 (average)
  4553                           ; direct_byte           11     9 (fixed)
  4554                           ; jumptable            263     9 (fixed)
  4555                           ;	Chosen strategy is simple_byte
  4556  06F8  3A30               	xorlw	48	; case 48
  4557  06F9  1903               	skipnz
  4558  06FA  2EEE               	goto	l299
  4559  06FB  2EFC               	goto	l1297
  4560  06FC                     l1297:	
  4561                           ;doprnt.c: 586: }
  4562                           
  4563                           ;doprnt.c: 585: break;
  4564                           
  4565                           
  4566                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4567  06FC  0840               	movf	printf@f,w
  4568  06FD  0084               	movwf	4
  4569  06FE  0841               	movf	printf@f+1,w
  4570  06FF  0085               	movwf	5
  4571  0700  0800               	movf	0,w	;code access
  4572  0701  3184  24C5  3186   	fcall	_isdigit
  4573  0704  1C03               	btfss	3,0
  4574  0705  2F37               	goto	l1311
  4575                           
  4576                           ;doprnt.c: 598: width = 0;
  4577  0706  0020               	movlb	0	; select bank0
  4578  0707  01CE               	clrf	printf@width
  4579  0708  01CF               	clrf	printf@width+1
  4580  0709                     l1301:	
  4581                           ;doprnt.c: 599: do {
  4582                           
  4583                           
  4584                           ;doprnt.c: 600: width *= 10;
  4585  0709  300A               	movlw	10
  4586  070A  00F0               	movwf	___wmul@multiplier
  4587  070B  3000               	movlw	0
  4588  070C  00F1               	movwf	___wmul@multiplier+1
  4589  070D  0020               	movlb	0	; select bank0
  4590  070E  084F               	movf	printf@width+1,w
  4591  070F  00F3               	movwf	___wmul@multiplicand+1
  4592  0710  084E               	movf	printf@width,w
  4593  0711  00F2               	movwf	___wmul@multiplicand
  4594  0712  3185  2513  3186   	fcall	___wmul
  4595  0715  0871               	movf	?___wmul+1,w
  4596  0716  0020               	movlb	0	; select bank0
  4597  0717  00CF               	movwf	printf@width+1
  4598  0718  0870               	movf	?___wmul,w
  4599  0719  00CE               	movwf	printf@width
  4600                           
  4601                           ;doprnt.c: 601: width += *f++ - '0';
  4602  071A  0840               	movf	printf@f,w
  4603  071B  0084               	movwf	4
  4604  071C  0841               	movf	printf@f+1,w
  4605  071D  0085               	movwf	5
  4606  071E  0800               	movf	0,w	;code access
  4607  071F  3ED0               	addlw	208
  4608  0720  00F8               	movwf	??_printf
  4609  0721  30FF               	movlw	255
  4610  0722  1803               	skipnc
  4611  0723  3000               	movlw	0
  4612  0724  00F9               	movwf	??_printf+1
  4613  0725  0878               	movf	??_printf,w
  4614  0726  07CE               	addwf	printf@width,f
  4615  0727  0879               	movf	??_printf+1,w
  4616  0728  3DCF               	addwfc	printf@width+1,f
  4617  0729  3001               	movlw	1
  4618  072A  07C0               	addwf	printf@f,f
  4619  072B  3000               	movlw	0
  4620  072C  3DC1               	addwfc	printf@f+1,f
  4621                           
  4622                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4623  072D  0840               	movf	printf@f,w
  4624  072E  0084               	movwf	4
  4625  072F  0841               	movf	printf@f+1,w
  4626  0730  0085               	movwf	5
  4627  0731  0800               	movf	0,w	;code access
  4628  0732  3184  24C5  3186   	fcall	_isdigit
  4629  0735  1803               	btfsc	3,0
  4630  0736  2F09               	goto	l1301
  4631  0737                     l1311:	
  4632                           ;doprnt.c: 822: }
  4633                           
  4634                           ;doprnt.c: 813: continue;
  4635                           
  4636                           ;doprnt.c: 802: default:
  4637                           
  4638                           ;doprnt.c: 723: break;
  4639                           
  4640                           ;doprnt.c: 718: case 'x':
  4641                           
  4642                           ;doprnt.c: 638: goto alldone;
  4643                           
  4644                           ;doprnt.c: 637: case 0:
  4645                           
  4646                           ;doprnt.c: 608: }
  4647                           ;doprnt.c: 635: switch(c = *f++) {
  4648                           
  4649  0737  0020               	movlb	0	; select bank0
  4650  0738  0841               	movf	printf@f+1,w
  4651  0739  00F9               	movwf	??_printf+1
  4652  073A  0840               	movf	printf@f,w
  4653  073B  00F8               	movwf	??_printf
  4654  073C  0AC0               	incf	printf@f,f
  4655  073D  1903               	skipnz
  4656  073E  0AC1               	incf	printf@f+1,f
  4657  073F  0878               	movf	??_printf,w
  4658  0740  0084               	movwf	4
  4659  0741  0879               	movf	??_printf+1,w
  4660  0742  0085               	movwf	5
  4661  0743  0800               	movf	0,w	;code access
  4662  0744  00D0               	movwf	printf@c
  4663                           
  4664                           ; Switch size 1, requested type "space"
  4665                           ; Number of cases is 2, Range of values is 0 to 120
  4666                           ; switch strategies available:
  4667                           ; Name         Instructions Cycles
  4668                           ; simple_byte            7     4 (average)
  4669                           ; direct_byte          248     6 (fixed)
  4670                           ; jumptable            260     6 (fixed)
  4671                           ;	Chosen strategy is simple_byte
  4672  0745  3A00               	xorlw	0	; case 0
  4673  0746  1903               	skipnz
  4674  0747  2FF5               	goto	l329
  4675  0748  3A78               	xorlw	120	; case 120
  4676  0749  1903               	skipnz
  4677  074A  2F4C               	goto	l1313
  4678  074B  2ECD               	goto	l1359
  4679  074C                     l1313:	
  4680                           
  4681                           ;doprnt.c: 1273: {
  4682                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4683  074C  0020               	movlb	0	; select bank0
  4684  074D  0849               	movf	printf@ap,w
  4685  074E  0086               	movwf	6
  4686  074F  0187               	clrf	7
  4687  0750  3F40               	moviw [0]fsr1
  4688  0751  00CB               	movwf	printf@val
  4689  0752  3F41               	moviw [1]fsr1
  4690  0753  00CC               	movwf	printf@val+1
  4691  0754  3002               	movlw	2
  4692  0755  00F8               	movwf	??_printf
  4693  0756  0878               	movf	??_printf,w
  4694  0757  07C9               	addwf	printf@ap,f
  4695                           
  4696                           ;doprnt.c: 1287: }
  4697                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4698  0758  01D0               	clrf	printf@c
  4699  0759  0AD0               	incf	printf@c,f
  4700  075A  3004               	movlw	4
  4701  075B  0650               	xorwf	printf@c,w
  4702  075C  1903               	btfsc	3,2
  4703  075D  2F7D               	goto	l1329
  4704  075E                     l1323:	
  4705                           
  4706                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4707  075E  0850               	movf	printf@c,w
  4708  075F  00F8               	movwf	??_printf
  4709  0760  01F9               	clrf	??_printf+1
  4710  0761  35F8               	lslf	??_printf,f
  4711  0762  0DF9               	rlf	??_printf+1,f
  4712  0763  3000               	movlw	low (_hexpowers| (0+32768))
  4713  0764  0778               	addwf	??_printf,w
  4714  0765  0084               	movwf	4
  4715  0766  3088               	movlw	high (_hexpowers| (0+32768))
  4716  0767  3D79               	addwfc	??_printf+1,w
  4717  0768  0085               	movwf	5
  4718  0769  3F00               	moviw [0]fsr0
  4719  076A  00FA               	movwf	??_printf+2
  4720  076B  3F01               	moviw [1]fsr0
  4721  076C  00FB               	movwf	??_printf+3
  4722  076D  087B               	movf	??_printf+3,w
  4723  076E  024C               	subwf	printf@val+1,w
  4724  076F  1D03               	skipz
  4725  0770  2F73               	goto	u715
  4726  0771  087A               	movf	??_printf+2,w
  4727  0772  024B               	subwf	printf@val,w
  4728  0773                     u715:	
  4729  0773  1C03               	btfss	3,0
  4730  0774  2F7D               	goto	l1329
  4731                           
  4732                           ;doprnt.c: 1318: break;
  4733  0775  3001               	movlw	1
  4734  0776  00F8               	movwf	??_printf
  4735  0777  0878               	movf	??_printf,w
  4736  0778  07D0               	addwf	printf@c,f
  4737  0779  3004               	movlw	4
  4738  077A  0650               	xorwf	printf@c,w
  4739  077B  1D03               	btfss	3,2
  4740  077C  2F5E               	goto	l1323
  4741  077D                     l1329:	
  4742                           
  4743                           ;doprnt.c: 1381: if(width > c)
  4744  077D  0850               	movf	printf@c,w
  4745  077E  00F8               	movwf	??_printf
  4746  077F  01F9               	clrf	??_printf+1
  4747  0780  1BF8               	btfsc	??_printf,7
  4748  0781  03F9               	decf	??_printf+1,f
  4749  0782  0879               	movf	??_printf+1,w
  4750  0783  3A80               	xorlw	128
  4751  0784  00FA               	movwf	??_printf+2
  4752  0785  084F               	movf	printf@width+1,w
  4753  0786  3A80               	xorlw	128
  4754  0787  027A               	subwf	??_printf+2,w
  4755  0788  1D03               	skipz
  4756  0789  2F8C               	goto	u735
  4757  078A  084E               	movf	printf@width,w
  4758  078B  0278               	subwf	??_printf,w
  4759  078C                     u735:	
  4760  078C  1803               	skipnc
  4761  078D  2F99               	goto	l1333
  4762                           
  4763                           ;doprnt.c: 1382: width -= c;
  4764  078E  0020               	movlb	0	; select bank0
  4765  078F  0850               	movf	printf@c,w
  4766  0790  00F8               	movwf	??_printf
  4767  0791  01F9               	clrf	??_printf+1
  4768  0792  1BF8               	btfsc	??_printf,7
  4769  0793  03F9               	decf	??_printf+1,f
  4770  0794  0878               	movf	??_printf,w
  4771  0795  02CE               	subwf	printf@width,f
  4772  0796  0879               	movf	??_printf+1,w
  4773  0797  3BCF               	subwfb	printf@width+1,f
  4774  0798  2F9C               	goto	l1335
  4775  0799                     l1333:	
  4776                           
  4777                           ;doprnt.c: 1383: else
  4778                           ;doprnt.c: 1384: width = 0;
  4779  0799  0020               	movlb	0	; select bank0
  4780  079A  01CE               	clrf	printf@width
  4781  079B  01CF               	clrf	printf@width+1
  4782  079C                     l1335:	
  4783                           
  4784                           ;doprnt.c: 1387: if(flag & 0x04) {
  4785  079C  1D4A               	btfss	printf@flag,2
  4786  079D  2FAC               	goto	l1343
  4787  079E                     L3:	
  4788                           
  4789                           ;doprnt.c: 1415: if(width)
  4790  079E  084E               	movf	printf@width,w
  4791  079F  044F               	iorwf	printf@width+1,w
  4792  07A0  1903               	btfsc	3,2
  4793  07A1  2FBD               	goto	l1349
  4794                           
  4795                           ;doprnt.c: 1417: (putch('0') );
  4796                           
  4797                           ;doprnt.c: 1416: do
  4798  07A2  3030               	movlw	48
  4799  07A3  3184  2457  3186   	fcall	_putch
  4800                           
  4801                           ;doprnt.c: 1418: while(--width);
  4802  07A6  30FF               	movlw	255
  4803  07A7  0020               	movlb	0	; select bank0
  4804  07A8  07CE               	addwf	printf@width,f
  4805  07A9  30FF               	movlw	255
  4806  07AA  3DCF               	addwfc	printf@width+1,f
  4807  07AB  2F9E               	goto	L3
  4808  07AC                     l1343:	
  4809                           ;doprnt.c: 1420: } else
  4810                           
  4811                           
  4812                           ;doprnt.c: 1422: {
  4813                           ;doprnt.c: 1424: if(width
  4814                           ;doprnt.c: 1428: )
  4815  07AC  084E               	movf	printf@width,w
  4816  07AD  044F               	iorwf	printf@width+1,w
  4817  07AE  1903               	btfsc	3,2
  4818  07AF  2FBD               	goto	l1349
  4819  07B0                     l1345:	
  4820                           ;doprnt.c: 1429: do
  4821                           
  4822                           
  4823                           ;doprnt.c: 1430: (putch(' ') );
  4824  07B0  3020               	movlw	32
  4825  07B1  3184  2457  3186   	fcall	_putch
  4826                           
  4827                           ;doprnt.c: 1431: while(--width);
  4828  07B4  30FF               	movlw	255
  4829  07B5  0020               	movlb	0	; select bank0
  4830  07B6  07CE               	addwf	printf@width,f
  4831  07B7  30FF               	movlw	255
  4832  07B8  3DCF               	addwfc	printf@width+1,f
  4833  07B9  084E               	movf	printf@width,w
  4834  07BA  044F               	iorwf	printf@width+1,w
  4835  07BB  1D03               	btfss	3,2
  4836  07BC  2FB0               	goto	l1345
  4837  07BD                     l1349:	
  4838                           
  4839                           ;doprnt.c: 1469: }
  4840                           ;doprnt.c: 1472: prec = c;
  4841  07BD  0850               	movf	printf@c,w
  4842  07BE  00F8               	movwf	??_printf
  4843  07BF  0878               	movf	??_printf,w
  4844  07C0  00CD               	movwf	printf@prec
  4845  07C1                     l1357:	
  4846                           ;doprnt.c: 1474: while(prec--) {
  4847                           
  4848  07C1  30FF               	movlw	255
  4849  07C2  00F8               	movwf	??_printf
  4850  07C3  0878               	movf	??_printf,w
  4851  07C4  0020               	movlb	0	; select bank0
  4852  07C5  07CD               	addwf	printf@prec,f
  4853  07C6  0A4D               	incf	printf@prec,w
  4854  07C7  1903               	btfsc	3,2
  4855  07C8  2ECD               	goto	l1359
  4856                           
  4857                           ;doprnt.c: 1478: {
  4858                           ;doprnt.c: 1499: {
  4859                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4860  07C9  084D               	movf	printf@prec,w
  4861  07CA  00F8               	movwf	??_printf
  4862  07CB  01F9               	clrf	??_printf+1
  4863  07CC  35F8               	lslf	??_printf,f
  4864  07CD  0DF9               	rlf	??_printf+1,f
  4865  07CE  3000               	movlw	low (_hexpowers| (0+32768))
  4866  07CF  0778               	addwf	??_printf,w
  4867  07D0  0084               	movwf	4
  4868  07D1  3088               	movlw	high (_hexpowers| (0+32768))
  4869  07D2  3D79               	addwfc	??_printf+1,w
  4870  07D3  0085               	movwf	5
  4871  07D4  3F00               	moviw [0]fsr0
  4872  07D5  00F0               	movwf	___lwdiv@divisor
  4873  07D6  3F01               	moviw [1]fsr0
  4874  07D7  00F1               	movwf	___lwdiv@divisor+1
  4875  07D8  084C               	movf	printf@val+1,w
  4876  07D9  00F3               	movwf	___lwdiv@dividend+1
  4877  07DA  084B               	movf	printf@val,w
  4878  07DB  00F2               	movwf	___lwdiv@dividend
  4879  07DC  3185  25CC  3186   	fcall	___lwdiv
  4880  07DF  0870               	movf	?___lwdiv,w
  4881  07E0  390F               	andlw	15
  4882  07E1  00FA               	movwf	??_printf+2
  4883  07E2  087A               	movf	??_printf+2,w
  4884  07E3  0020               	movlb	0	; select bank0
  4885  07E4  00C8               	movwf	printf@idx
  4886                           
  4887                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4888  07E5  0848               	movf	printf@idx,w
  4889  07E6  3E3E               	addlw	low (STR_11| (0+32768))
  4890  07E7  0084               	movwf	4
  4891  07E8  3088               	movlw	high (STR_11| (0+32768))
  4892  07E9  1803               	skipnc
  4893  07EA  3E01               	addlw	1
  4894  07EB  0085               	movwf	5
  4895  07EC  0800               	movf	0,w	;code access
  4896  07ED  00F8               	movwf	??_printf
  4897  07EE  0878               	movf	??_printf,w
  4898  07EF  00D0               	movwf	printf@c
  4899                           
  4900                           ;doprnt.c: 1508: }
  4901                           ;doprnt.c: 1523: }
  4902                           ;doprnt.c: 1524: (putch(c) );
  4903  07F0  0850               	movf	printf@c,w
  4904  07F1  3184  2457  3186   	fcall	_putch
  4905  07F4  2FC1               	goto	l1357
  4906  07F5                     l329:	
  4907                           ;doprnt.c: 1540: return 0;
  4908                           ;	Return value of _printf is never used
  4909                           
  4910                           ;doprnt.c: 1525: }
  4911                           ;doprnt.c: 1533: }
  4912                           ;doprnt.c: 1535: alldone:
  4913                           
  4914  07F5  0008               	return
  4915  07F6                     __end_of_printf:	
  4916                           
  4917                           	psect	text9
  4918  0457                     __ptext9:	
  4919 ;; *************** function _putch *****************
  4920 ;; Defined at:
  4921 ;;		line 102 in file "mcc_generated_files/eusart.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  txData          1    wreg     unsigned char 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  txData          1    1[COMMON] unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;		None               void
  4928 ;; Registers used:
  4929 ;;		wreg, status,2, status,0, pclath, cstack
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4939 ;;Total ram usage:        1 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:    1
  4942 ;; This function calls:
  4943 ;;		_EUSART_Write
  4944 ;; This function is called by:
  4945 ;;		_printf
  4946 ;;		_puts
  4947 ;;		_cputs
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           
  4952                           ;psect for function _putch
  4953  0457                     _putch:	
  4954                           
  4955                           ;incstack = 0
  4956                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4957                           ;putch@txData stored from wreg
  4958  0457  00F1               	movwf	putch@txData
  4959                           
  4960                           ;eusart.c: 103: EUSART_Write(txData);
  4961  0458  0871               	movf	putch@txData,w
  4962  0459  3184  2468         	fcall	_EUSART_Write
  4963  045B  0008               	return
  4964  045C                     __end_of_putch:	
  4965                           
  4966                           	psect	text10
  4967  0468                     __ptext10:	
  4968 ;; *************** function _EUSART_Write *****************
  4969 ;; Defined at:
  4970 ;;		line 91 in file "mcc_generated_files/eusart.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  txData          1    wreg     unsigned char 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  txData          1    0[COMMON] unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;Total ram usage:        1 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_putch
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           
  4998                           ;psect for function _EUSART_Write
  4999  0468                     _EUSART_Write:	
  5000                           
  5001                           ;incstack = 0
  5002                           ; Regs used in _EUSART_Write: [wreg]
  5003                           ;EUSART_Write@txData stored from wreg
  5004  0468  00F0               	movwf	EUSART_Write@txData
  5005  0469                     l194:	
  5006                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
  5007                           
  5008  0469  0020               	movlb	0	; select bank0
  5009  046A  1E10               	btfss	16,4	;volatile
  5010  046B  2C69               	goto	l194
  5011                           
  5012                           ;eusart.c: 93: }
  5013                           ;eusart.c: 95: TX1REG = txData;
  5014  046C  0870               	movf	EUSART_Write@txData,w
  5015  046D  0023               	movlb	3	; select bank3
  5016  046E  009A               	movwf	26	;volatile
  5017  046F  0008               	return
  5018  0470                     __end_of_EUSART_Write:	
  5019                           
  5020                           	psect	text11
  5021  04C5                     __ptext11:	
  5022 ;; *************** function _isdigit *****************
  5023 ;; Defined at:
  5024 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  c               1    wreg     unsigned char 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  c               1    1[COMMON] unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;		None               void
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;Total ram usage:        2 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_printf
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _isdigit
  5053  04C5                     _isdigit:	
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5057                           ;isdigit@c stored from wreg
  5058  04C5  00F1               	movwf	isdigit@c
  5059  04C6  01F0               	clrf	_isdigit$767
  5060  04C7  303A               	movlw	58
  5061  04C8  0271               	subwf	isdigit@c,w
  5062  04C9  1803               	skipnc
  5063  04CA  2CD1               	goto	l1137
  5064  04CB  3030               	movlw	48
  5065  04CC  0271               	subwf	isdigit@c,w
  5066  04CD  1C03               	skipc
  5067  04CE  2CD1               	goto	l1137
  5068  04CF  01F0               	clrf	_isdigit$767
  5069  04D0  0AF0               	incf	_isdigit$767,f
  5070  04D1                     l1137:	
  5071  04D1  0C70               	rrf	_isdigit$767,w
  5072  04D2  0008               	return
  5073  04D3                     __end_of_isdigit:	
  5074                           
  5075                           	psect	text12
  5076  0513                     __ptext12:	
  5077 ;; *************** function ___wmul *****************
  5078 ;; Defined at:
  5079 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  multiplier      2    0[COMMON] unsigned int 
  5082 ;;  multiplicand    2    2[COMMON] unsigned int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  product         2    4[COMMON] unsigned int 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  2    0[COMMON] unsigned int 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5095 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;Total ram usage:        6 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_printf
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function ___wmul
  5109  0513                     ___wmul:	
  5110                           
  5111                           ;incstack = 0
  5112                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5113  0513  01F4               	clrf	___wmul@product
  5114  0514  01F5               	clrf	___wmul@product+1
  5115  0515                     l1143:	
  5116  0515  1C70               	btfss	___wmul@multiplier,0
  5117  0516  2D1B               	goto	l333
  5118  0517  0872               	movf	___wmul@multiplicand,w
  5119  0518  07F4               	addwf	___wmul@product,f
  5120  0519  0873               	movf	___wmul@multiplicand+1,w
  5121  051A  3DF5               	addwfc	___wmul@product+1,f
  5122  051B                     l333:	
  5123  051B  3001               	movlw	1
  5124  051C                     u525:	
  5125  051C  35F2               	lslf	___wmul@multiplicand,f
  5126  051D  0DF3               	rlf	___wmul@multiplicand+1,f
  5127  051E  0B89               	decfsz	9,f
  5128  051F  2D1C               	goto	u525
  5129  0520  3001               	movlw	1
  5130  0521                     u535:	
  5131  0521  36F1               	lsrf	___wmul@multiplier+1,f
  5132  0522  0CF0               	rrf	___wmul@multiplier,f
  5133  0523  0B89               	decfsz	9,f
  5134  0524  2D21               	goto	u535
  5135  0525  0870               	movf	___wmul@multiplier,w
  5136  0526  0471               	iorwf	___wmul@multiplier+1,w
  5137  0527  1D03               	btfss	3,2
  5138  0528  2D15               	goto	l1143
  5139  0529  0875               	movf	___wmul@product+1,w
  5140  052A  00F1               	movwf	?___wmul+1
  5141  052B  0874               	movf	___wmul@product,w
  5142  052C  00F0               	movwf	?___wmul
  5143  052D  0008               	return
  5144  052E                     __end_of___wmul:	
  5145                           
  5146                           	psect	text13
  5147  05CC                     __ptext13:	
  5148 ;; *************** function ___lwdiv *****************
  5149 ;; Defined at:
  5150 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  divisor         2    0[COMMON] unsigned int 
  5153 ;;  dividend        2    2[COMMON] unsigned int 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  quotient        2    5[COMMON] unsigned int 
  5156 ;;  counter         1    7[COMMON] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  2    0[COMMON] unsigned int 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;Total ram usage:        8 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_printf
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           
  5180                           ;psect for function ___lwdiv
  5181  05CC                     ___lwdiv:	
  5182                           
  5183                           ;incstack = 0
  5184                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5185  05CC  01F5               	clrf	___lwdiv@quotient
  5186  05CD  01F6               	clrf	___lwdiv@quotient+1
  5187  05CE  0870               	movf	___lwdiv@divisor,w
  5188  05CF  0471               	iorwf	___lwdiv@divisor+1,w
  5189  05D0  1903               	btfsc	3,2
  5190  05D1  2DFB               	goto	l1177
  5191  05D2  01F7               	clrf	___lwdiv@counter
  5192  05D3  0AF7               	incf	___lwdiv@counter,f
  5193  05D4                     l1165:	
  5194  05D4  1BF1               	btfsc	___lwdiv@divisor+1,7
  5195  05D5  2DE0               	goto	l1167
  5196  05D6  3001               	movlw	1
  5197  05D7                     u565:	
  5198  05D7  35F0               	lslf	___lwdiv@divisor,f
  5199  05D8  0DF1               	rlf	___lwdiv@divisor+1,f
  5200  05D9  0B89               	decfsz	9,f
  5201  05DA  2DD7               	goto	u565
  5202  05DB  3001               	movlw	1
  5203  05DC  00F4               	movwf	??___lwdiv
  5204  05DD  0874               	movf	??___lwdiv,w
  5205  05DE  07F7               	addwf	___lwdiv@counter,f
  5206  05DF  2DD4               	goto	l1165
  5207  05E0                     l1167:	
  5208  05E0  3001               	movlw	1
  5209  05E1                     u585:	
  5210  05E1  35F5               	lslf	___lwdiv@quotient,f
  5211  05E2  0DF6               	rlf	___lwdiv@quotient+1,f
  5212  05E3  0B89               	decfsz	9,f
  5213  05E4  2DE1               	goto	u585
  5214  05E5  0871               	movf	___lwdiv@divisor+1,w
  5215  05E6  0273               	subwf	___lwdiv@dividend+1,w
  5216  05E7  1D03               	skipz
  5217  05E8  2DEB               	goto	u595
  5218  05E9  0870               	movf	___lwdiv@divisor,w
  5219  05EA  0272               	subwf	___lwdiv@dividend,w
  5220  05EB                     u595:	
  5221  05EB  1C03               	skipc
  5222  05EC  2DF2               	goto	l1173
  5223  05ED  0870               	movf	___lwdiv@divisor,w
  5224  05EE  02F2               	subwf	___lwdiv@dividend,f
  5225  05EF  0871               	movf	___lwdiv@divisor+1,w
  5226  05F0  3BF3               	subwfb	___lwdiv@dividend+1,f
  5227  05F1  1475               	bsf	___lwdiv@quotient,0
  5228  05F2                     l1173:	
  5229  05F2  3001               	movlw	1
  5230  05F3                     u605:	
  5231  05F3  36F1               	lsrf	___lwdiv@divisor+1,f
  5232  05F4  0CF0               	rrf	___lwdiv@divisor,f
  5233  05F5  0B89               	decfsz	9,f
  5234  05F6  2DF3               	goto	u605
  5235  05F7  3001               	movlw	1
  5236  05F8  02F7               	subwf	___lwdiv@counter,f
  5237  05F9  1D03               	btfss	3,2
  5238  05FA  2DE0               	goto	l1167
  5239  05FB                     l1177:	
  5240  05FB  0876               	movf	___lwdiv@quotient+1,w
  5241  05FC  00F1               	movwf	?___lwdiv+1
  5242  05FD  0875               	movf	___lwdiv@quotient,w
  5243  05FE  00F0               	movwf	?___lwdiv
  5244  05FF  0008               	return
  5245  0600                     __end_of___lwdiv:	
  5246                           
  5247                           	psect	text14
  5248  0572                     __ptext14:	
  5249 ;; *************** function _mygets *****************
  5250 ;; Defined at:
  5251 ;;		line 116 in file "main.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  p               1    3[COMMON] PTR unsigned char 
  5256 ;;		 -> rxBuffer(32), 
  5257 ;;  i               1    2[COMMON] unsigned char 
  5258 ;;  c               1    1[COMMON] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;		None               void
  5261 ;; Registers used:
  5262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;Total ram usage:        4 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    2
  5275 ;; This function calls:
  5276 ;;		_getch
  5277 ;; This function is called by:
  5278 ;;		_main
  5279 ;;		_SendBatteryValue
  5280 ;;		_SendHeartHateValue
  5281 ;;		_SendHealthThermometer
  5282 ;;		_sendCMD
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function _mygets
  5288  0572                     _mygets:	
  5289                           
  5290                           ;main.c: 118: char c, i=0;
  5291                           
  5292                           ;incstack = 0
  5293                           ; Regs used in _mygets: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5294  0572  01F2               	clrf	mygets@i
  5295                           
  5296                           ;main.c: 119: char *p = rxBuffer;
  5297  0573  3020               	movlw	(low (_rxBuffer| 0))& (0+255)
  5298  0574  00F0               	movwf	??_mygets
  5299  0575  0870               	movf	??_mygets,w
  5300  0576  00F3               	movwf	mygets@p
  5301                           
  5302                           ;main.c: 120: while ( (i++ < sizeof(rxBuffer)) && (( c = getch()) != '\n')) {
  5303  0577  2D83               	goto	l1277
  5304  0578                     l1273:	
  5305                           
  5306                           ;main.c: 121: *p++ = c;
  5307  0578  0871               	movf	mygets@c,w
  5308  0579  00F0               	movwf	??_mygets
  5309  057A  0873               	movf	mygets@p,w
  5310  057B  0086               	movwf	6
  5311  057C  0187               	clrf	7
  5312  057D  0870               	movf	??_mygets,w
  5313  057E  0081               	movwf	1
  5314  057F  3001               	movlw	1
  5315  0580  00F0               	movwf	??_mygets
  5316  0581  0870               	movf	??_mygets,w
  5317  0582  07F3               	addwf	mygets@p,f
  5318  0583                     l1277:	
  5319  0583  0872               	movf	mygets@i,w
  5320  0584  0AF2               	incf	mygets@i,f
  5321  0585  00F0               	movwf	??_mygets
  5322  0586  3020               	movlw	32
  5323  0587  0270               	subwf	??_mygets,w
  5324  0588  1803               	skipnc
  5325  0589  2D94               	goto	l1281
  5326  058A  3184  2454  3185   	fcall	_getch
  5327  058D  00F0               	movwf	??_mygets
  5328  058E  0870               	movf	??_mygets,w
  5329  058F  00F1               	movwf	mygets@c
  5330  0590  300A               	movlw	10
  5331  0591  0671               	xorwf	mygets@c,w
  5332  0592  1D03               	btfss	3,2
  5333  0593  2D78               	goto	l1273
  5334  0594                     l1281:	
  5335                           
  5336                           ;main.c: 122: }
  5337                           ;main.c: 123: *p = '\0';
  5338  0594  0873               	movf	mygets@p,w
  5339  0595  0086               	movwf	6
  5340  0596  0187               	clrf	7
  5341  0597  0181               	clrf	1
  5342  0598  0008               	return
  5343  0599                     __end_of_mygets:	
  5344                           
  5345                           	psect	text15
  5346  0454                     __ptext15:	
  5347 ;; *************** function _getch *****************
  5348 ;; Defined at:
  5349 ;;		line 98 in file "mcc_generated_files/eusart.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      unsigned char 
  5356 ;; Registers used:
  5357 ;;		wreg, pclath, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;Total ram usage:        0 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    1
  5370 ;; This function calls:
  5371 ;;		_EUSART_Read
  5372 ;; This function is called by:
  5373 ;;		_mygets
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _getch
  5379  0454                     _getch:	
  5380                           
  5381                           ;eusart.c: 99: return EUSART_Read();
  5382                           
  5383                           ;incstack = 0
  5384                           ; Regs used in _getch: [wreg+pclath+cstack]
  5385  0454  3184  2479         	fcall	_EUSART_Read
  5386  0456  0008               	return
  5387  0457                     __end_of_getch:	
  5388                           
  5389                           	psect	text16
  5390  0479                     __ptext16:	
  5391 ;; *************** function _EUSART_Read *****************
  5392 ;; Defined at:
  5393 ;;		line 76 in file "mcc_generated_files/eusart.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;		None
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      unsigned char 
  5400 ;; Registers used:
  5401 ;;		wreg
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;Total ram usage:        0 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_getch
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           
  5421                           ;psect for function _EUSART_Read
  5422  0479                     _EUSART_Read:	
  5423  0479                     l187:	
  5424                           ;eusart.c: 78: while (!PIR1bits.RCIF) {
  5425                           
  5426                           ;incstack = 0
  5427                           ; Regs used in _EUSART_Read: [wreg]
  5428                           
  5429  0479  0020               	movlb	0	; select bank0
  5430  047A  1E90               	btfss	16,5	;volatile
  5431  047B  2C79               	goto	l187
  5432                           
  5433                           ;eusart.c: 79: }
  5434                           ;eusart.c: 81: if (1 == RC1STAbits.OERR) {
  5435  047C  0023               	movlb	3	; select bank3
  5436  047D  1C9D               	btfss	29,1	;volatile
  5437  047E  2C81               	goto	l1117
  5438                           
  5439                           ;eusart.c: 84: RC1STAbits.CREN = 0;
  5440  047F  121D               	bcf	29,4	;volatile
  5441                           
  5442                           ;eusart.c: 85: RC1STAbits.CREN = 1;
  5443  0480  161D               	bsf	29,4	;volatile
  5444  0481                     l1117:	
  5445                           
  5446                           ;eusart.c: 86: }
  5447                           ;eusart.c: 88: return RC1REG;
  5448  0481  0819               	movf	25,w	;volatile
  5449  0482  0008               	return
  5450  0483                     __end_of_EUSART_Read:	
  5451                           
  5452                           	psect	text17
  5453  04D3                     __ptext17:	
  5454 ;; *************** function _SYSTEM_Initialize *****************
  5455 ;; Defined at:
  5456 ;;		line 77 in file "mcc_generated_files/mcc.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;		None
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;		None
  5461 ;; Return value:  Size  Location     Type
  5462 ;;		None               void
  5463 ;; Registers used:
  5464 ;;		wreg, status,2, status,0, pclath, cstack
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;Total ram usage:        0 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    2
  5477 ;; This function calls:
  5478 ;;		_ADC1_Initialize
  5479 ;;		_EUSART_Initialize
  5480 ;;		_OSCILLATOR_Initialize
  5481 ;;		_PIN_MANAGER_Initialize
  5482 ;;		_PWM4_Initialize
  5483 ;;		_TMR2_Initialize
  5484 ;; This function is called by:
  5485 ;;		_main
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           
  5490                           ;psect for function _SYSTEM_Initialize
  5491  04D3                     _SYSTEM_Initialize:	
  5492                           
  5493                           ;mcc.c: 78: OSCILLATOR_Initialize();
  5494                           
  5495                           ;incstack = 0
  5496                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5497  04D3  3184  245C  3184   	fcall	_OSCILLATOR_Initialize
  5498                           
  5499                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  5500  04D6  3186  2600  3184   	fcall	_PIN_MANAGER_Initialize
  5501                           
  5502                           ;mcc.c: 80: EUSART_Initialize();
  5503  04D9  3184  2497  3184   	fcall	_EUSART_Initialize
  5504                           
  5505                           ;mcc.c: 81: TMR2_Initialize();
  5506  04DC  3184  24B8  3184   	fcall	_TMR2_Initialize
  5507                           
  5508                           ;mcc.c: 82: PWM4_Initialize();
  5509  04DF  3184  24A2  3184   	fcall	_PWM4_Initialize
  5510                           
  5511                           ;mcc.c: 83: ADC1_Initialize();
  5512  04E2  3184  2470         	fcall	_ADC1_Initialize
  5513  04E4  0008               	return
  5514  04E5                     __end_of_SYSTEM_Initialize:	
  5515                           
  5516                           	psect	text18
  5517  04B8                     __ptext18:	
  5518 ;; *************** function _TMR2_Initialize *****************
  5519 ;; Defined at:
  5520 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;		None
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;		None
  5525 ;; Return value:  Size  Location     Type
  5526 ;;		None               void
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0, pclath, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;Total ram usage:        0 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    1
  5541 ;; This function calls:
  5542 ;;		_TMR2_Start
  5543 ;; This function is called by:
  5544 ;;		_SYSTEM_Initialize
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function _TMR2_Initialize
  5550  04B8                     _TMR2_Initialize:	
  5551                           
  5552                           ;tmr2.c: 62: T2CON = 0x60;
  5553                           
  5554                           ;incstack = 0
  5555                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5556  04B8  3060               	movlw	96
  5557  04B9  0020               	movlb	0	; select bank0
  5558  04BA  009C               	movwf	28	;volatile
  5559                           
  5560                           ;tmr2.c: 65: T2CLKCON = 0x00;
  5561  04BB  019E               	clrf	30	;volatile
  5562                           
  5563                           ;tmr2.c: 68: T2HLT = 0x00;
  5564  04BC  019D               	clrf	29	;volatile
  5565                           
  5566                           ;tmr2.c: 71: T2RST = 0x00;
  5567  04BD  019F               	clrf	31	;volatile
  5568                           
  5569                           ;tmr2.c: 74: T2PR = 0xFF;
  5570  04BE  30FF               	movlw	255
  5571  04BF  009B               	movwf	27	;volatile
  5572                           
  5573                           ;tmr2.c: 77: T2TMR = 0x00;
  5574  04C0  019A               	clrf	26	;volatile
  5575                           
  5576                           ;tmr2.c: 80: PIR1bits.TMR2IF = 0;
  5577  04C1  1090               	bcf	16,1	;volatile
  5578                           
  5579                           ;tmr2.c: 83: TMR2_Start();
  5580  04C2  3184  2451         	fcall	_TMR2_Start
  5581  04C4  0008               	return
  5582  04C5                     __end_of_TMR2_Initialize:	
  5583                           
  5584                           	psect	text19
  5585  0451                     __ptext19:	
  5586 ;; *************** function _TMR2_Start *****************
  5587 ;; Defined at:
  5588 ;;		line 96 in file "mcc_generated_files/tmr2.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;		None               void
  5595 ;; Registers used:
  5596 ;;		None
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;Total ram usage:        0 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_TMR2_Initialize
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           
  5616                           ;psect for function _TMR2_Start
  5617  0451                     _TMR2_Start:	
  5618                           
  5619                           ;tmr2.c: 98: T2CONbits.TMR2ON = 1;
  5620                           
  5621                           ;incstack = 0
  5622                           ; Regs used in _TMR2_Start: []
  5623  0451  0020               	movlb	0	; select bank0
  5624  0452  179C               	bsf	28,7	;volatile
  5625  0453  0008               	return
  5626  0454                     __end_of_TMR2_Start:	
  5627                           
  5628                           	psect	text20
  5629  04A2                     __ptext20:	
  5630 ;; *************** function _PWM4_Initialize *****************
  5631 ;; Defined at:
  5632 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;		None
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;		None               void
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5650 ;;Total ram usage:        0 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_SYSTEM_Initialize
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _PWM4_Initialize
  5661  04A2                     _PWM4_Initialize:	
  5662                           
  5663                           ;pwm4.c: 61: PWM4CON = 0x80;
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
  5667  04A2  3080               	movlw	128
  5668  04A3  002C               	movlb	12	; select bank12
  5669  04A4  009C               	movwf	28	;volatile
  5670                           
  5671                           ;pwm4.c: 64: PWM4DCH = 0x7F;
  5672  04A5  307F               	movlw	127
  5673  04A6  009B               	movwf	27	;volatile
  5674                           
  5675                           ;pwm4.c: 67: PWM4DCL = 0xC0;
  5676  04A7  30C0               	movlw	192
  5677  04A8  009A               	movwf	26	;volatile
  5678                           
  5679                           ;pwm4.c: 71: CCPTMRSbits.P4TSEL = 0x0;
  5680  04A9  303F               	movlw	-193
  5681  04AA  0025               	movlb	5	; select bank5
  5682  04AB  059E               	andwf	30,f	;volatile
  5683  04AC  0008               	return
  5684  04AD                     __end_of_PWM4_Initialize:	
  5685                           
  5686                           	psect	text21
  5687  0600                     __ptext21:	
  5688 ;; *************** function _PIN_MANAGER_Initialize *****************
  5689 ;; Defined at:
  5690 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;		None
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  state           1    0[COMMON] unsigned char 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;		None               void
  5697 ;; Registers used:
  5698 ;;		wreg, status,2
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;Total ram usage:        1 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; This function calls:
  5711 ;;		Nothing
  5712 ;; This function is called by:
  5713 ;;		_SYSTEM_Initialize
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           
  5718                           ;psect for function _PIN_MANAGER_Initialize
  5719  0600                     _PIN_MANAGER_Initialize:	
  5720                           
  5721                           ;pin_manager.c: 52: LATA = 0x00;
  5722                           
  5723                           ;incstack = 0
  5724                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5725  0600  0022               	movlb	2	; select bank2
  5726  0601  018C               	clrf	12	;volatile
  5727                           
  5728                           ;pin_manager.c: 53: TRISA = 0x2B;
  5729  0602  302B               	movlw	43
  5730  0603  0021               	movlb	1	; select bank1
  5731  0604  008C               	movwf	12	;volatile
  5732                           
  5733                           ;pin_manager.c: 54: ANSELA = 0x03;
  5734  0605  3003               	movlw	3
  5735  0606  0023               	movlb	3	; select bank3
  5736  0607  008C               	movwf	12	;volatile
  5737                           
  5738                           ;pin_manager.c: 56: LATB = 0x00;
  5739  0608  0022               	movlb	2	; select bank2
  5740  0609  018D               	clrf	13	;volatile
  5741                           
  5742                           ;pin_manager.c: 57: TRISB = 0xF0;
  5743  060A  30F0               	movlw	240
  5744  060B  0021               	movlb	1	; select bank1
  5745  060C  008D               	movwf	13	;volatile
  5746                           
  5747                           ;pin_manager.c: 58: ANSELB = 0x10;
  5748  060D  3010               	movlw	16
  5749  060E  0023               	movlb	3	; select bank3
  5750  060F  008D               	movwf	13	;volatile
  5751                           
  5752                           ;pin_manager.c: 59: WPUB = 0x00;
  5753  0610  0024               	movlb	4	; select bank4
  5754  0611  018D               	clrf	13	;volatile
  5755                           
  5756                           ;pin_manager.c: 61: LATC = 0x20;
  5757  0612  3020               	movlw	32
  5758  0613  0022               	movlb	2	; select bank2
  5759  0614  008E               	movwf	14	;volatile
  5760                           
  5761                           ;pin_manager.c: 62: TRISC = 0x5F;
  5762  0615  305F               	movlw	95
  5763  0616  0021               	movlb	1	; select bank1
  5764  0617  008E               	movwf	14	;volatile
  5765                           
  5766                           ;pin_manager.c: 63: ANSELC = 0x4B;
  5767  0618  304B               	movlw	75
  5768  0619  0023               	movlb	3	; select bank3
  5769  061A  008E               	movwf	14	;volatile
  5770                           
  5771                           ;pin_manager.c: 64: WPUC = 0x00;
  5772  061B  0024               	movlb	4	; select bank4
  5773  061C  018E               	clrf	14	;volatile
  5774                           
  5775                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x01;
  5776  061D  0021               	movlb	1	; select bank1
  5777  061E  1795               	bsf	21,7	;volatile
  5778                           
  5779                           ;pin_manager.c: 69: bool state = GIE;
  5780  061F  3000               	movlw	0
  5781  0620  1B8B               	btfsc	11,7	;volatile
  5782  0621  3001               	movlw	1
  5783  0622  00F0               	movwf	PIN_MANAGER_Initialize@state
  5784                           
  5785                           ;pin_manager.c: 70: GIE = 0;
  5786  0623  138B               	bcf	11,7	;volatile
  5787                           
  5788                           ;pin_manager.c: 71: PPSLOCK = 0x55;
  5789  0624  3055               	movlw	85
  5790  0625  003C               	movlb	28	; select bank28
  5791  0626  008F               	movwf	15	;volatile
  5792                           
  5793                           ;pin_manager.c: 72: PPSLOCK = 0xAA;
  5794  0627  30AA               	movlw	170
  5795  0628  008F               	movwf	15	;volatile
  5796                           
  5797                           ;pin_manager.c: 73: PPSLOCKbits.PPSLOCKED = 0x00;
  5798  0629  100F               	bcf	15,0	;volatile
  5799                           
  5800                           ;pin_manager.c: 75: RXPPS = 0x0D;
  5801  062A  300D               	movlw	13
  5802  062B  00A4               	movwf	36	;volatile
  5803                           
  5804                           ;pin_manager.c: 76: RB7PPS = 0x12;
  5805  062C  3012               	movlw	18
  5806  062D  003D               	movlb	29	; select bank29
  5807  062E  009F               	movwf	31	;volatile
  5808                           
  5809                           ;pin_manager.c: 77: RC7PPS = 0x0F;
  5810  062F  300F               	movlw	15
  5811  0630  00A7               	movwf	39	;volatile
  5812                           
  5813                           ;pin_manager.c: 78: PPSLOCK = 0x55;
  5814  0631  3055               	movlw	85
  5815  0632  003C               	movlb	28	; select bank28
  5816  0633  008F               	movwf	15	;volatile
  5817                           
  5818                           ;pin_manager.c: 79: PPSLOCK = 0xAA;
  5819  0634  30AA               	movlw	170
  5820  0635  008F               	movwf	15	;volatile
  5821                           
  5822                           ;pin_manager.c: 80: PPSLOCKbits.PPSLOCKED = 0x01;
  5823  0636  140F               	bsf	15,0	;volatile
  5824                           
  5825                           ;pin_manager.c: 81: GIE = state;
  5826  0637  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  5827  0638  2E3B               	goto	u630
  5828  0639  178B               	bsf	11,7	;volatile
  5829  063A  0008               	return
  5830  063B                     u630:	
  5831  063B  138B               	bcf	11,7	;volatile
  5832  063C  0008               	return
  5833  063D                     __end_of_PIN_MANAGER_Initialize:	
  5834                           
  5835                           	psect	text22
  5836  045C                     __ptext22:	
  5837 ;; *************** function _OSCILLATOR_Initialize *****************
  5838 ;; Defined at:
  5839 ;;		line 86 in file "mcc_generated_files/mcc.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;		None
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;		None
  5844 ;; Return value:  Size  Location     Type
  5845 ;;		None               void
  5846 ;; Registers used:
  5847 ;;		wreg, status,2
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5857 ;;Total ram usage:        0 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_SYSTEM_Initialize
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           
  5867                           ;psect for function _OSCILLATOR_Initialize
  5868  045C                     _OSCILLATOR_Initialize:	
  5869                           
  5870                           ;mcc.c: 88: OSCCON = 0x7A;
  5871                           
  5872                           ;incstack = 0
  5873                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5874  045C  307A               	movlw	122
  5875  045D  0021               	movlb	1	; select bank1
  5876  045E  0099               	movwf	25	;volatile
  5877                           
  5878                           ;mcc.c: 90: OSCSTAT = 0x00;
  5879  045F  019A               	clrf	26	;volatile
  5880                           
  5881                           ;mcc.c: 92: OSCTUNE = 0x00;
  5882  0460  0198               	clrf	24	;volatile
  5883  0461  0008               	return
  5884  0462                     __end_of_OSCILLATOR_Initialize:	
  5885                           
  5886                           	psect	text23
  5887  0497                     __ptext23:	
  5888 ;; *************** function _EUSART_Initialize *****************
  5889 ;; Defined at:
  5890 ;;		line 56 in file "mcc_generated_files/eusart.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;		None
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;		None               void
  5897 ;; Registers used:
  5898 ;;		wreg, status,2
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;Total ram usage:        0 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_SYSTEM_Initialize
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function _EUSART_Initialize
  5919  0497                     _EUSART_Initialize:	
  5920                           
  5921                           ;eusart.c: 60: BAUD1CON = 0x48;
  5922                           
  5923                           ;incstack = 0
  5924                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5925  0497  3048               	movlw	72
  5926  0498  0023               	movlb	3	; select bank3
  5927  0499  009F               	movwf	31	;volatile
  5928                           
  5929                           ;eusart.c: 63: RC1STA = 0x90;
  5930  049A  3090               	movlw	144
  5931  049B  009D               	movwf	29	;volatile
  5932                           
  5933                           ;eusart.c: 66: TX1STA = 0x26;
  5934  049C  3026               	movlw	38
  5935  049D  009E               	movwf	30	;volatile
  5936                           
  5937                           ;eusart.c: 69: SPBRGL = 0x22;
  5938  049E  3022               	movlw	34
  5939  049F  009B               	movwf	27	;volatile
  5940                           
  5941                           ;eusart.c: 72: SPBRGH = 0x00;
  5942  04A0  019C               	clrf	28	;volatile
  5943  04A1  0008               	return
  5944  04A2                     __end_of_EUSART_Initialize:	
  5945                           
  5946                           	psect	text24
  5947  0470                     __ptext24:	
  5948 ;; *************** function _ADC1_Initialize *****************
  5949 ;; Defined at:
  5950 ;;		line 65 in file "mcc_generated_files/adc1.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;		None               void
  5957 ;; Registers used:
  5958 ;;		wreg, status,2
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;Total ram usage:        0 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_SYSTEM_Initialize
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           
  5978                           ;psect for function _ADC1_Initialize
  5979  0470                     _ADC1_Initialize:	
  5980                           
  5981                           ;adc1.c: 69: ADCON0 = 0x01;
  5982                           
  5983                           ;incstack = 0
  5984                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  5985  0470  3001               	movlw	1
  5986  0471  0021               	movlb	1	; select bank1
  5987  0472  009D               	movwf	29	;volatile
  5988                           
  5989                           ;adc1.c: 72: ADCON1 = 0x50;
  5990  0473  3050               	movlw	80
  5991  0474  009E               	movwf	30	;volatile
  5992                           
  5993                           ;adc1.c: 75: ADCON2 = 0x00;
  5994  0475  019F               	clrf	31	;volatile
  5995                           
  5996                           ;adc1.c: 78: ADRESL = 0x00;
  5997  0476  019B               	clrf	27	;volatile
  5998                           
  5999                           ;adc1.c: 81: ADRESH = 0x00;
  6000  0477  019C               	clrf	28	;volatile
  6001  0478  0008               	return
  6002  0479                     __end_of_ADC1_Initialize:	
  6003                           
  6004                           	psect	text25
  6005  04F9                     __ptext25:	
  6006 ;; *************** function _ADC1_GetConversion *****************
  6007 ;; Defined at:
  6008 ;;		line 109 in file "mcc_generated_files/adc1.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  channel         1    wreg     enum E11866
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  channel         1    3[COMMON] enum E11866
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  2    0[COMMON] unsigned int 
  6015 ;; Registers used:
  6016 ;;		wreg, status,2, status,0
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;Total ram usage:        4 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_main
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           
  6036                           ;psect for function _ADC1_GetConversion
  6037  04F9                     _ADC1_GetConversion:	
  6038                           
  6039                           ;incstack = 0
  6040                           ; Regs used in _ADC1_GetConversion: [wreg+status,2+status,0]
  6041                           ;ADC1_GetConversion@channel stored from wreg
  6042  04F9  00F3               	movwf	ADC1_GetConversion@channel
  6043                           
  6044                           ;adc1.c: 111: ADCON0bits.CHS = channel;
  6045  04FA  0873               	movf	ADC1_GetConversion@channel,w
  6046  04FB  00F2               	movwf	??_ADC1_GetConversion
  6047  04FC  0DF2               	rlf	??_ADC1_GetConversion,f
  6048  04FD  0DF2               	rlf	??_ADC1_GetConversion,f
  6049  04FE  0021               	movlb	1	; select bank1
  6050  04FF  081D               	movf	29,w	;volatile
  6051  0500  0672               	xorwf	??_ADC1_GetConversion,w
  6052  0501  3983               	andlw	-125
  6053  0502  0672               	xorwf	??_ADC1_GetConversion,w
  6054  0503  009D               	movwf	29	;volatile
  6055                           
  6056                           ;adc1.c: 114: ADCON0bits.ADON = 1;
  6057  0504  141D               	bsf	29,0	;volatile
  6058                           
  6059                           ;adc1.c: 117: _delay((unsigned long)((5)*(16000000/4000000.0)));
  6060  0505  3006               	movlw	6
  6061  0506  00F2               	movwf	??_ADC1_GetConversion
  6062  0507                     u917:	
  6063  0507  0BF2               	decfsz	??_ADC1_GetConversion,f
  6064  0508  2D07               	goto	u917
  6065  0509  0000               	nop
  6066                           
  6067                           ;adc1.c: 120: ADCON0bits.GO_nDONE = 1;
  6068  050A  0021               	movlb	1	; select bank1
  6069  050B  149D               	bsf	29,1	;volatile
  6070  050C                     l92:	
  6071                           ;adc1.c: 123: while (ADCON0bits.GO_nDONE) {
  6072                           
  6073  050C  189D               	btfsc	29,1	;volatile
  6074  050D  2D0C               	goto	l92
  6075                           
  6076                           ;adc1.c: 124: }
  6077                           ;adc1.c: 127: return ((ADRESH << 8) + ADRESL);
  6078  050E  081C               	movf	28,w	;volatile
  6079  050F  00F1               	movwf	?_ADC1_GetConversion+1
  6080  0510  081B               	movf	27,w	;volatile
  6081  0511  00F0               	movwf	?_ADC1_GetConversion
  6082  0512  0008               	return
  6083  0513                     __end_of_ADC1_GetConversion:	
  6084  007E                     btemp	set	126	;btemp
  6085  007E                     wtemp	set	126
  6086  007E                     wtemp0	set	126
  6087  0080                     wtemp1	set	128
  6088  0082                     wtemp2	set	130
  6089  0084                     wtemp3	set	132
  6090  0086                     wtemp4	set	134
  6091  0088                     wtemp5	set	136
  6092  007F                     wtemp6	set	127
  6093  007E                     ttemp	set	126
  6094  007E                     ttemp0	set	126
  6095  0081                     ttemp1	set	129
  6096  0084                     ttemp2	set	132
  6097  0087                     ttemp3	set	135
  6098  007F                     ttemp4	set	127
  6099  007E                     ltemp	set	126
  6100  007E                     ltemp0	set	126
  6101  0082                     ltemp1	set	130
  6102  0086                     ltemp2	set	134
  6103  0080                     ltemp3	set	128


Data Sizes:
    Strings     162
    Constant    8
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      63
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           32      0       0

Pointer List with Targets:

    cputs@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_10(CODE[15]), STR_9(CODE[23]), STR_8(CODE[15]), STR_7(CODE[31]), 
		 -> STR_6(CODE[16]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sendCMD@cmd	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    mygets@p	PTR unsigned char  size(1) Largest target is 32
		 -> rxBuffer(BANK0[32]), 


Critical Paths under _main in COMMON

    _main->_SendBatteryValue
    _main->_SendHealthThermometer
    _sendCMD->_puts
    _puts->_cputs
    _cputs->_putch
    _SendHeartHateValue->_printf
    _SendHealthThermometer->_printf
    _SendBatteryValue->_printf
    _printf->___lwdiv
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _main in BANK0

    _main->_SendHeartHateValue
    _SendHeartHateValue->_printf
    _SendHealthThermometer->_printf
    _SendBatteryValue->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    6456
                                             26 BANK0      5     5      0
                 _ADC1_GetConversion
                  _SYSTEM_Initialize
                   _SendBatteryValue
              _SendHealthThermometer
                 _SendHeartHateValue
            _TMR2_HasOverflowOccured
                             _mygets
                            _sendCMD
 ---------------------------------------------------------------------------------
 (1) _sendCMD                                              2     0      2     717
                                              7 COMMON     2     0      2
                             _mygets
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     283
                                              5 COMMON     2     0      2
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2     153
                                              2 COMMON     3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _TMR2_HasOverflowOccured                              1     1      0      45
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendHeartHateValue                                  10     7      3    1950
                                             12 COMMON     1     1      0
                                             17 BANK0      9     6      3
                             _mygets
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SendHealthThermometer                                4     3      1    1778
                                             12 COMMON     2     1      1
                                             17 BANK0      2     2      0
                             _mygets
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SendBatteryValue                                     5     5      0    1738
                                             12 COMMON     2     2      0
                                             17 BANK0      3     3      0
                             _mygets
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              29    21      8    1578
                                              8 COMMON     4     4      0
                                              0 BANK0     17     9      8
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _mygets                                               4     4      0      92
                                              0 COMMON     4     4      0
                              _getch
 ---------------------------------------------------------------------------------
 (3) _getch                                                0     0      0       0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                    _ADC1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1_GetConversion
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_Start
   _SendBatteryValue
     _mygets
       _getch
         _EUSART_Read
     _printf
       ___lwdiv
       ___wmul
       _isdigit
       _putch
         _EUSART_Write
   _SendHealthThermometer
     _mygets
       _getch
         _EUSART_Read
     _printf
       ___lwdiv
       ___wmul
       _isdigit
       _putch
         _EUSART_Write
   _SendHeartHateValue
     _mygets
       _getch
         _EUSART_Read
     _printf
       ___lwdiv
       ___wmul
       _isdigit
       _putch
         _EUSART_Write
   _TMR2_HasOverflowOccured
   _mygets
     _getch
       _EUSART_Read
   _sendCMD
     _mygets
       _getch
         _EUSART_Read
     _puts
       _cputs
         _putch
           _EUSART_Write
       _putch
         _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              20      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Sep 26 00:20:41 2016

                         __CFG_CP$OFF 0000                                    l92 050C  
                 ___wmul@multiplicand 0072            __end_of_ADC1_GetConversion 0513  
                         __CFG_LVP$ON 0000                                   l240 0679  
                                 l243 0682                                   l333 051B  
                                 l245 067D                                   l247 067F  
                                 l329 07F5                                   l194 0469  
                                 l187 0479                                   l299 06EE  
           SendHealthThermometer@type 007C                                   _GIE 005F  
                                 _RC2 0072                                   _PR2 001B  
                                 u605 05F3                                   u525 051C  
                                 u630 063B                                   u535 0521  
                                 u715 0773                                   u565 05D7  
                                 u735 078C                                   u585 05E1  
                                 u595 05EB                                   u907 0672  
                                 u917 0507                                   u895 069F  
                     _TMR2_Initialize 04B8                       _PWM4_Initialize 04A2  
                        __CFG_BORV$LO 0000                                   wreg 0009  
                        __CFG_IESO$ON 0000         TMR2_HasOverflowOccured@status 0070  
               _SendHealthThermometer 054D                          ?_EUSART_Read 0070  
                        __CFG_ZCD$OFF 0000                                  l1117 0481  
                                l1301 0709                                  l1143 0515  
                                l1311 0737                                  l1137 04D1  
                                l1313 074C                                  l1323 075E  
                                l1173 05F2                                  l1165 05D4  
                                l1333 0799                                  l1167 05E0  
                                l1343 07AC                                  l1335 079C  
                                l1281 0594                                  l1273 0578  
                                l1177 05FB                                  l1345 07B0  
                                l1329 077D                                  l1187 04E5  
                                l1277 0583                                  l1357 07C1  
                                l1349 07BD                                  l1295 06F3  
                                l1359 06CD                                  l1439 0690  
                                l1297 06FC                                  l1289 06E9  
                                l1397 053B                                  STR_1 08A1  
                                STR_2 0889                                  STR_3 087D  
                                STR_4 0895                                  STR_5 08A6  
                                STR_6 084F                                  STR_7 0808  
                                STR_8 085F                                  STR_9 0827  
                                _LATA 010C                                  _LATB 010D  
                                _LATC 010E                                  _T2PR 001B  
                                _TMR2 001A                                  _WPUB 020D  
                                _WPUC 020E                          __CFG_WRT$OFF 0000  
                       __CFG_FCMEN$ON 0000                                  _main 063D  
                                fsr0h 0005                                  fsr1h 0007  
                                fsr0l 0004                                  indf0 0000  
                                indf1 0001                                  fsr1l 0006  
                                btemp 007E                                  _puts 04AD  
                       __CFG_BOREN$ON 0000                                  ltemp 007E  
                                start 0002                                  ttemp 007E  
                                wtemp 007E                         __CFG_MCLRE$ON 0000  
                       __CFG_PLLEN$ON 0000                         ?_EUSART_Write 0070  
      __size_of_OSCILLATOR_Initialize 0006         __end_of_OSCILLATOR_Initialize 0462  
                               ?_main 0070                                 STR_10 086E  
                               STR_11 083E                         __CFG_WDTE$OFF 0000  
                               ?_puts 0075                                 _T2CON 001C  
                               _LATA2 0862                                 _LATA4 0864  
                               _T2HLT 001D                       __end_of___lwdiv 0600  
                               _T2TMR 001A                                 _T2RST 001F  
                               _TRISA 008C                                 _TRISB 008D  
                               _TRISC 008E                                 _RXPPS 0E24  
                               _getch 0454                           ?_TMR2_Start 0070  
                               _cputs 04E5                       __end_of_isdigit 04D3  
                     __end_of_sendCMD 0497                                 _putch 0457  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                               ttemp0 007E                                 ttemp1 0081  
                               ttemp2 0084                                 ttemp3 0087  
                               puts@s 0075                                 ttemp4 007F  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
                  _SendHeartHateValue 0599                       __initialization 07F6  
                        __end_of_main 06C8                          __end_of_puts 04B8  
                 ?_SendHeartHateValue 0051                        ??_EUSART_Write 0070  
             __end_of_PWM4_Initialize 04AD               __end_of_TMR2_Initialize 04C5  
                      __CFG_LPBOR$OFF 0000                                ??_main 005A  
                              ??_puts 0077                ?_SendHealthThermometer 007C  
               SendHeartHateValue@bpm 007C                  _SendBatteryValue$584 0051  
                              ?_getch 0070                                _ADCON0 009D  
                              _ADCON1 009E                                _ADCON2 009F  
                              ?_cputs 0072                                _ADRESH 009C  
                              _ADRESL 009B                  ??_SendHeartHateValue 0054  
                              _ANSELA 018C                                ?_putch 0070  
                              _ANSELB 018D                                _ANSELC 018E  
                              _RC1REG 0199                                _RC1STA 019D  
                              _RB7PPS 0E9F                                _RC7PPS 0EA7  
                              _OSCCON 0099                                _SPBRGH 019C  
                              _SPBRGL 019B                                _TX1REG 019A  
                              _TX1STA 019E                        __CFG_PWRTE$OFF 0000  
                   ?_SendBatteryValue 0070                                ___wmul 0513  
                      __CFG_STVREN$ON 0000                             ??___lwdiv 0074  
                 __size_of_TMR2_Start 0003                    ??_SendBatteryValue 007C  
                              _mygets 0572                                _printf 06C8  
            __size_of_ADC1_Initialize 0009                                cputs@s 0072  
            ?_TMR2_HasOverflowOccured 0070                             ??_isdigit 0070  
                           ??_sendCMD 0079                  __size_of_EUSART_Read 000A  
                   _SYSTEM_Initialize 04D3               __end_of__initialization 07FD  
                  ?_SYSTEM_Initialize 0070                        __pcstackCOMMON 0070  
                 ??_SYSTEM_Initialize 0071                         __end_of_getch 0457  
                       __end_of_cputs 04F9                         __end_of_putch 045C  
                    ?_PWM4_Initialize 0070                      ?_TMR2_Initialize 0070  
                      _OPTION_REGbits 0095                               ??_getch 0070  
                             ??_cputs 0074             __end_of_SYSTEM_Initialize 04E5  
                             ??_putch 0071                    _ADC1_GetConversion 04F9  
                          __pbssBANK0 0020                  __end_of_EUSART_Write 0470  
                 ?_ADC1_GetConversion 0070                            __pmaintext 063D  
            SendHeartHateValue@energy 0051                               ?___wmul 0070  
                     __CFG_PPS1WAY$ON 0000       __end_of_TMR2_HasOverflowOccured 048D  
                             ?_mygets 0070                               ?_printf 0040  
                ??_ADC1_GetConversion 0072                       __CFG_WDTCCS$SWC 0000  
                             _OSCSTAT 009A                               _OSCTUNE 0098  
                             _PWM4DCH 061B                               _PWM4DCL 061A  
                             _PWM4CON 061C                               _PPSLOCK 0E0F  
                   ??_ADC1_Initialize 0070                          ??_TMR2_Start 0070  
                     __size_of___wmul 001B                               ___lwdiv 05CC  
                  __end_of_TMR2_Start 0454                               __ptext1 048D  
                             __ptext2 04AD                               __ptext3 04E5  
                             __ptext4 0483                               __ptext5 0599  
                             __ptext6 054D                               __ptext7 052E  
                             __ptext8 06C8                               __ptext9 0457  
                     __size_of_mygets 0027               ??_SendHealthThermometer 0051  
                     __size_of_printf 012E                     __end_of_hexpowers 0808  
               _OSCILLATOR_Initialize 045C                             _T2CONbits 001C  
                             _isdigit 04C5                               _sendCMD 048D  
            ??_PIN_MANAGER_Initialize 0070                             _T2HLTbits 001D  
          __size_of_SYSTEM_Initialize 0012                               clrloop0 0463  
                end_of_initialization 07FD                             _T2RSTbits 001F  
                   _EUSART_Initialize 0497                    ?_EUSART_Initialize 0070  
                             mygets@c 0071                               mygets@i 0072  
                             mygets@p 0073                               printf@c 0050  
                             printf@f 0040                          __pstringtext 0800  
                 ??_EUSART_Initialize 0070  SendHeartHateValue@BodySensorLocation 0053  
                    __CFG_FOSC$INTOSC 0000             __size_of_SendBatteryValue 001F  
               __size_of_EUSART_Write 0008           __size_of_SendHeartHateValue 0033  
           __end_of_EUSART_Initialize 04A2      __size_of_TMR2_HasOverflowOccured 000A  
                         printf@width 004E             ADC1_GetConversion@channel 0073  
                      __end_of___wmul 052E                          _EUSART_Write 0468  
              ?_OSCILLATOR_Initialize 0070                        __end_of_mygets 0599  
                      __end_of_printf 07F6                   start_initialization 07F6  
     __size_of_PIN_MANAGER_Initialize 003D                         ??_EUSART_Read 0070  
                         putch@txData 0071                  SendHeartHateValue@RR 0052  
                            ??___wmul 0074                           _CCPTMRSbits 029E  
                     _ADC1_Initialize 0470                              ??_mygets 0070  
                            ??_printf 0078                            sendCMD@cmd 0077  
                           ___latbits 0002                         __pcstackBANK0 0040  
            __size_of_PWM4_Initialize 000B              __size_of_TMR2_Initialize 000D  
          __size_of_EUSART_Initialize 000B                   __end_of_EUSART_Read 0483  
                    ___lwdiv@dividend 0072                _PIN_MANAGER_Initialize 0600  
                            ?___lwdiv 0070                              _BAUD1CON 019F  
      __size_of_SendHealthThermometer 0025                              ?_isdigit 0070  
                            ?_sendCMD 0077           __size_of_ADC1_GetConversion 001A  
       __end_of_SendHealthThermometer 0572                      _SendBatteryValue 052E  
                           _hexpowers 0800                      ___lwdiv@quotient 0075  
                      __size_of_getch 0003                        __size_of_cputs 0014  
                            _T2CLKCON 001E                        __size_of_putch 0005  
             _TMR2_HasOverflowOccured 0483                        ___wmul@product 0074  
                           clear_ram0 0462               __end_of_ADC1_Initialize 0479  
                            _PIR1bits 0010                  __CFG_WDTCPS$WDTCPS1F 0000  
    SendHealthThermometer@temperature 007D                            _ADCON0bits 009D  
                   ___wmul@multiplier 0070                            printf@flag 004A  
                          printf@prec 004D                             main@value 005E  
                         _EUSART_Read 0479                     ??_PWM4_Initialize 0070  
                   ??_TMR2_Initialize 0070               ??_OSCILLATOR_Initialize 0070  
                    __size_of___lwdiv 0034                           _isdigit$767 0070  
                    __size_of_isdigit 000E                      __size_of_sendCMD 000A  
                     ___lwdiv@divisor 0070            __end_of_SendHeartHateValue 05CC  
                     ___lwdiv@counter 0077             ??_TMR2_HasOverflowOccured 0070  
                            __ptext10 0468                              __ptext11 04C5  
                            __ptext20 04A2                              __ptext12 0513  
                            __ptext21 0600                              __ptext13 05CC  
                            __ptext22 045C                              __ptext14 0572  
                            __ptext23 0497                              __ptext15 0454  
                            __ptext24 0470                              __ptext16 0479  
                            __ptext25 04F9                              __ptext17 04D3  
                            __ptext18 04B8                              __ptext19 0451  
                       __size_of_main 008B                         __size_of_puts 000B  
               SendBatteryValue@value 0053                  __CFG_WDTCWS$WDTCWSSW 0000  
                            _rxBuffer 0020                            _RC1STAbits 019D  
                    ?_ADC1_Initialize 0070                             printf@idx 0048  
                           printf@val 004B                              main@time 005D  
         PIN_MANAGER_Initialize@state 0070                              isdigit@c 0071  
             ?_PIN_MANAGER_Initialize 0070                     __CFG_CLKOUTEN$OFF 0000  
                         _PPSLOCKbits 0E0F              __end_of_SendBatteryValue 054D  
                            printf@ap 0049                            _TMR2_Start 0451  
                  EUSART_Write@txData 0070        __end_of_PIN_MANAGER_Initialize 063D  
