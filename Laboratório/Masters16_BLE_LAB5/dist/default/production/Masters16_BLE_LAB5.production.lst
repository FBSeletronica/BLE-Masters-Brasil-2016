

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Oct 01 00:43:46 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  008E                     	;# 
    70  0090                     	;# 
    71  0091                     	;# 
    72  0092                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0113                     	;# 
    92  0114                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011C                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  018E                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0197                     	;# 
   111  0199                     	;# 
   112  0199                     	;# 
   113  0199                     	;# 
   114  019A                     	;# 
   115  019A                     	;# 
   116  019A                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019C                     	;# 
   125  019D                     	;# 
   126  019D                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019E                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  019F                     	;# 
   133  019F                     	;# 
   134  019F                     	;# 
   135  019F                     	;# 
   136  020C                     	;# 
   137  020D                     	;# 
   138  020E                     	;# 
   139  0211                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0212                     	;# 
   143  0213                     	;# 
   144  0213                     	;# 
   145  0214                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0216                     	;# 
   152  0216                     	;# 
   153  0217                     	;# 
   154  0217                     	;# 
   155  028C                     	;# 
   156  028D                     	;# 
   157  028E                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0298                     	;# 
   164  0298                     	;# 
   165  0299                     	;# 
   166  029A                     	;# 
   167  029B                     	;# 
   168  029E                     	;# 
   169  030C                     	;# 
   170  030D                     	;# 
   171  030E                     	;# 
   172  038C                     	;# 
   173  038D                     	;# 
   174  038E                     	;# 
   175  0391                     	;# 
   176  0392                     	;# 
   177  0393                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  0397                     	;# 
   182  0398                     	;# 
   183  0399                     	;# 
   184  040E                     	;# 
   185  0413                     	;# 
   186  0413                     	;# 
   187  0414                     	;# 
   188  0414                     	;# 
   189  0415                     	;# 
   190  0416                     	;# 
   191  0417                     	;# 
   192  0418                     	;# 
   193  041A                     	;# 
   194  041A                     	;# 
   195  041B                     	;# 
   196  041B                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  041F                     	;# 
   201  0493                     	;# 
   202  0494                     	;# 
   203  0495                     	;# 
   204  0496                     	;# 
   205  049A                     	;# 
   206  049B                     	;# 
   207  049C                     	;# 
   208  049D                     	;# 
   209  058C                     	;# 
   210  058C                     	;# 
   211  058D                     	;# 
   212  058E                     	;# 
   213  058E                     	;# 
   214  058F                     	;# 
   215  0590                     	;# 
   216  0590                     	;# 
   217  0591                     	;# 
   218  0592                     	;# 
   219  0592                     	;# 
   220  0593                     	;# 
   221  0594                     	;# 
   222  0594                     	;# 
   223  0595                     	;# 
   224  0596                     	;# 
   225  0596                     	;# 
   226  0597                     	;# 
   227  0598                     	;# 
   228  0599                     	;# 
   229  059A                     	;# 
   230  059B                     	;# 
   231  059B                     	;# 
   232  059C                     	;# 
   233  059D                     	;# 
   234  060C                     	;# 
   235  060C                     	;# 
   236  060D                     	;# 
   237  060E                     	;# 
   238  060F                     	;# 
   239  060F                     	;# 
   240  0610                     	;# 
   241  0611                     	;# 
   242  0612                     	;# 
   243  0613                     	;# 
   244  0614                     	;# 
   245  0617                     	;# 
   246  0618                     	;# 
   247  0619                     	;# 
   248  061A                     	;# 
   249  061B                     	;# 
   250  061C                     	;# 
   251  0691                     	;# 
   252  0692                     	;# 
   253  0693                     	;# 
   254  0694                     	;# 
   255  0695                     	;# 
   256  0696                     	;# 
   257  0697                     	;# 
   258  0699                     	;# 
   259  069A                     	;# 
   260  0711                     	;# 
   261  0712                     	;# 
   262  0713                     	;# 
   263  0714                     	;# 
   264  0715                     	;# 
   265  0718                     	;# 
   266  0718                     	;# 
   267  0719                     	;# 
   268  071A                     	;# 
   269  071A                     	;# 
   270  071B                     	;# 
   271  071C                     	;# 
   272  071D                     	;# 
   273  0791                     	;# 
   274  0791                     	;# 
   275  0792                     	;# 
   276  0793                     	;# 
   277  0793                     	;# 
   278  0794                     	;# 
   279  0795                     	;# 
   280  0795                     	;# 
   281  0796                     	;# 
   282  0797                     	;# 
   283  0797                     	;# 
   284  0798                     	;# 
   285  0799                     	;# 
   286  079A                     	;# 
   287  080C                     	;# 
   288  080C                     	;# 
   289  080D                     	;# 
   290  080E                     	;# 
   291  080E                     	;# 
   292  080F                     	;# 
   293  0810                     	;# 
   294  0810                     	;# 
   295  0811                     	;# 
   296  0812                     	;# 
   297  0812                     	;# 
   298  0813                     	;# 
   299  0814                     	;# 
   300  0815                     	;# 
   301  0816                     	;# 
   302  0817                     	;# 
   303  0818                     	;# 
   304  0819                     	;# 
   305  081A                     	;# 
   306  081A                     	;# 
   307  081B                     	;# 
   308  081C                     	;# 
   309  081C                     	;# 
   310  081D                     	;# 
   311  088C                     	;# 
   312  088D                     	;# 
   313  088E                     	;# 
   314  088F                     	;# 
   315  088F                     	;# 
   316  0890                     	;# 
   317  0891                     	;# 
   318  0892                     	;# 
   319  0893                     	;# 
   320  0893                     	;# 
   321  0894                     	;# 
   322  0895                     	;# 
   323  0896                     	;# 
   324  0897                     	;# 
   325  0897                     	;# 
   326  0898                     	;# 
   327  0899                     	;# 
   328  0D8C                     	;# 
   329  0D8C                     	;# 
   330  0D8D                     	;# 
   331  0D8E                     	;# 
   332  0D8F                     	;# 
   333  0D8F                     	;# 
   334  0D90                     	;# 
   335  0D91                     	;# 
   336  0D92                     	;# 
   337  0D92                     	;# 
   338  0D93                     	;# 
   339  0D94                     	;# 
   340  0D95                     	;# 
   341  0D95                     	;# 
   342  0D96                     	;# 
   343  0D97                     	;# 
   344  0D98                     	;# 
   345  0D99                     	;# 
   346  0D9A                     	;# 
   347  0D9B                     	;# 
   348  0D9C                     	;# 
   349  0D9D                     	;# 
   350  0D9E                     	;# 
   351  0D9E                     	;# 
   352  0D9F                     	;# 
   353  0DA0                     	;# 
   354  0DA1                     	;# 
   355  0DA1                     	;# 
   356  0DA2                     	;# 
   357  0DA3                     	;# 
   358  0DA4                     	;# 
   359  0DA4                     	;# 
   360  0DA5                     	;# 
   361  0DA6                     	;# 
   362  0DA7                     	;# 
   363  0DA7                     	;# 
   364  0DA8                     	;# 
   365  0DA9                     	;# 
   366  0DAA                     	;# 
   367  0DAB                     	;# 
   368  0DAC                     	;# 
   369  0DAD                     	;# 
   370  0DAE                     	;# 
   371  0DAF                     	;# 
   372  0E0F                     	;# 
   373  0E10                     	;# 
   374  0E11                     	;# 
   375  0E12                     	;# 
   376  0E13                     	;# 
   377  0E14                     	;# 
   378  0E15                     	;# 
   379  0E16                     	;# 
   380  0E17                     	;# 
   381  0E18                     	;# 
   382  0E19                     	;# 
   383  0E1A                     	;# 
   384  0E1B                     	;# 
   385  0E1C                     	;# 
   386  0E1D                     	;# 
   387  0E1E                     	;# 
   388  0E1F                     	;# 
   389  0E20                     	;# 
   390  0E21                     	;# 
   391  0E22                     	;# 
   392  0E23                     	;# 
   393  0E24                     	;# 
   394  0E25                     	;# 
   395  0E26                     	;# 
   396  0E27                     	;# 
   397  0E28                     	;# 
   398  0E29                     	;# 
   399  0E2A                     	;# 
   400  0E2B                     	;# 
   401  0E2C                     	;# 
   402  0E2D                     	;# 
   403  0E2E                     	;# 
   404  0E90                     	;# 
   405  0E91                     	;# 
   406  0E92                     	;# 
   407  0E94                     	;# 
   408  0E95                     	;# 
   409  0E9C                     	;# 
   410  0E9D                     	;# 
   411  0E9E                     	;# 
   412  0E9F                     	;# 
   413  0EA0                     	;# 
   414  0EA1                     	;# 
   415  0EA2                     	;# 
   416  0EA3                     	;# 
   417  0EA4                     	;# 
   418  0EA5                     	;# 
   419  0EA6                     	;# 
   420  0EA7                     	;# 
   421  0F0F                     	;# 
   422  0F10                     	;# 
   423  0F11                     	;# 
   424  0F12                     	;# 
   425  0F13                     	;# 
   426  0F14                     	;# 
   427  0F15                     	;# 
   428  0F16                     	;# 
   429  0F17                     	;# 
   430  0F18                     	;# 
   431  0F19                     	;# 
   432  0F1A                     	;# 
   433  0F1B                     	;# 
   434  0F1C                     	;# 
   435  0F1D                     	;# 
   436  0F1E                     	;# 
   437  0F1F                     	;# 
   438  0F20                     	;# 
   439  0F21                     	;# 
   440  0F22                     	;# 
   441  0F23                     	;# 
   442  0F24                     	;# 
   443  0F25                     	;# 
   444  0F26                     	;# 
   445  0F27                     	;# 
   446  0F28                     	;# 
   447  0F29                     	;# 
   448  0F2A                     	;# 
   449  0F2B                     	;# 
   450  0F2C                     	;# 
   451  0F2D                     	;# 
   452  0F2E                     	;# 
   453  0F2F                     	;# 
   454  0F30                     	;# 
   455  0F31                     	;# 
   456  0F32                     	;# 
   457  0F33                     	;# 
   458  0F34                     	;# 
   459  0F35                     	;# 
   460  0F36                     	;# 
   461  0F37                     	;# 
   462  0FE4                     	;# 
   463  0FE5                     	;# 
   464  0FE6                     	;# 
   465  0FE7                     	;# 
   466  0FE8                     	;# 
   467  0FE9                     	;# 
   468  0FEA                     	;# 
   469  0FEB                     	;# 
   470  0FED                     	;# 
   471  0FEE                     	;# 
   472  0FEF                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0008                     	;# 
   482  0009                     	;# 
   483  000A                     	;# 
   484  000B                     	;# 
   485  000C                     	;# 
   486  000D                     	;# 
   487  000E                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0016                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  001A                     	;# 
   500  001A                     	;# 
   501  001B                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001D                     	;# 
   505  001E                     	;# 
   506  001F                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  0090                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0095                     	;# 
   516  0096                     	;# 
   517  0098                     	;# 
   518  0099                     	;# 
   519  009A                     	;# 
   520  009B                     	;# 
   521  009B                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  010C                     	;# 
   527  010D                     	;# 
   528  010E                     	;# 
   529  0111                     	;# 
   530  0112                     	;# 
   531  0113                     	;# 
   532  0114                     	;# 
   533  0115                     	;# 
   534  0116                     	;# 
   535  0117                     	;# 
   536  0118                     	;# 
   537  0119                     	;# 
   538  011C                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  018E                     	;# 
   542  0191                     	;# 
   543  0191                     	;# 
   544  0192                     	;# 
   545  0193                     	;# 
   546  0193                     	;# 
   547  0194                     	;# 
   548  0195                     	;# 
   549  0196                     	;# 
   550  0197                     	;# 
   551  0199                     	;# 
   552  0199                     	;# 
   553  0199                     	;# 
   554  019A                     	;# 
   555  019A                     	;# 
   556  019A                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019B                     	;# 
   561  019B                     	;# 
   562  019C                     	;# 
   563  019C                     	;# 
   564  019C                     	;# 
   565  019D                     	;# 
   566  019D                     	;# 
   567  019D                     	;# 
   568  019E                     	;# 
   569  019E                     	;# 
   570  019E                     	;# 
   571  019F                     	;# 
   572  019F                     	;# 
   573  019F                     	;# 
   574  019F                     	;# 
   575  019F                     	;# 
   576  020C                     	;# 
   577  020D                     	;# 
   578  020E                     	;# 
   579  0211                     	;# 
   580  0211                     	;# 
   581  0212                     	;# 
   582  0212                     	;# 
   583  0213                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0214                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0216                     	;# 
   592  0216                     	;# 
   593  0217                     	;# 
   594  0217                     	;# 
   595  028C                     	;# 
   596  028D                     	;# 
   597  028E                     	;# 
   598  0291                     	;# 
   599  0291                     	;# 
   600  0292                     	;# 
   601  0293                     	;# 
   602  0294                     	;# 
   603  0298                     	;# 
   604  0298                     	;# 
   605  0299                     	;# 
   606  029A                     	;# 
   607  029B                     	;# 
   608  029E                     	;# 
   609  030C                     	;# 
   610  030D                     	;# 
   611  030E                     	;# 
   612  038C                     	;# 
   613  038D                     	;# 
   614  038E                     	;# 
   615  0391                     	;# 
   616  0392                     	;# 
   617  0393                     	;# 
   618  0394                     	;# 
   619  0395                     	;# 
   620  0396                     	;# 
   621  0397                     	;# 
   622  0398                     	;# 
   623  0399                     	;# 
   624  040E                     	;# 
   625  0413                     	;# 
   626  0413                     	;# 
   627  0414                     	;# 
   628  0414                     	;# 
   629  0415                     	;# 
   630  0416                     	;# 
   631  0417                     	;# 
   632  0418                     	;# 
   633  041A                     	;# 
   634  041A                     	;# 
   635  041B                     	;# 
   636  041B                     	;# 
   637  041C                     	;# 
   638  041D                     	;# 
   639  041E                     	;# 
   640  041F                     	;# 
   641  0493                     	;# 
   642  0494                     	;# 
   643  0495                     	;# 
   644  0496                     	;# 
   645  049A                     	;# 
   646  049B                     	;# 
   647  049C                     	;# 
   648  049D                     	;# 
   649  058C                     	;# 
   650  058C                     	;# 
   651  058D                     	;# 
   652  058E                     	;# 
   653  058E                     	;# 
   654  058F                     	;# 
   655  0590                     	;# 
   656  0590                     	;# 
   657  0591                     	;# 
   658  0592                     	;# 
   659  0592                     	;# 
   660  0593                     	;# 
   661  0594                     	;# 
   662  0594                     	;# 
   663  0595                     	;# 
   664  0596                     	;# 
   665  0596                     	;# 
   666  0597                     	;# 
   667  0598                     	;# 
   668  0599                     	;# 
   669  059A                     	;# 
   670  059B                     	;# 
   671  059B                     	;# 
   672  059C                     	;# 
   673  059D                     	;# 
   674  060C                     	;# 
   675  060C                     	;# 
   676  060D                     	;# 
   677  060E                     	;# 
   678  060F                     	;# 
   679  060F                     	;# 
   680  0610                     	;# 
   681  0611                     	;# 
   682  0612                     	;# 
   683  0613                     	;# 
   684  0614                     	;# 
   685  0617                     	;# 
   686  0618                     	;# 
   687  0619                     	;# 
   688  061A                     	;# 
   689  061B                     	;# 
   690  061C                     	;# 
   691  0691                     	;# 
   692  0692                     	;# 
   693  0693                     	;# 
   694  0694                     	;# 
   695  0695                     	;# 
   696  0696                     	;# 
   697  0697                     	;# 
   698  0699                     	;# 
   699  069A                     	;# 
   700  0711                     	;# 
   701  0712                     	;# 
   702  0713                     	;# 
   703  0714                     	;# 
   704  0715                     	;# 
   705  0718                     	;# 
   706  0718                     	;# 
   707  0719                     	;# 
   708  071A                     	;# 
   709  071A                     	;# 
   710  071B                     	;# 
   711  071C                     	;# 
   712  071D                     	;# 
   713  0791                     	;# 
   714  0791                     	;# 
   715  0792                     	;# 
   716  0793                     	;# 
   717  0793                     	;# 
   718  0794                     	;# 
   719  0795                     	;# 
   720  0795                     	;# 
   721  0796                     	;# 
   722  0797                     	;# 
   723  0797                     	;# 
   724  0798                     	;# 
   725  0799                     	;# 
   726  079A                     	;# 
   727  080C                     	;# 
   728  080C                     	;# 
   729  080D                     	;# 
   730  080E                     	;# 
   731  080E                     	;# 
   732  080F                     	;# 
   733  0810                     	;# 
   734  0810                     	;# 
   735  0811                     	;# 
   736  0812                     	;# 
   737  0812                     	;# 
   738  0813                     	;# 
   739  0814                     	;# 
   740  0815                     	;# 
   741  0816                     	;# 
   742  0817                     	;# 
   743  0818                     	;# 
   744  0819                     	;# 
   745  081A                     	;# 
   746  081A                     	;# 
   747  081B                     	;# 
   748  081C                     	;# 
   749  081C                     	;# 
   750  081D                     	;# 
   751  088C                     	;# 
   752  088D                     	;# 
   753  088E                     	;# 
   754  088F                     	;# 
   755  088F                     	;# 
   756  0890                     	;# 
   757  0891                     	;# 
   758  0892                     	;# 
   759  0893                     	;# 
   760  0893                     	;# 
   761  0894                     	;# 
   762  0895                     	;# 
   763  0896                     	;# 
   764  0897                     	;# 
   765  0897                     	;# 
   766  0898                     	;# 
   767  0899                     	;# 
   768  0D8C                     	;# 
   769  0D8C                     	;# 
   770  0D8D                     	;# 
   771  0D8E                     	;# 
   772  0D8F                     	;# 
   773  0D8F                     	;# 
   774  0D90                     	;# 
   775  0D91                     	;# 
   776  0D92                     	;# 
   777  0D92                     	;# 
   778  0D93                     	;# 
   779  0D94                     	;# 
   780  0D95                     	;# 
   781  0D95                     	;# 
   782  0D96                     	;# 
   783  0D97                     	;# 
   784  0D98                     	;# 
   785  0D99                     	;# 
   786  0D9A                     	;# 
   787  0D9B                     	;# 
   788  0D9C                     	;# 
   789  0D9D                     	;# 
   790  0D9E                     	;# 
   791  0D9E                     	;# 
   792  0D9F                     	;# 
   793  0DA0                     	;# 
   794  0DA1                     	;# 
   795  0DA1                     	;# 
   796  0DA2                     	;# 
   797  0DA3                     	;# 
   798  0DA4                     	;# 
   799  0DA4                     	;# 
   800  0DA5                     	;# 
   801  0DA6                     	;# 
   802  0DA7                     	;# 
   803  0DA7                     	;# 
   804  0DA8                     	;# 
   805  0DA9                     	;# 
   806  0DAA                     	;# 
   807  0DAB                     	;# 
   808  0DAC                     	;# 
   809  0DAD                     	;# 
   810  0DAE                     	;# 
   811  0DAF                     	;# 
   812  0E0F                     	;# 
   813  0E10                     	;# 
   814  0E11                     	;# 
   815  0E12                     	;# 
   816  0E13                     	;# 
   817  0E14                     	;# 
   818  0E15                     	;# 
   819  0E16                     	;# 
   820  0E17                     	;# 
   821  0E18                     	;# 
   822  0E19                     	;# 
   823  0E1A                     	;# 
   824  0E1B                     	;# 
   825  0E1C                     	;# 
   826  0E1D                     	;# 
   827  0E1E                     	;# 
   828  0E1F                     	;# 
   829  0E20                     	;# 
   830  0E21                     	;# 
   831  0E22                     	;# 
   832  0E23                     	;# 
   833  0E24                     	;# 
   834  0E25                     	;# 
   835  0E26                     	;# 
   836  0E27                     	;# 
   837  0E28                     	;# 
   838  0E29                     	;# 
   839  0E2A                     	;# 
   840  0E2B                     	;# 
   841  0E2C                     	;# 
   842  0E2D                     	;# 
   843  0E2E                     	;# 
   844  0E90                     	;# 
   845  0E91                     	;# 
   846  0E92                     	;# 
   847  0E94                     	;# 
   848  0E95                     	;# 
   849  0E9C                     	;# 
   850  0E9D                     	;# 
   851  0E9E                     	;# 
   852  0E9F                     	;# 
   853  0EA0                     	;# 
   854  0EA1                     	;# 
   855  0EA2                     	;# 
   856  0EA3                     	;# 
   857  0EA4                     	;# 
   858  0EA5                     	;# 
   859  0EA6                     	;# 
   860  0EA7                     	;# 
   861  0F0F                     	;# 
   862  0F10                     	;# 
   863  0F11                     	;# 
   864  0F12                     	;# 
   865  0F13                     	;# 
   866  0F14                     	;# 
   867  0F15                     	;# 
   868  0F16                     	;# 
   869  0F17                     	;# 
   870  0F18                     	;# 
   871  0F19                     	;# 
   872  0F1A                     	;# 
   873  0F1B                     	;# 
   874  0F1C                     	;# 
   875  0F1D                     	;# 
   876  0F1E                     	;# 
   877  0F1F                     	;# 
   878  0F20                     	;# 
   879  0F21                     	;# 
   880  0F22                     	;# 
   881  0F23                     	;# 
   882  0F24                     	;# 
   883  0F25                     	;# 
   884  0F26                     	;# 
   885  0F27                     	;# 
   886  0F28                     	;# 
   887  0F29                     	;# 
   888  0F2A                     	;# 
   889  0F2B                     	;# 
   890  0F2C                     	;# 
   891  0F2D                     	;# 
   892  0F2E                     	;# 
   893  0F2F                     	;# 
   894  0F30                     	;# 
   895  0F31                     	;# 
   896  0F32                     	;# 
   897  0F33                     	;# 
   898  0F34                     	;# 
   899  0F35                     	;# 
   900  0F36                     	;# 
   901  0F37                     	;# 
   902  0FE4                     	;# 
   903  0FE5                     	;# 
   904  0FE6                     	;# 
   905  0FE7                     	;# 
   906  0FE8                     	;# 
   907  0FE9                     	;# 
   908  0FEA                     	;# 
   909  0FEB                     	;# 
   910  0FED                     	;# 
   911  0FEE                     	;# 
   912  0FEF                     	;# 
   913  0000                     	;# 
   914  0001                     	;# 
   915  0002                     	;# 
   916  0003                     	;# 
   917  0004                     	;# 
   918  0005                     	;# 
   919  0006                     	;# 
   920  0007                     	;# 
   921  0008                     	;# 
   922  0009                     	;# 
   923  000A                     	;# 
   924  000B                     	;# 
   925  000C                     	;# 
   926  000D                     	;# 
   927  000E                     	;# 
   928  0010                     	;# 
   929  0011                     	;# 
   930  0012                     	;# 
   931  0013                     	;# 
   932  0014                     	;# 
   933  0015                     	;# 
   934  0016                     	;# 
   935  0016                     	;# 
   936  0017                     	;# 
   937  0018                     	;# 
   938  0019                     	;# 
   939  001A                     	;# 
   940  001A                     	;# 
   941  001B                     	;# 
   942  001B                     	;# 
   943  001C                     	;# 
   944  001D                     	;# 
   945  001E                     	;# 
   946  001F                     	;# 
   947  008C                     	;# 
   948  008D                     	;# 
   949  008E                     	;# 
   950  0090                     	;# 
   951  0091                     	;# 
   952  0092                     	;# 
   953  0093                     	;# 
   954  0094                     	;# 
   955  0095                     	;# 
   956  0096                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009A                     	;# 
   960  009B                     	;# 
   961  009B                     	;# 
   962  009C                     	;# 
   963  009D                     	;# 
   964  009E                     	;# 
   965  009F                     	;# 
   966  010C                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  0111                     	;# 
   970  0112                     	;# 
   971  0113                     	;# 
   972  0114                     	;# 
   973  0115                     	;# 
   974  0116                     	;# 
   975  0117                     	;# 
   976  0118                     	;# 
   977  0119                     	;# 
   978  011C                     	;# 
   979  018C                     	;# 
   980  018D                     	;# 
   981  018E                     	;# 
   982  0191                     	;# 
   983  0191                     	;# 
   984  0192                     	;# 
   985  0193                     	;# 
   986  0193                     	;# 
   987  0194                     	;# 
   988  0195                     	;# 
   989  0196                     	;# 
   990  0197                     	;# 
   991  0199                     	;# 
   992  0199                     	;# 
   993  0199                     	;# 
   994  019A                     	;# 
   995  019A                     	;# 
   996  019A                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019C                     	;# 
  1003  019C                     	;# 
  1004  019C                     	;# 
  1005  019D                     	;# 
  1006  019D                     	;# 
  1007  019D                     	;# 
  1008  019E                     	;# 
  1009  019E                     	;# 
  1010  019E                     	;# 
  1011  019F                     	;# 
  1012  019F                     	;# 
  1013  019F                     	;# 
  1014  019F                     	;# 
  1015  019F                     	;# 
  1016  020C                     	;# 
  1017  020D                     	;# 
  1018  020E                     	;# 
  1019  0211                     	;# 
  1020  0211                     	;# 
  1021  0212                     	;# 
  1022  0212                     	;# 
  1023  0213                     	;# 
  1024  0213                     	;# 
  1025  0214                     	;# 
  1026  0214                     	;# 
  1027  0215                     	;# 
  1028  0215                     	;# 
  1029  0215                     	;# 
  1030  0215                     	;# 
  1031  0216                     	;# 
  1032  0216                     	;# 
  1033  0217                     	;# 
  1034  0217                     	;# 
  1035  028C                     	;# 
  1036  028D                     	;# 
  1037  028E                     	;# 
  1038  0291                     	;# 
  1039  0291                     	;# 
  1040  0292                     	;# 
  1041  0293                     	;# 
  1042  0294                     	;# 
  1043  0298                     	;# 
  1044  0298                     	;# 
  1045  0299                     	;# 
  1046  029A                     	;# 
  1047  029B                     	;# 
  1048  029E                     	;# 
  1049  030C                     	;# 
  1050  030D                     	;# 
  1051  030E                     	;# 
  1052  038C                     	;# 
  1053  038D                     	;# 
  1054  038E                     	;# 
  1055  0391                     	;# 
  1056  0392                     	;# 
  1057  0393                     	;# 
  1058  0394                     	;# 
  1059  0395                     	;# 
  1060  0396                     	;# 
  1061  0397                     	;# 
  1062  0398                     	;# 
  1063  0399                     	;# 
  1064  040E                     	;# 
  1065  0413                     	;# 
  1066  0413                     	;# 
  1067  0414                     	;# 
  1068  0414                     	;# 
  1069  0415                     	;# 
  1070  0416                     	;# 
  1071  0417                     	;# 
  1072  0418                     	;# 
  1073  041A                     	;# 
  1074  041A                     	;# 
  1075  041B                     	;# 
  1076  041B                     	;# 
  1077  041C                     	;# 
  1078  041D                     	;# 
  1079  041E                     	;# 
  1080  041F                     	;# 
  1081  0493                     	;# 
  1082  0494                     	;# 
  1083  0495                     	;# 
  1084  0496                     	;# 
  1085  049A                     	;# 
  1086  049B                     	;# 
  1087  049C                     	;# 
  1088  049D                     	;# 
  1089  058C                     	;# 
  1090  058C                     	;# 
  1091  058D                     	;# 
  1092  058E                     	;# 
  1093  058E                     	;# 
  1094  058F                     	;# 
  1095  0590                     	;# 
  1096  0590                     	;# 
  1097  0591                     	;# 
  1098  0592                     	;# 
  1099  0592                     	;# 
  1100  0593                     	;# 
  1101  0594                     	;# 
  1102  0594                     	;# 
  1103  0595                     	;# 
  1104  0596                     	;# 
  1105  0596                     	;# 
  1106  0597                     	;# 
  1107  0598                     	;# 
  1108  0599                     	;# 
  1109  059A                     	;# 
  1110  059B                     	;# 
  1111  059B                     	;# 
  1112  059C                     	;# 
  1113  059D                     	;# 
  1114  060C                     	;# 
  1115  060C                     	;# 
  1116  060D                     	;# 
  1117  060E                     	;# 
  1118  060F                     	;# 
  1119  060F                     	;# 
  1120  0610                     	;# 
  1121  0611                     	;# 
  1122  0612                     	;# 
  1123  0613                     	;# 
  1124  0614                     	;# 
  1125  0617                     	;# 
  1126  0618                     	;# 
  1127  0619                     	;# 
  1128  061A                     	;# 
  1129  061B                     	;# 
  1130  061C                     	;# 
  1131  0691                     	;# 
  1132  0692                     	;# 
  1133  0693                     	;# 
  1134  0694                     	;# 
  1135  0695                     	;# 
  1136  0696                     	;# 
  1137  0697                     	;# 
  1138  0699                     	;# 
  1139  069A                     	;# 
  1140  0711                     	;# 
  1141  0712                     	;# 
  1142  0713                     	;# 
  1143  0714                     	;# 
  1144  0715                     	;# 
  1145  0718                     	;# 
  1146  0718                     	;# 
  1147  0719                     	;# 
  1148  071A                     	;# 
  1149  071A                     	;# 
  1150  071B                     	;# 
  1151  071C                     	;# 
  1152  071D                     	;# 
  1153  0791                     	;# 
  1154  0791                     	;# 
  1155  0792                     	;# 
  1156  0793                     	;# 
  1157  0793                     	;# 
  1158  0794                     	;# 
  1159  0795                     	;# 
  1160  0795                     	;# 
  1161  0796                     	;# 
  1162  0797                     	;# 
  1163  0797                     	;# 
  1164  0798                     	;# 
  1165  0799                     	;# 
  1166  079A                     	;# 
  1167  080C                     	;# 
  1168  080C                     	;# 
  1169  080D                     	;# 
  1170  080E                     	;# 
  1171  080E                     	;# 
  1172  080F                     	;# 
  1173  0810                     	;# 
  1174  0810                     	;# 
  1175  0811                     	;# 
  1176  0812                     	;# 
  1177  0812                     	;# 
  1178  0813                     	;# 
  1179  0814                     	;# 
  1180  0815                     	;# 
  1181  0816                     	;# 
  1182  0817                     	;# 
  1183  0818                     	;# 
  1184  0819                     	;# 
  1185  081A                     	;# 
  1186  081A                     	;# 
  1187  081B                     	;# 
  1188  081C                     	;# 
  1189  081C                     	;# 
  1190  081D                     	;# 
  1191  088C                     	;# 
  1192  088D                     	;# 
  1193  088E                     	;# 
  1194  088F                     	;# 
  1195  088F                     	;# 
  1196  0890                     	;# 
  1197  0891                     	;# 
  1198  0892                     	;# 
  1199  0893                     	;# 
  1200  0893                     	;# 
  1201  0894                     	;# 
  1202  0895                     	;# 
  1203  0896                     	;# 
  1204  0897                     	;# 
  1205  0897                     	;# 
  1206  0898                     	;# 
  1207  0899                     	;# 
  1208  0D8C                     	;# 
  1209  0D8C                     	;# 
  1210  0D8D                     	;# 
  1211  0D8E                     	;# 
  1212  0D8F                     	;# 
  1213  0D8F                     	;# 
  1214  0D90                     	;# 
  1215  0D91                     	;# 
  1216  0D92                     	;# 
  1217  0D92                     	;# 
  1218  0D93                     	;# 
  1219  0D94                     	;# 
  1220  0D95                     	;# 
  1221  0D95                     	;# 
  1222  0D96                     	;# 
  1223  0D97                     	;# 
  1224  0D98                     	;# 
  1225  0D99                     	;# 
  1226  0D9A                     	;# 
  1227  0D9B                     	;# 
  1228  0D9C                     	;# 
  1229  0D9D                     	;# 
  1230  0D9E                     	;# 
  1231  0D9E                     	;# 
  1232  0D9F                     	;# 
  1233  0DA0                     	;# 
  1234  0DA1                     	;# 
  1235  0DA1                     	;# 
  1236  0DA2                     	;# 
  1237  0DA3                     	;# 
  1238  0DA4                     	;# 
  1239  0DA4                     	;# 
  1240  0DA5                     	;# 
  1241  0DA6                     	;# 
  1242  0DA7                     	;# 
  1243  0DA7                     	;# 
  1244  0DA8                     	;# 
  1245  0DA9                     	;# 
  1246  0DAA                     	;# 
  1247  0DAB                     	;# 
  1248  0DAC                     	;# 
  1249  0DAD                     	;# 
  1250  0DAE                     	;# 
  1251  0DAF                     	;# 
  1252  0E0F                     	;# 
  1253  0E10                     	;# 
  1254  0E11                     	;# 
  1255  0E12                     	;# 
  1256  0E13                     	;# 
  1257  0E14                     	;# 
  1258  0E15                     	;# 
  1259  0E16                     	;# 
  1260  0E17                     	;# 
  1261  0E18                     	;# 
  1262  0E19                     	;# 
  1263  0E1A                     	;# 
  1264  0E1B                     	;# 
  1265  0E1C                     	;# 
  1266  0E1D                     	;# 
  1267  0E1E                     	;# 
  1268  0E1F                     	;# 
  1269  0E20                     	;# 
  1270  0E21                     	;# 
  1271  0E22                     	;# 
  1272  0E23                     	;# 
  1273  0E24                     	;# 
  1274  0E25                     	;# 
  1275  0E26                     	;# 
  1276  0E27                     	;# 
  1277  0E28                     	;# 
  1278  0E29                     	;# 
  1279  0E2A                     	;# 
  1280  0E2B                     	;# 
  1281  0E2C                     	;# 
  1282  0E2D                     	;# 
  1283  0E2E                     	;# 
  1284  0E90                     	;# 
  1285  0E91                     	;# 
  1286  0E92                     	;# 
  1287  0E94                     	;# 
  1288  0E95                     	;# 
  1289  0E9C                     	;# 
  1290  0E9D                     	;# 
  1291  0E9E                     	;# 
  1292  0E9F                     	;# 
  1293  0EA0                     	;# 
  1294  0EA1                     	;# 
  1295  0EA2                     	;# 
  1296  0EA3                     	;# 
  1297  0EA4                     	;# 
  1298  0EA5                     	;# 
  1299  0EA6                     	;# 
  1300  0EA7                     	;# 
  1301  0F0F                     	;# 
  1302  0F10                     	;# 
  1303  0F11                     	;# 
  1304  0F12                     	;# 
  1305  0F13                     	;# 
  1306  0F14                     	;# 
  1307  0F15                     	;# 
  1308  0F16                     	;# 
  1309  0F17                     	;# 
  1310  0F18                     	;# 
  1311  0F19                     	;# 
  1312  0F1A                     	;# 
  1313  0F1B                     	;# 
  1314  0F1C                     	;# 
  1315  0F1D                     	;# 
  1316  0F1E                     	;# 
  1317  0F1F                     	;# 
  1318  0F20                     	;# 
  1319  0F21                     	;# 
  1320  0F22                     	;# 
  1321  0F23                     	;# 
  1322  0F24                     	;# 
  1323  0F25                     	;# 
  1324  0F26                     	;# 
  1325  0F27                     	;# 
  1326  0F28                     	;# 
  1327  0F29                     	;# 
  1328  0F2A                     	;# 
  1329  0F2B                     	;# 
  1330  0F2C                     	;# 
  1331  0F2D                     	;# 
  1332  0F2E                     	;# 
  1333  0F2F                     	;# 
  1334  0F30                     	;# 
  1335  0F31                     	;# 
  1336  0F32                     	;# 
  1337  0F33                     	;# 
  1338  0F34                     	;# 
  1339  0F35                     	;# 
  1340  0F36                     	;# 
  1341  0F37                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000D                     	;# 
  1367  000E                     	;# 
  1368  0010                     	;# 
  1369  0011                     	;# 
  1370  0012                     	;# 
  1371  0013                     	;# 
  1372  0014                     	;# 
  1373  0015                     	;# 
  1374  0016                     	;# 
  1375  0016                     	;# 
  1376  0017                     	;# 
  1377  0018                     	;# 
  1378  0019                     	;# 
  1379  001A                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001B                     	;# 
  1383  001C                     	;# 
  1384  001D                     	;# 
  1385  001E                     	;# 
  1386  001F                     	;# 
  1387  008C                     	;# 
  1388  008D                     	;# 
  1389  008E                     	;# 
  1390  0090                     	;# 
  1391  0091                     	;# 
  1392  0092                     	;# 
  1393  0093                     	;# 
  1394  0094                     	;# 
  1395  0095                     	;# 
  1396  0096                     	;# 
  1397  0098                     	;# 
  1398  0099                     	;# 
  1399  009A                     	;# 
  1400  009B                     	;# 
  1401  009B                     	;# 
  1402  009C                     	;# 
  1403  009D                     	;# 
  1404  009E                     	;# 
  1405  009F                     	;# 
  1406  010C                     	;# 
  1407  010D                     	;# 
  1408  010E                     	;# 
  1409  0111                     	;# 
  1410  0112                     	;# 
  1411  0113                     	;# 
  1412  0114                     	;# 
  1413  0115                     	;# 
  1414  0116                     	;# 
  1415  0117                     	;# 
  1416  0118                     	;# 
  1417  0119                     	;# 
  1418  011C                     	;# 
  1419  018C                     	;# 
  1420  018D                     	;# 
  1421  018E                     	;# 
  1422  0191                     	;# 
  1423  0191                     	;# 
  1424  0192                     	;# 
  1425  0193                     	;# 
  1426  0193                     	;# 
  1427  0194                     	;# 
  1428  0195                     	;# 
  1429  0196                     	;# 
  1430  0197                     	;# 
  1431  0199                     	;# 
  1432  0199                     	;# 
  1433  0199                     	;# 
  1434  019A                     	;# 
  1435  019A                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019C                     	;# 
  1444  019C                     	;# 
  1445  019D                     	;# 
  1446  019D                     	;# 
  1447  019D                     	;# 
  1448  019E                     	;# 
  1449  019E                     	;# 
  1450  019E                     	;# 
  1451  019F                     	;# 
  1452  019F                     	;# 
  1453  019F                     	;# 
  1454  019F                     	;# 
  1455  019F                     	;# 
  1456  020C                     	;# 
  1457  020D                     	;# 
  1458  020E                     	;# 
  1459  0211                     	;# 
  1460  0211                     	;# 
  1461  0212                     	;# 
  1462  0212                     	;# 
  1463  0213                     	;# 
  1464  0213                     	;# 
  1465  0214                     	;# 
  1466  0214                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0216                     	;# 
  1472  0216                     	;# 
  1473  0217                     	;# 
  1474  0217                     	;# 
  1475  028C                     	;# 
  1476  028D                     	;# 
  1477  028E                     	;# 
  1478  0291                     	;# 
  1479  0291                     	;# 
  1480  0292                     	;# 
  1481  0293                     	;# 
  1482  0294                     	;# 
  1483  0298                     	;# 
  1484  0298                     	;# 
  1485  0299                     	;# 
  1486  029A                     	;# 
  1487  029B                     	;# 
  1488  029E                     	;# 
  1489  030C                     	;# 
  1490  030D                     	;# 
  1491  030E                     	;# 
  1492  038C                     	;# 
  1493  038D                     	;# 
  1494  038E                     	;# 
  1495  0391                     	;# 
  1496  0392                     	;# 
  1497  0393                     	;# 
  1498  0394                     	;# 
  1499  0395                     	;# 
  1500  0396                     	;# 
  1501  0397                     	;# 
  1502  0398                     	;# 
  1503  0399                     	;# 
  1504  040E                     	;# 
  1505  0413                     	;# 
  1506  0413                     	;# 
  1507  0414                     	;# 
  1508  0414                     	;# 
  1509  0415                     	;# 
  1510  0416                     	;# 
  1511  0417                     	;# 
  1512  0418                     	;# 
  1513  041A                     	;# 
  1514  041A                     	;# 
  1515  041B                     	;# 
  1516  041B                     	;# 
  1517  041C                     	;# 
  1518  041D                     	;# 
  1519  041E                     	;# 
  1520  041F                     	;# 
  1521  0493                     	;# 
  1522  0494                     	;# 
  1523  0495                     	;# 
  1524  0496                     	;# 
  1525  049A                     	;# 
  1526  049B                     	;# 
  1527  049C                     	;# 
  1528  049D                     	;# 
  1529  058C                     	;# 
  1530  058C                     	;# 
  1531  058D                     	;# 
  1532  058E                     	;# 
  1533  058E                     	;# 
  1534  058F                     	;# 
  1535  0590                     	;# 
  1536  0590                     	;# 
  1537  0591                     	;# 
  1538  0592                     	;# 
  1539  0592                     	;# 
  1540  0593                     	;# 
  1541  0594                     	;# 
  1542  0594                     	;# 
  1543  0595                     	;# 
  1544  0596                     	;# 
  1545  0596                     	;# 
  1546  0597                     	;# 
  1547  0598                     	;# 
  1548  0599                     	;# 
  1549  059A                     	;# 
  1550  059B                     	;# 
  1551  059B                     	;# 
  1552  059C                     	;# 
  1553  059D                     	;# 
  1554  060C                     	;# 
  1555  060C                     	;# 
  1556  060D                     	;# 
  1557  060E                     	;# 
  1558  060F                     	;# 
  1559  060F                     	;# 
  1560  0610                     	;# 
  1561  0611                     	;# 
  1562  0612                     	;# 
  1563  0613                     	;# 
  1564  0614                     	;# 
  1565  0617                     	;# 
  1566  0618                     	;# 
  1567  0619                     	;# 
  1568  061A                     	;# 
  1569  061B                     	;# 
  1570  061C                     	;# 
  1571  0691                     	;# 
  1572  0692                     	;# 
  1573  0693                     	;# 
  1574  0694                     	;# 
  1575  0695                     	;# 
  1576  0696                     	;# 
  1577  0697                     	;# 
  1578  0699                     	;# 
  1579  069A                     	;# 
  1580  0711                     	;# 
  1581  0712                     	;# 
  1582  0713                     	;# 
  1583  0714                     	;# 
  1584  0715                     	;# 
  1585  0718                     	;# 
  1586  0718                     	;# 
  1587  0719                     	;# 
  1588  071A                     	;# 
  1589  071A                     	;# 
  1590  071B                     	;# 
  1591  071C                     	;# 
  1592  071D                     	;# 
  1593  0791                     	;# 
  1594  0791                     	;# 
  1595  0792                     	;# 
  1596  0793                     	;# 
  1597  0793                     	;# 
  1598  0794                     	;# 
  1599  0795                     	;# 
  1600  0795                     	;# 
  1601  0796                     	;# 
  1602  0797                     	;# 
  1603  0797                     	;# 
  1604  0798                     	;# 
  1605  0799                     	;# 
  1606  079A                     	;# 
  1607  080C                     	;# 
  1608  080C                     	;# 
  1609  080D                     	;# 
  1610  080E                     	;# 
  1611  080E                     	;# 
  1612  080F                     	;# 
  1613  0810                     	;# 
  1614  0810                     	;# 
  1615  0811                     	;# 
  1616  0812                     	;# 
  1617  0812                     	;# 
  1618  0813                     	;# 
  1619  0814                     	;# 
  1620  0815                     	;# 
  1621  0816                     	;# 
  1622  0817                     	;# 
  1623  0818                     	;# 
  1624  0819                     	;# 
  1625  081A                     	;# 
  1626  081A                     	;# 
  1627  081B                     	;# 
  1628  081C                     	;# 
  1629  081C                     	;# 
  1630  081D                     	;# 
  1631  088C                     	;# 
  1632  088D                     	;# 
  1633  088E                     	;# 
  1634  088F                     	;# 
  1635  088F                     	;# 
  1636  0890                     	;# 
  1637  0891                     	;# 
  1638  0892                     	;# 
  1639  0893                     	;# 
  1640  0893                     	;# 
  1641  0894                     	;# 
  1642  0895                     	;# 
  1643  0896                     	;# 
  1644  0897                     	;# 
  1645  0897                     	;# 
  1646  0898                     	;# 
  1647  0899                     	;# 
  1648  0D8C                     	;# 
  1649  0D8C                     	;# 
  1650  0D8D                     	;# 
  1651  0D8E                     	;# 
  1652  0D8F                     	;# 
  1653  0D8F                     	;# 
  1654  0D90                     	;# 
  1655  0D91                     	;# 
  1656  0D92                     	;# 
  1657  0D92                     	;# 
  1658  0D93                     	;# 
  1659  0D94                     	;# 
  1660  0D95                     	;# 
  1661  0D95                     	;# 
  1662  0D96                     	;# 
  1663  0D97                     	;# 
  1664  0D98                     	;# 
  1665  0D99                     	;# 
  1666  0D9A                     	;# 
  1667  0D9B                     	;# 
  1668  0D9C                     	;# 
  1669  0D9D                     	;# 
  1670  0D9E                     	;# 
  1671  0D9E                     	;# 
  1672  0D9F                     	;# 
  1673  0DA0                     	;# 
  1674  0DA1                     	;# 
  1675  0DA1                     	;# 
  1676  0DA2                     	;# 
  1677  0DA3                     	;# 
  1678  0DA4                     	;# 
  1679  0DA4                     	;# 
  1680  0DA5                     	;# 
  1681  0DA6                     	;# 
  1682  0DA7                     	;# 
  1683  0DA7                     	;# 
  1684  0DA8                     	;# 
  1685  0DA9                     	;# 
  1686  0DAA                     	;# 
  1687  0DAB                     	;# 
  1688  0DAC                     	;# 
  1689  0DAD                     	;# 
  1690  0DAE                     	;# 
  1691  0DAF                     	;# 
  1692  0E0F                     	;# 
  1693  0E10                     	;# 
  1694  0E11                     	;# 
  1695  0E12                     	;# 
  1696  0E13                     	;# 
  1697  0E14                     	;# 
  1698  0E15                     	;# 
  1699  0E16                     	;# 
  1700  0E17                     	;# 
  1701  0E18                     	;# 
  1702  0E19                     	;# 
  1703  0E1A                     	;# 
  1704  0E1B                     	;# 
  1705  0E1C                     	;# 
  1706  0E1D                     	;# 
  1707  0E1E                     	;# 
  1708  0E1F                     	;# 
  1709  0E20                     	;# 
  1710  0E21                     	;# 
  1711  0E22                     	;# 
  1712  0E23                     	;# 
  1713  0E24                     	;# 
  1714  0E25                     	;# 
  1715  0E26                     	;# 
  1716  0E27                     	;# 
  1717  0E28                     	;# 
  1718  0E29                     	;# 
  1719  0E2A                     	;# 
  1720  0E2B                     	;# 
  1721  0E2C                     	;# 
  1722  0E2D                     	;# 
  1723  0E2E                     	;# 
  1724  0E90                     	;# 
  1725  0E91                     	;# 
  1726  0E92                     	;# 
  1727  0E94                     	;# 
  1728  0E95                     	;# 
  1729  0E9C                     	;# 
  1730  0E9D                     	;# 
  1731  0E9E                     	;# 
  1732  0E9F                     	;# 
  1733  0EA0                     	;# 
  1734  0EA1                     	;# 
  1735  0EA2                     	;# 
  1736  0EA3                     	;# 
  1737  0EA4                     	;# 
  1738  0EA5                     	;# 
  1739  0EA6                     	;# 
  1740  0EA7                     	;# 
  1741  0F0F                     	;# 
  1742  0F10                     	;# 
  1743  0F11                     	;# 
  1744  0F12                     	;# 
  1745  0F13                     	;# 
  1746  0F14                     	;# 
  1747  0F15                     	;# 
  1748  0F16                     	;# 
  1749  0F17                     	;# 
  1750  0F18                     	;# 
  1751  0F19                     	;# 
  1752  0F1A                     	;# 
  1753  0F1B                     	;# 
  1754  0F1C                     	;# 
  1755  0F1D                     	;# 
  1756  0F1E                     	;# 
  1757  0F1F                     	;# 
  1758  0F20                     	;# 
  1759  0F21                     	;# 
  1760  0F22                     	;# 
  1761  0F23                     	;# 
  1762  0F24                     	;# 
  1763  0F25                     	;# 
  1764  0F26                     	;# 
  1765  0F27                     	;# 
  1766  0F28                     	;# 
  1767  0F29                     	;# 
  1768  0F2A                     	;# 
  1769  0F2B                     	;# 
  1770  0F2C                     	;# 
  1771  0F2D                     	;# 
  1772  0F2E                     	;# 
  1773  0F2F                     	;# 
  1774  0F30                     	;# 
  1775  0F31                     	;# 
  1776  0F32                     	;# 
  1777  0F33                     	;# 
  1778  0F34                     	;# 
  1779  0F35                     	;# 
  1780  0F36                     	;# 
  1781  0F37                     	;# 
  1782  0FE4                     	;# 
  1783  0FE5                     	;# 
  1784  0FE6                     	;# 
  1785  0FE7                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEB                     	;# 
  1790  0FED                     	;# 
  1791  0FEE                     	;# 
  1792  0FEF                     	;# 
  1793  0000                     	;# 
  1794  0001                     	;# 
  1795  0002                     	;# 
  1796  0003                     	;# 
  1797  0004                     	;# 
  1798  0005                     	;# 
  1799  0006                     	;# 
  1800  0007                     	;# 
  1801  0008                     	;# 
  1802  0009                     	;# 
  1803  000A                     	;# 
  1804  000B                     	;# 
  1805  000C                     	;# 
  1806  000D                     	;# 
  1807  000E                     	;# 
  1808  0010                     	;# 
  1809  0011                     	;# 
  1810  0012                     	;# 
  1811  0013                     	;# 
  1812  0014                     	;# 
  1813  0015                     	;# 
  1814  0016                     	;# 
  1815  0016                     	;# 
  1816  0017                     	;# 
  1817  0018                     	;# 
  1818  0019                     	;# 
  1819  001A                     	;# 
  1820  001A                     	;# 
  1821  001B                     	;# 
  1822  001B                     	;# 
  1823  001C                     	;# 
  1824  001D                     	;# 
  1825  001E                     	;# 
  1826  001F                     	;# 
  1827  008C                     	;# 
  1828  008D                     	;# 
  1829  008E                     	;# 
  1830  0090                     	;# 
  1831  0091                     	;# 
  1832  0092                     	;# 
  1833  0093                     	;# 
  1834  0094                     	;# 
  1835  0095                     	;# 
  1836  0096                     	;# 
  1837  0098                     	;# 
  1838  0099                     	;# 
  1839  009A                     	;# 
  1840  009B                     	;# 
  1841  009B                     	;# 
  1842  009C                     	;# 
  1843  009D                     	;# 
  1844  009E                     	;# 
  1845  009F                     	;# 
  1846  010C                     	;# 
  1847  010D                     	;# 
  1848  010E                     	;# 
  1849  0111                     	;# 
  1850  0112                     	;# 
  1851  0113                     	;# 
  1852  0114                     	;# 
  1853  0115                     	;# 
  1854  0116                     	;# 
  1855  0117                     	;# 
  1856  0118                     	;# 
  1857  0119                     	;# 
  1858  011C                     	;# 
  1859  018C                     	;# 
  1860  018D                     	;# 
  1861  018E                     	;# 
  1862  0191                     	;# 
  1863  0191                     	;# 
  1864  0192                     	;# 
  1865  0193                     	;# 
  1866  0193                     	;# 
  1867  0194                     	;# 
  1868  0195                     	;# 
  1869  0196                     	;# 
  1870  0197                     	;# 
  1871  0199                     	;# 
  1872  0199                     	;# 
  1873  0199                     	;# 
  1874  019A                     	;# 
  1875  019A                     	;# 
  1876  019A                     	;# 
  1877  019B                     	;# 
  1878  019B                     	;# 
  1879  019B                     	;# 
  1880  019B                     	;# 
  1881  019B                     	;# 
  1882  019C                     	;# 
  1883  019C                     	;# 
  1884  019C                     	;# 
  1885  019D                     	;# 
  1886  019D                     	;# 
  1887  019D                     	;# 
  1888  019E                     	;# 
  1889  019E                     	;# 
  1890  019E                     	;# 
  1891  019F                     	;# 
  1892  019F                     	;# 
  1893  019F                     	;# 
  1894  019F                     	;# 
  1895  019F                     	;# 
  1896  020C                     	;# 
  1897  020D                     	;# 
  1898  020E                     	;# 
  1899  0211                     	;# 
  1900  0211                     	;# 
  1901  0212                     	;# 
  1902  0212                     	;# 
  1903  0213                     	;# 
  1904  0213                     	;# 
  1905  0214                     	;# 
  1906  0214                     	;# 
  1907  0215                     	;# 
  1908  0215                     	;# 
  1909  0215                     	;# 
  1910  0215                     	;# 
  1911  0216                     	;# 
  1912  0216                     	;# 
  1913  0217                     	;# 
  1914  0217                     	;# 
  1915  028C                     	;# 
  1916  028D                     	;# 
  1917  028E                     	;# 
  1918  0291                     	;# 
  1919  0291                     	;# 
  1920  0292                     	;# 
  1921  0293                     	;# 
  1922  0294                     	;# 
  1923  0298                     	;# 
  1924  0298                     	;# 
  1925  0299                     	;# 
  1926  029A                     	;# 
  1927  029B                     	;# 
  1928  029E                     	;# 
  1929  030C                     	;# 
  1930  030D                     	;# 
  1931  030E                     	;# 
  1932  038C                     	;# 
  1933  038D                     	;# 
  1934  038E                     	;# 
  1935  0391                     	;# 
  1936  0392                     	;# 
  1937  0393                     	;# 
  1938  0394                     	;# 
  1939  0395                     	;# 
  1940  0396                     	;# 
  1941  0397                     	;# 
  1942  0398                     	;# 
  1943  0399                     	;# 
  1944  040E                     	;# 
  1945  0413                     	;# 
  1946  0413                     	;# 
  1947  0414                     	;# 
  1948  0414                     	;# 
  1949  0415                     	;# 
  1950  0416                     	;# 
  1951  0417                     	;# 
  1952  0418                     	;# 
  1953  041A                     	;# 
  1954  041A                     	;# 
  1955  041B                     	;# 
  1956  041B                     	;# 
  1957  041C                     	;# 
  1958  041D                     	;# 
  1959  041E                     	;# 
  1960  041F                     	;# 
  1961  0493                     	;# 
  1962  0494                     	;# 
  1963  0495                     	;# 
  1964  0496                     	;# 
  1965  049A                     	;# 
  1966  049B                     	;# 
  1967  049C                     	;# 
  1968  049D                     	;# 
  1969  058C                     	;# 
  1970  058C                     	;# 
  1971  058D                     	;# 
  1972  058E                     	;# 
  1973  058E                     	;# 
  1974  058F                     	;# 
  1975  0590                     	;# 
  1976  0590                     	;# 
  1977  0591                     	;# 
  1978  0592                     	;# 
  1979  0592                     	;# 
  1980  0593                     	;# 
  1981  0594                     	;# 
  1982  0594                     	;# 
  1983  0595                     	;# 
  1984  0596                     	;# 
  1985  0596                     	;# 
  1986  0597                     	;# 
  1987  0598                     	;# 
  1988  0599                     	;# 
  1989  059A                     	;# 
  1990  059B                     	;# 
  1991  059B                     	;# 
  1992  059C                     	;# 
  1993  059D                     	;# 
  1994  060C                     	;# 
  1995  060C                     	;# 
  1996  060D                     	;# 
  1997  060E                     	;# 
  1998  060F                     	;# 
  1999  060F                     	;# 
  2000  0610                     	;# 
  2001  0611                     	;# 
  2002  0612                     	;# 
  2003  0613                     	;# 
  2004  0614                     	;# 
  2005  0617                     	;# 
  2006  0618                     	;# 
  2007  0619                     	;# 
  2008  061A                     	;# 
  2009  061B                     	;# 
  2010  061C                     	;# 
  2011  0691                     	;# 
  2012  0692                     	;# 
  2013  0693                     	;# 
  2014  0694                     	;# 
  2015  0695                     	;# 
  2016  0696                     	;# 
  2017  0697                     	;# 
  2018  0699                     	;# 
  2019  069A                     	;# 
  2020  0711                     	;# 
  2021  0712                     	;# 
  2022  0713                     	;# 
  2023  0714                     	;# 
  2024  0715                     	;# 
  2025  0718                     	;# 
  2026  0718                     	;# 
  2027  0719                     	;# 
  2028  071A                     	;# 
  2029  071A                     	;# 
  2030  071B                     	;# 
  2031  071C                     	;# 
  2032  071D                     	;# 
  2033  0791                     	;# 
  2034  0791                     	;# 
  2035  0792                     	;# 
  2036  0793                     	;# 
  2037  0793                     	;# 
  2038  0794                     	;# 
  2039  0795                     	;# 
  2040  0795                     	;# 
  2041  0796                     	;# 
  2042  0797                     	;# 
  2043  0797                     	;# 
  2044  0798                     	;# 
  2045  0799                     	;# 
  2046  079A                     	;# 
  2047  080C                     	;# 
  2048  080C                     	;# 
  2049  080D                     	;# 
  2050  080E                     	;# 
  2051  080E                     	;# 
  2052  080F                     	;# 
  2053  0810                     	;# 
  2054  0810                     	;# 
  2055  0811                     	;# 
  2056  0812                     	;# 
  2057  0812                     	;# 
  2058  0813                     	;# 
  2059  0814                     	;# 
  2060  0815                     	;# 
  2061  0816                     	;# 
  2062  0817                     	;# 
  2063  0818                     	;# 
  2064  0819                     	;# 
  2065  081A                     	;# 
  2066  081A                     	;# 
  2067  081B                     	;# 
  2068  081C                     	;# 
  2069  081C                     	;# 
  2070  081D                     	;# 
  2071  088C                     	;# 
  2072  088D                     	;# 
  2073  088E                     	;# 
  2074  088F                     	;# 
  2075  088F                     	;# 
  2076  0890                     	;# 
  2077  0891                     	;# 
  2078  0892                     	;# 
  2079  0893                     	;# 
  2080  0893                     	;# 
  2081  0894                     	;# 
  2082  0895                     	;# 
  2083  0896                     	;# 
  2084  0897                     	;# 
  2085  0897                     	;# 
  2086  0898                     	;# 
  2087  0899                     	;# 
  2088  0D8C                     	;# 
  2089  0D8C                     	;# 
  2090  0D8D                     	;# 
  2091  0D8E                     	;# 
  2092  0D8F                     	;# 
  2093  0D8F                     	;# 
  2094  0D90                     	;# 
  2095  0D91                     	;# 
  2096  0D92                     	;# 
  2097  0D92                     	;# 
  2098  0D93                     	;# 
  2099  0D94                     	;# 
  2100  0D95                     	;# 
  2101  0D95                     	;# 
  2102  0D96                     	;# 
  2103  0D97                     	;# 
  2104  0D98                     	;# 
  2105  0D99                     	;# 
  2106  0D9A                     	;# 
  2107  0D9B                     	;# 
  2108  0D9C                     	;# 
  2109  0D9D                     	;# 
  2110  0D9E                     	;# 
  2111  0D9E                     	;# 
  2112  0D9F                     	;# 
  2113  0DA0                     	;# 
  2114  0DA1                     	;# 
  2115  0DA1                     	;# 
  2116  0DA2                     	;# 
  2117  0DA3                     	;# 
  2118  0DA4                     	;# 
  2119  0DA4                     	;# 
  2120  0DA5                     	;# 
  2121  0DA6                     	;# 
  2122  0DA7                     	;# 
  2123  0DA7                     	;# 
  2124  0DA8                     	;# 
  2125  0DA9                     	;# 
  2126  0DAA                     	;# 
  2127  0DAB                     	;# 
  2128  0DAC                     	;# 
  2129  0DAD                     	;# 
  2130  0DAE                     	;# 
  2131  0DAF                     	;# 
  2132  0E0F                     	;# 
  2133  0E10                     	;# 
  2134  0E11                     	;# 
  2135  0E12                     	;# 
  2136  0E13                     	;# 
  2137  0E14                     	;# 
  2138  0E15                     	;# 
  2139  0E16                     	;# 
  2140  0E17                     	;# 
  2141  0E18                     	;# 
  2142  0E19                     	;# 
  2143  0E1A                     	;# 
  2144  0E1B                     	;# 
  2145  0E1C                     	;# 
  2146  0E1D                     	;# 
  2147  0E1E                     	;# 
  2148  0E1F                     	;# 
  2149  0E20                     	;# 
  2150  0E21                     	;# 
  2151  0E22                     	;# 
  2152  0E23                     	;# 
  2153  0E24                     	;# 
  2154  0E25                     	;# 
  2155  0E26                     	;# 
  2156  0E27                     	;# 
  2157  0E28                     	;# 
  2158  0E29                     	;# 
  2159  0E2A                     	;# 
  2160  0E2B                     	;# 
  2161  0E2C                     	;# 
  2162  0E2D                     	;# 
  2163  0E2E                     	;# 
  2164  0E90                     	;# 
  2165  0E91                     	;# 
  2166  0E92                     	;# 
  2167  0E94                     	;# 
  2168  0E95                     	;# 
  2169  0E9C                     	;# 
  2170  0E9D                     	;# 
  2171  0E9E                     	;# 
  2172  0E9F                     	;# 
  2173  0EA0                     	;# 
  2174  0EA1                     	;# 
  2175  0EA2                     	;# 
  2176  0EA3                     	;# 
  2177  0EA4                     	;# 
  2178  0EA5                     	;# 
  2179  0EA6                     	;# 
  2180  0EA7                     	;# 
  2181  0F0F                     	;# 
  2182  0F10                     	;# 
  2183  0F11                     	;# 
  2184  0F12                     	;# 
  2185  0F13                     	;# 
  2186  0F14                     	;# 
  2187  0F15                     	;# 
  2188  0F16                     	;# 
  2189  0F17                     	;# 
  2190  0F18                     	;# 
  2191  0F19                     	;# 
  2192  0F1A                     	;# 
  2193  0F1B                     	;# 
  2194  0F1C                     	;# 
  2195  0F1D                     	;# 
  2196  0F1E                     	;# 
  2197  0F1F                     	;# 
  2198  0F20                     	;# 
  2199  0F21                     	;# 
  2200  0F22                     	;# 
  2201  0F23                     	;# 
  2202  0F24                     	;# 
  2203  0F25                     	;# 
  2204  0F26                     	;# 
  2205  0F27                     	;# 
  2206  0F28                     	;# 
  2207  0F29                     	;# 
  2208  0F2A                     	;# 
  2209  0F2B                     	;# 
  2210  0F2C                     	;# 
  2211  0F2D                     	;# 
  2212  0F2E                     	;# 
  2213  0F2F                     	;# 
  2214  0F30                     	;# 
  2215  0F31                     	;# 
  2216  0F32                     	;# 
  2217  0F33                     	;# 
  2218  0F34                     	;# 
  2219  0F35                     	;# 
  2220  0F36                     	;# 
  2221  0F37                     	;# 
  2222  0FE4                     	;# 
  2223  0FE5                     	;# 
  2224  0FE6                     	;# 
  2225  0FE7                     	;# 
  2226  0FE8                     	;# 
  2227  0FE9                     	;# 
  2228  0FEA                     	;# 
  2229  0FEB                     	;# 
  2230  0FED                     	;# 
  2231  0FEE                     	;# 
  2232  0FEF                     	;# 
  2233  0000                     	;# 
  2234  0001                     	;# 
  2235  0002                     	;# 
  2236  0003                     	;# 
  2237  0004                     	;# 
  2238  0005                     	;# 
  2239  0006                     	;# 
  2240  0007                     	;# 
  2241  0008                     	;# 
  2242  0009                     	;# 
  2243  000A                     	;# 
  2244  000B                     	;# 
  2245  000C                     	;# 
  2246  000D                     	;# 
  2247  000E                     	;# 
  2248  0010                     	;# 
  2249  0011                     	;# 
  2250  0012                     	;# 
  2251  0013                     	;# 
  2252  0014                     	;# 
  2253  0015                     	;# 
  2254  0016                     	;# 
  2255  0016                     	;# 
  2256  0017                     	;# 
  2257  0018                     	;# 
  2258  0019                     	;# 
  2259  001A                     	;# 
  2260  001A                     	;# 
  2261  001B                     	;# 
  2262  001B                     	;# 
  2263  001C                     	;# 
  2264  001D                     	;# 
  2265  001E                     	;# 
  2266  001F                     	;# 
  2267  008C                     	;# 
  2268  008D                     	;# 
  2269  008E                     	;# 
  2270  0090                     	;# 
  2271  0091                     	;# 
  2272  0092                     	;# 
  2273  0093                     	;# 
  2274  0094                     	;# 
  2275  0095                     	;# 
  2276  0096                     	;# 
  2277  0098                     	;# 
  2278  0099                     	;# 
  2279  009A                     	;# 
  2280  009B                     	;# 
  2281  009B                     	;# 
  2282  009C                     	;# 
  2283  009D                     	;# 
  2284  009E                     	;# 
  2285  009F                     	;# 
  2286  010C                     	;# 
  2287  010D                     	;# 
  2288  010E                     	;# 
  2289  0111                     	;# 
  2290  0112                     	;# 
  2291  0113                     	;# 
  2292  0114                     	;# 
  2293  0115                     	;# 
  2294  0116                     	;# 
  2295  0117                     	;# 
  2296  0118                     	;# 
  2297  0119                     	;# 
  2298  011C                     	;# 
  2299  018C                     	;# 
  2300  018D                     	;# 
  2301  018E                     	;# 
  2302  0191                     	;# 
  2303  0191                     	;# 
  2304  0192                     	;# 
  2305  0193                     	;# 
  2306  0193                     	;# 
  2307  0194                     	;# 
  2308  0195                     	;# 
  2309  0196                     	;# 
  2310  0197                     	;# 
  2311  0199                     	;# 
  2312  0199                     	;# 
  2313  0199                     	;# 
  2314  019A                     	;# 
  2315  019A                     	;# 
  2316  019A                     	;# 
  2317  019B                     	;# 
  2318  019B                     	;# 
  2319  019B                     	;# 
  2320  019B                     	;# 
  2321  019B                     	;# 
  2322  019C                     	;# 
  2323  019C                     	;# 
  2324  019C                     	;# 
  2325  019D                     	;# 
  2326  019D                     	;# 
  2327  019D                     	;# 
  2328  019E                     	;# 
  2329  019E                     	;# 
  2330  019E                     	;# 
  2331  019F                     	;# 
  2332  019F                     	;# 
  2333  019F                     	;# 
  2334  019F                     	;# 
  2335  019F                     	;# 
  2336  020C                     	;# 
  2337  020D                     	;# 
  2338  020E                     	;# 
  2339  0211                     	;# 
  2340  0211                     	;# 
  2341  0212                     	;# 
  2342  0212                     	;# 
  2343  0213                     	;# 
  2344  0213                     	;# 
  2345  0214                     	;# 
  2346  0214                     	;# 
  2347  0215                     	;# 
  2348  0215                     	;# 
  2349  0215                     	;# 
  2350  0215                     	;# 
  2351  0216                     	;# 
  2352  0216                     	;# 
  2353  0217                     	;# 
  2354  0217                     	;# 
  2355  028C                     	;# 
  2356  028D                     	;# 
  2357  028E                     	;# 
  2358  0291                     	;# 
  2359  0291                     	;# 
  2360  0292                     	;# 
  2361  0293                     	;# 
  2362  0294                     	;# 
  2363  0298                     	;# 
  2364  0298                     	;# 
  2365  0299                     	;# 
  2366  029A                     	;# 
  2367  029B                     	;# 
  2368  029E                     	;# 
  2369  030C                     	;# 
  2370  030D                     	;# 
  2371  030E                     	;# 
  2372  038C                     	;# 
  2373  038D                     	;# 
  2374  038E                     	;# 
  2375  0391                     	;# 
  2376  0392                     	;# 
  2377  0393                     	;# 
  2378  0394                     	;# 
  2379  0395                     	;# 
  2380  0396                     	;# 
  2381  0397                     	;# 
  2382  0398                     	;# 
  2383  0399                     	;# 
  2384  040E                     	;# 
  2385  0413                     	;# 
  2386  0413                     	;# 
  2387  0414                     	;# 
  2388  0414                     	;# 
  2389  0415                     	;# 
  2390  0416                     	;# 
  2391  0417                     	;# 
  2392  0418                     	;# 
  2393  041A                     	;# 
  2394  041A                     	;# 
  2395  041B                     	;# 
  2396  041B                     	;# 
  2397  041C                     	;# 
  2398  041D                     	;# 
  2399  041E                     	;# 
  2400  041F                     	;# 
  2401  0493                     	;# 
  2402  0494                     	;# 
  2403  0495                     	;# 
  2404  0496                     	;# 
  2405  049A                     	;# 
  2406  049B                     	;# 
  2407  049C                     	;# 
  2408  049D                     	;# 
  2409  058C                     	;# 
  2410  058C                     	;# 
  2411  058D                     	;# 
  2412  058E                     	;# 
  2413  058E                     	;# 
  2414  058F                     	;# 
  2415  0590                     	;# 
  2416  0590                     	;# 
  2417  0591                     	;# 
  2418  0592                     	;# 
  2419  0592                     	;# 
  2420  0593                     	;# 
  2421  0594                     	;# 
  2422  0594                     	;# 
  2423  0595                     	;# 
  2424  0596                     	;# 
  2425  0596                     	;# 
  2426  0597                     	;# 
  2427  0598                     	;# 
  2428  0599                     	;# 
  2429  059A                     	;# 
  2430  059B                     	;# 
  2431  059B                     	;# 
  2432  059C                     	;# 
  2433  059D                     	;# 
  2434  060C                     	;# 
  2435  060C                     	;# 
  2436  060D                     	;# 
  2437  060E                     	;# 
  2438  060F                     	;# 
  2439  060F                     	;# 
  2440  0610                     	;# 
  2441  0611                     	;# 
  2442  0612                     	;# 
  2443  0613                     	;# 
  2444  0614                     	;# 
  2445  0617                     	;# 
  2446  0618                     	;# 
  2447  0619                     	;# 
  2448  061A                     	;# 
  2449  061B                     	;# 
  2450  061C                     	;# 
  2451  0691                     	;# 
  2452  0692                     	;# 
  2453  0693                     	;# 
  2454  0694                     	;# 
  2455  0695                     	;# 
  2456  0696                     	;# 
  2457  0697                     	;# 
  2458  0699                     	;# 
  2459  069A                     	;# 
  2460  0711                     	;# 
  2461  0712                     	;# 
  2462  0713                     	;# 
  2463  0714                     	;# 
  2464  0715                     	;# 
  2465  0718                     	;# 
  2466  0718                     	;# 
  2467  0719                     	;# 
  2468  071A                     	;# 
  2469  071A                     	;# 
  2470  071B                     	;# 
  2471  071C                     	;# 
  2472  071D                     	;# 
  2473  0791                     	;# 
  2474  0791                     	;# 
  2475  0792                     	;# 
  2476  0793                     	;# 
  2477  0793                     	;# 
  2478  0794                     	;# 
  2479  0795                     	;# 
  2480  0795                     	;# 
  2481  0796                     	;# 
  2482  0797                     	;# 
  2483  0797                     	;# 
  2484  0798                     	;# 
  2485  0799                     	;# 
  2486  079A                     	;# 
  2487  080C                     	;# 
  2488  080C                     	;# 
  2489  080D                     	;# 
  2490  080E                     	;# 
  2491  080E                     	;# 
  2492  080F                     	;# 
  2493  0810                     	;# 
  2494  0810                     	;# 
  2495  0811                     	;# 
  2496  0812                     	;# 
  2497  0812                     	;# 
  2498  0813                     	;# 
  2499  0814                     	;# 
  2500  0815                     	;# 
  2501  0816                     	;# 
  2502  0817                     	;# 
  2503  0818                     	;# 
  2504  0819                     	;# 
  2505  081A                     	;# 
  2506  081A                     	;# 
  2507  081B                     	;# 
  2508  081C                     	;# 
  2509  081C                     	;# 
  2510  081D                     	;# 
  2511  088C                     	;# 
  2512  088D                     	;# 
  2513  088E                     	;# 
  2514  088F                     	;# 
  2515  088F                     	;# 
  2516  0890                     	;# 
  2517  0891                     	;# 
  2518  0892                     	;# 
  2519  0893                     	;# 
  2520  0893                     	;# 
  2521  0894                     	;# 
  2522  0895                     	;# 
  2523  0896                     	;# 
  2524  0897                     	;# 
  2525  0897                     	;# 
  2526  0898                     	;# 
  2527  0899                     	;# 
  2528  0D8C                     	;# 
  2529  0D8C                     	;# 
  2530  0D8D                     	;# 
  2531  0D8E                     	;# 
  2532  0D8F                     	;# 
  2533  0D8F                     	;# 
  2534  0D90                     	;# 
  2535  0D91                     	;# 
  2536  0D92                     	;# 
  2537  0D92                     	;# 
  2538  0D93                     	;# 
  2539  0D94                     	;# 
  2540  0D95                     	;# 
  2541  0D95                     	;# 
  2542  0D96                     	;# 
  2543  0D97                     	;# 
  2544  0D98                     	;# 
  2545  0D99                     	;# 
  2546  0D9A                     	;# 
  2547  0D9B                     	;# 
  2548  0D9C                     	;# 
  2549  0D9D                     	;# 
  2550  0D9E                     	;# 
  2551  0D9E                     	;# 
  2552  0D9F                     	;# 
  2553  0DA0                     	;# 
  2554  0DA1                     	;# 
  2555  0DA1                     	;# 
  2556  0DA2                     	;# 
  2557  0DA3                     	;# 
  2558  0DA4                     	;# 
  2559  0DA4                     	;# 
  2560  0DA5                     	;# 
  2561  0DA6                     	;# 
  2562  0DA7                     	;# 
  2563  0DA7                     	;# 
  2564  0DA8                     	;# 
  2565  0DA9                     	;# 
  2566  0DAA                     	;# 
  2567  0DAB                     	;# 
  2568  0DAC                     	;# 
  2569  0DAD                     	;# 
  2570  0DAE                     	;# 
  2571  0DAF                     	;# 
  2572  0E0F                     	;# 
  2573  0E10                     	;# 
  2574  0E11                     	;# 
  2575  0E12                     	;# 
  2576  0E13                     	;# 
  2577  0E14                     	;# 
  2578  0E15                     	;# 
  2579  0E16                     	;# 
  2580  0E17                     	;# 
  2581  0E18                     	;# 
  2582  0E19                     	;# 
  2583  0E1A                     	;# 
  2584  0E1B                     	;# 
  2585  0E1C                     	;# 
  2586  0E1D                     	;# 
  2587  0E1E                     	;# 
  2588  0E1F                     	;# 
  2589  0E20                     	;# 
  2590  0E21                     	;# 
  2591  0E22                     	;# 
  2592  0E23                     	;# 
  2593  0E24                     	;# 
  2594  0E25                     	;# 
  2595  0E26                     	;# 
  2596  0E27                     	;# 
  2597  0E28                     	;# 
  2598  0E29                     	;# 
  2599  0E2A                     	;# 
  2600  0E2B                     	;# 
  2601  0E2C                     	;# 
  2602  0E2D                     	;# 
  2603  0E2E                     	;# 
  2604  0E90                     	;# 
  2605  0E91                     	;# 
  2606  0E92                     	;# 
  2607  0E94                     	;# 
  2608  0E95                     	;# 
  2609  0E9C                     	;# 
  2610  0E9D                     	;# 
  2611  0E9E                     	;# 
  2612  0E9F                     	;# 
  2613  0EA0                     	;# 
  2614  0EA1                     	;# 
  2615  0EA2                     	;# 
  2616  0EA3                     	;# 
  2617  0EA4                     	;# 
  2618  0EA5                     	;# 
  2619  0EA6                     	;# 
  2620  0EA7                     	;# 
  2621  0F0F                     	;# 
  2622  0F10                     	;# 
  2623  0F11                     	;# 
  2624  0F12                     	;# 
  2625  0F13                     	;# 
  2626  0F14                     	;# 
  2627  0F15                     	;# 
  2628  0F16                     	;# 
  2629  0F17                     	;# 
  2630  0F18                     	;# 
  2631  0F19                     	;# 
  2632  0F1A                     	;# 
  2633  0F1B                     	;# 
  2634  0F1C                     	;# 
  2635  0F1D                     	;# 
  2636  0F1E                     	;# 
  2637  0F1F                     	;# 
  2638  0F20                     	;# 
  2639  0F21                     	;# 
  2640  0F22                     	;# 
  2641  0F23                     	;# 
  2642  0F24                     	;# 
  2643  0F25                     	;# 
  2644  0F26                     	;# 
  2645  0F27                     	;# 
  2646  0F28                     	;# 
  2647  0F29                     	;# 
  2648  0F2A                     	;# 
  2649  0F2B                     	;# 
  2650  0F2C                     	;# 
  2651  0F2D                     	;# 
  2652  0F2E                     	;# 
  2653  0F2F                     	;# 
  2654  0F30                     	;# 
  2655  0F31                     	;# 
  2656  0F32                     	;# 
  2657  0F33                     	;# 
  2658  0F34                     	;# 
  2659  0F35                     	;# 
  2660  0F36                     	;# 
  2661  0F37                     	;# 
  2662  0FE4                     	;# 
  2663  0FE5                     	;# 
  2664  0FE6                     	;# 
  2665  0FE7                     	;# 
  2666  0FE8                     	;# 
  2667  0FE9                     	;# 
  2668  0FEA                     	;# 
  2669  0FEB                     	;# 
  2670  0FED                     	;# 
  2671  0FEE                     	;# 
  2672  0FEF                     	;# 
  2673                           
  2674                           	psect	stringtext
  2675  0800                     __pstringtext:	
  2676  0800                     _hexpowers:	
  2677  0800  3401               	retlw	1
  2678  0801  3400               	retlw	0
  2679  0802  3410               	retlw	16
  2680  0803  3400               	retlw	0
  2681  0804  3400               	retlw	0
  2682  0805  3401               	retlw	1
  2683  0806  3400               	retlw	0
  2684  0807  3410               	retlw	16
  2685  0808                     __end_of_hexpowers:	
  2686  0010                     _PIR1bits	set	16
  2687  001B                     _PR2	set	27
  2688  001E                     _T2CLKCON	set	30
  2689  001C                     _T2CON	set	28
  2690  001C                     _T2CONbits	set	28
  2691  001D                     _T2HLT	set	29
  2692  001D                     _T2HLTbits	set	29
  2693  001B                     _T2PR	set	27
  2694  001F                     _T2RST	set	31
  2695  001F                     _T2RSTbits	set	31
  2696  001A                     _T2TMR	set	26
  2697  001A                     _TMR2	set	26
  2698  005F                     _GIE	set	95
  2699  0072                     _RC2	set	114
  2700  009D                     _ADCON0	set	157
  2701  009D                     _ADCON0bits	set	157
  2702  009E                     _ADCON1	set	158
  2703  009F                     _ADCON2	set	159
  2704  009C                     _ADRESH	set	156
  2705  009B                     _ADRESL	set	155
  2706  0095                     _OPTION_REGbits	set	149
  2707  0099                     _OSCCON	set	153
  2708  009A                     _OSCSTAT	set	154
  2709  0098                     _OSCTUNE	set	152
  2710  008C                     _TRISA	set	140
  2711  008D                     _TRISB	set	141
  2712  008E                     _TRISC	set	142
  2713  010C                     _LATA	set	268
  2714  010D                     _LATB	set	269
  2715  010E                     _LATC	set	270
  2716  0862                     _LATA2	set	2146
  2717  0864                     _LATA4	set	2148
  2718  0875                     _LATC5	set	2165
  2719  018C                     _ANSELA	set	396
  2720  018D                     _ANSELB	set	397
  2721  018E                     _ANSELC	set	398
  2722  019F                     _BAUD1CON	set	415
  2723  0199                     _RC1REG	set	409
  2724  019D                     _RC1STA	set	413
  2725  019D                     _RC1STAbits	set	413
  2726  019C                     _SPBRGH	set	412
  2727  019B                     _SPBRGL	set	411
  2728  019A                     _TX1REG	set	410
  2729  019E                     _TX1STA	set	414
  2730  020D                     _WPUB	set	525
  2731  020E                     _WPUC	set	526
  2732  0E0F                     _PPSLOCK	set	3599
  2733  0E0F                     _PPSLOCKbits	set	3599
  2734  0E24                     _RXPPS	set	3620
  2735  0E9F                     _RB7PPS	set	3743
  2736  0808                     STR_6:	
  2737  0808  3453               	retlw	83	;'S'
  2738  0809  3455               	retlw	85	;'U'
  2739  080A  3457               	retlw	87	;'W'
  2740  080B  342C               	retlw	44	;','
  2741  080C  3432               	retlw	50	;'2'
  2742  080D  3441               	retlw	65	;'A'
  2743  080E  3431               	retlw	49	;'1'
  2744  080F  3443               	retlw	67	;'C'
  2745  0810  342C               	retlw	44	;','
  2746  0811  3430               	retlw	48	;'0'
  2747  0812  3431               	retlw	49	;'1'
  2748  0813  3425               	retlw	37	;'%'
  2749  0814  3430               	retlw	48	;'0'
  2750  0815  3432               	retlw	50	;'2'
  2751  0816  3478               	retlw	120	;'x'
  2752  0817  3430               	retlw	48	;'0'
  2753  0818  3430               	retlw	48	;'0'
  2754  0819  3430               	retlw	48	;'0'
  2755  081A  3430               	retlw	48	;'0'
  2756  081B  3430               	retlw	48	;'0'
  2757  081C  3430               	retlw	48	;'0'
  2758  081D  340A               	retlw	10
  2759  081E  3400               	retlw	0
  2760  081F                     STR_8:	
  2761  081F  3430               	retlw	48	;'0'
  2762  0820  3431               	retlw	49	;'1'
  2763  0821  3432               	retlw	50	;'2'
  2764  0822  3433               	retlw	51	;'3'
  2765  0823  3434               	retlw	52	;'4'
  2766  0824  3435               	retlw	53	;'5'
  2767  0825  3436               	retlw	54	;'6'
  2768  0826  3437               	retlw	55	;'7'
  2769  0827  3438               	retlw	56	;'8'
  2770  0828  3439               	retlw	57	;'9'
  2771  0829  3461               	retlw	97	;'a'
  2772  082A  3462               	retlw	98	;'b'
  2773  082B  3463               	retlw	99	;'c'
  2774  082C  3464               	retlw	100	;'d'
  2775  082D  3465               	retlw	101	;'e'
  2776  082E  3466               	retlw	102	;'f'
  2777  082F  3400               	retlw	0
  2778  0830                     STR_7:	
  2779  0830  3453               	retlw	83	;'S'
  2780  0831  3455               	retlw	85	;'U'
  2781  0832  3457               	retlw	87	;'W'
  2782  0833  342C               	retlw	44	;','
  2783  0834  3432               	retlw	50	;'2'
  2784  0835  3441               	retlw	65	;'A'
  2785  0836  3431               	retlw	49	;'1'
  2786  0837  3444               	retlw	68	;'D'
  2787  0838  342C               	retlw	44	;','
  2788  0839  3425               	retlw	37	;'%'
  2789  083A  3430               	retlw	48	;'0'
  2790  083B  3432               	retlw	50	;'2'
  2791  083C  3478               	retlw	120	;'x'
  2792  083D  340A               	retlw	10
  2793  083E  3400               	retlw	0
  2794  083F                     STR_4:	
  2795  083F  3453               	retlw	83	;'S'
  2796  0840  342D               	retlw	45	;'-'
  2797  0841  342C               	retlw	44	;','
  2798  0842  344D               	retlw	77	;'M'
  2799  0843  3461               	retlw	97	;'a'
  2800  0844  3473               	retlw	115	;'s'
  2801  0845  3474               	retlw	116	;'t'
  2802  0846  3465               	retlw	101	;'e'
  2803  0847  3472               	retlw	114	;'r'
  2804  0848  3473               	retlw	115	;'s'
  2805  0849  3431               	retlw	49	;'1'
  2806  084A  3436               	retlw	54	;'6'
  2807  084B  3400               	retlw	0
  2808  084C                     STR_2:	
  2809  084C  3453               	retlw	83	;'S'
  2810  084D  3453               	retlw	83	;'S'
  2811  084E  342C               	retlw	44	;','
  2812  084F  3431               	retlw	49	;'1'
  2813  0850  3430               	retlw	48	;'0'
  2814  0851  3430               	retlw	48	;'0'
  2815  0852  3430               	retlw	48	;'0'
  2816  0853  3430               	retlw	48	;'0'
  2817  0854  3430               	retlw	48	;'0'
  2818  0855  3430               	retlw	48	;'0'
  2819  0856  3430               	retlw	48	;'0'
  2820  0857  3400               	retlw	0
  2821  0858                     STR_3:	
  2822  0858  3453               	retlw	83	;'S'
  2823  0859  3452               	retlw	82	;'R'
  2824  085A  342C               	retlw	44	;','
  2825  085B  3432               	retlw	50	;'2'
  2826  085C  3430               	retlw	48	;'0'
  2827  085D  3430               	retlw	48	;'0'
  2828  085E  3430               	retlw	48	;'0'
  2829  085F  3430               	retlw	48	;'0'
  2830  0860  3430               	retlw	48	;'0'
  2831  0861  3430               	retlw	48	;'0'
  2832  0862  3430               	retlw	48	;'0'
  2833  0863  3400               	retlw	0
  2834  0864                     STR_1:	
  2835  0864  3453               	retlw	83	;'S'
  2836  0865  3446               	retlw	70	;'F'
  2837  0866  342C               	retlw	44	;','
  2838  0867  3432               	retlw	50	;'2'
  2839  0868  3400               	retlw	0
  2840  0869                     STR_5:	
  2841  0869  3452               	retlw	82	;'R'
  2842  086A  342C               	retlw	44	;','
  2843  086B  3431               	retlw	49	;'1'
  2844  086C  3400               	retlw	0
  2845                           
  2846                           ; #config settings
  2847  0000                     
  2848                           	psect	cinit
  2849  07F6                     start_initialization:	
  2850  07F6                     __initialization:	
  2851                           
  2852                           ; Clear objects allocated to BANK0
  2853  07F6  3020               	movlw	low __pbssBANK0
  2854  07F7  0084               	movwf	4
  2855  07F8  3000               	movlw	high __pbssBANK0
  2856  07F9  0085               	movwf	5
  2857  07FA  3020               	movlw	32
  2858  07FB  3184  24EE         	fcall	clear_ram0
  2859  07FD                     end_of_initialization:	
  2860                           ;End of C runtime variable initialization code
  2861                           
  2862  07FD                     __end_of__initialization:	
  2863  07FD  0020               	movlb	0
  2864  07FE  3186  2E42         	ljmp	_main	;jump to C main() function
  2865                           
  2866                           	psect	bssBANK0
  2867  0020                     __pbssBANK0:	
  2868  0020                     _rxBuffer:	
  2869  0020                     	ds	32
  2870                           
  2871                           	psect	clrtext
  2872  04EE                     clear_ram0:	
  2873                           ;	Called with FSR0 containing the base address, and
  2874                           ;	WREG with the size to clear
  2875                           
  2876  04EE  0064               	clrwdt	;clear the watchdog before getting into this loop
  2877  04EF                     clrloop0:	
  2878  04EF  0180               	clrf	0	;clear RAM location pointed to by FSR
  2879  04F0  3101               	addfsr 0,1
  2880  04F1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2881  04F2  2CEF               	goto	clrloop0	;have we reached the end yet?
  2882  04F3  3400               	retlw	0	;all done for this memory range, return
  2883                           
  2884                           	psect	cstackCOMMON
  2885  0070                     __pcstackCOMMON:	
  2886  0070                     ?_isdigit:	
  2887  0070                     ?_TMR2_Start:	
  2888                           ; 1 bit 
  2889                           
  2890  0070                     ??_TMR2_Start:	
  2891                           ; 1 bytes @ 0x0
  2892                           
  2893  0070                     ?_OSCILLATOR_Initialize:	
  2894                           ; 1 bytes @ 0x0
  2895                           
  2896  0070                     ??_OSCILLATOR_Initialize:	
  2897                           ; 1 bytes @ 0x0
  2898                           
  2899  0070                     ?_ADC1_Initialize:	
  2900                           ; 1 bytes @ 0x0
  2901                           
  2902  0070                     ??_ADC1_Initialize:	
  2903                           ; 1 bytes @ 0x0
  2904                           
  2905  0070                     ?_mygets:	
  2906                           ; 1 bytes @ 0x0
  2907                           
  2908  0070                     ??_mygets:	
  2909                           ; 1 bytes @ 0x0
  2910                           
  2911  0070                     ??_isdigit:	
  2912                           ; 1 bytes @ 0x0
  2913                           
  2914  0070                     ?_TMR2_Initialize:	
  2915                           ; 1 bytes @ 0x0
  2916                           
  2917  0070                     ??_TMR2_Initialize:	
  2918                           ; 1 bytes @ 0x0
  2919                           
  2920  0070                     ?_TMR2_HasOverflowOccured:	
  2921                           ; 1 bytes @ 0x0
  2922                           
  2923  0070                     ??_TMR2_HasOverflowOccured:	
  2924                           ; 1 bytes @ 0x0
  2925                           
  2926  0070                     ?_EUSART_Initialize:	
  2927                           ; 1 bytes @ 0x0
  2928                           
  2929  0070                     ??_EUSART_Initialize:	
  2930                           ; 1 bytes @ 0x0
  2931                           
  2932  0070                     ?_EUSART_Read:	
  2933                           ; 1 bytes @ 0x0
  2934                           
  2935  0070                     ??_EUSART_Read:	
  2936                           ; 1 bytes @ 0x0
  2937                           
  2938  0070                     ?_EUSART_Write:	
  2939                           ; 1 bytes @ 0x0
  2940                           
  2941  0070                     ??_EUSART_Write:	
  2942                           ; 1 bytes @ 0x0
  2943                           
  2944  0070                     ?_getch:	
  2945                           ; 1 bytes @ 0x0
  2946                           
  2947  0070                     ??_getch:	
  2948                           ; 1 bytes @ 0x0
  2949                           
  2950  0070                     ?_putch:	
  2951                           ; 1 bytes @ 0x0
  2952                           
  2953  0070                     ?_PIN_MANAGER_Initialize:	
  2954                           ; 1 bytes @ 0x0
  2955                           
  2956  0070                     ??_PIN_MANAGER_Initialize:	
  2957                           ; 1 bytes @ 0x0
  2958                           
  2959  0070                     ?_SYSTEM_Initialize:	
  2960                           ; 1 bytes @ 0x0
  2961                           
  2962  0070                     ?_main:	
  2963                           ; 1 bytes @ 0x0
  2964                           
  2965  0070                     ?_ADC1_GetConversion:	
  2966                           ; 1 bytes @ 0x0
  2967                           
  2968  0070                     ?___wmul:	
  2969                           ; 2 bytes @ 0x0
  2970                           
  2971  0070                     ?___lwdiv:	
  2972                           ; 2 bytes @ 0x0
  2973                           
  2974  0070                     TMR2_HasOverflowOccured@status:	
  2975                           ; 2 bytes @ 0x0
  2976                           
  2977  0070                     EUSART_Write@txData:	
  2978                           ; 1 bytes @ 0x0
  2979                           
  2980  0070                     PIN_MANAGER_Initialize@state:	
  2981                           ; 1 bytes @ 0x0
  2982                           
  2983  0070                     _isdigit$684:	
  2984                           ; 1 bytes @ 0x0
  2985                           
  2986  0070                     ___wmul@multiplier:	
  2987                           ; 1 bytes @ 0x0
  2988                           
  2989  0070                     ___lwdiv@divisor:	
  2990                           ; 2 bytes @ 0x0
  2991                           
  2992                           
  2993                           ; 2 bytes @ 0x0
  2994  0070                     	ds	1
  2995  0071                     ??_putch:	
  2996  0071                     ??_SYSTEM_Initialize:	
  2997                           ; 1 bytes @ 0x1
  2998                           
  2999  0071                     putch@txData:	
  3000                           ; 1 bytes @ 0x1
  3001                           
  3002  0071                     mygets@c:	
  3003                           ; 1 bytes @ 0x1
  3004                           
  3005  0071                     isdigit@c:	
  3006                           ; 1 bytes @ 0x1
  3007                           
  3008                           
  3009                           ; 1 bytes @ 0x1
  3010  0071                     	ds	1
  3011  0072                     ?_cputs:	
  3012  0072                     ??_ADC1_GetConversion:	
  3013                           ; 1 bytes @ 0x2
  3014                           
  3015  0072                     mygets@i:	
  3016                           ; 1 bytes @ 0x2
  3017                           
  3018  0072                     ___wmul@multiplicand:	
  3019                           ; 1 bytes @ 0x2
  3020                           
  3021  0072                     ___lwdiv@dividend:	
  3022                           ; 2 bytes @ 0x2
  3023                           
  3024  0072                     cputs@s:	
  3025                           ; 2 bytes @ 0x2
  3026                           
  3027                           
  3028                           ; 2 bytes @ 0x2
  3029  0072                     	ds	1
  3030  0073                     ADC1_GetConversion@channel:	
  3031  0073                     mygets@p:	
  3032                           ; 1 bytes @ 0x3
  3033                           
  3034                           
  3035                           ; 1 bytes @ 0x3
  3036  0073                     	ds	1
  3037  0074                     ??_cputs:	
  3038  0074                     ??___wmul:	
  3039                           ; 1 bytes @ 0x4
  3040                           
  3041  0074                     ??___lwdiv:	
  3042                           ; 1 bytes @ 0x4
  3043                           
  3044  0074                     ___wmul@product:	
  3045                           ; 1 bytes @ 0x4
  3046                           
  3047                           
  3048                           ; 2 bytes @ 0x4
  3049  0074                     	ds	1
  3050  0075                     ?_puts:	
  3051  0075                     ___lwdiv@quotient:	
  3052                           ; 2 bytes @ 0x5
  3053                           
  3054  0075                     puts@s:	
  3055                           ; 2 bytes @ 0x5
  3056                           
  3057                           
  3058                           ; 2 bytes @ 0x5
  3059  0075                     	ds	2
  3060  0077                     ?_sendCMD:	
  3061  0077                     ??_puts:	
  3062                           ; 1 bytes @ 0x7
  3063                           
  3064  0077                     ___lwdiv@counter:	
  3065                           ; 1 bytes @ 0x7
  3066                           
  3067  0077                     sendCMD@cmd:	
  3068                           ; 1 bytes @ 0x7
  3069                           
  3070                           
  3071                           ; 2 bytes @ 0x7
  3072  0077                     	ds	1
  3073  0078                     ?_printf:	
  3074  0078                     printf@f:	
  3075                           ; 2 bytes @ 0x8
  3076                           
  3077                           
  3078                           ; 2 bytes @ 0x8
  3079  0078                     	ds	1
  3080  0079                     ??_sendCMD:	
  3081                           
  3082                           ; 1 bytes @ 0x9
  3083  0079                     	ds	3
  3084  007C                     main@value:	
  3085                           
  3086                           ; 1 bytes @ 0xC
  3087  007C                     	ds	1
  3088  007D                     main@time:	
  3089                           
  3090                           ; 1 bytes @ 0xD
  3091  007D                     	ds	1
  3092                           
  3093                           	psect	cstackBANK0
  3094  0040                     __pcstackBANK0:	
  3095  0040                     ??_printf:	
  3096                           
  3097                           ; 1 bytes @ 0x0
  3098  0040                     	ds	4
  3099  0044                     printf@idx:	
  3100                           
  3101                           ; 1 bytes @ 0x4
  3102  0044                     	ds	1
  3103  0045                     printf@ap:	
  3104                           
  3105                           ; 1 bytes @ 0x5
  3106  0045                     	ds	1
  3107  0046                     printf@flag:	
  3108                           
  3109                           ; 1 bytes @ 0x6
  3110  0046                     	ds	1
  3111  0047                     printf@val:	
  3112                           
  3113                           ; 2 bytes @ 0x7
  3114  0047                     	ds	2
  3115  0049                     printf@prec:	
  3116                           
  3117                           ; 1 bytes @ 0x9
  3118  0049                     	ds	1
  3119  004A                     printf@width:	
  3120                           
  3121                           ; 2 bytes @ 0xA
  3122  004A                     	ds	2
  3123  004C                     printf@c:	
  3124                           
  3125                           ; 1 bytes @ 0xC
  3126  004C                     	ds	1
  3127  004D                     ??_main:	
  3128                           
  3129                           ; 1 bytes @ 0xD
  3130  004D                     	ds	3
  3131                           
  3132                           	psect	maintext
  3133  0642                     __pmaintext:	
  3134 ;;
  3135 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3136 ;;
  3137 ;; *************** function _main *****************
  3138 ;; Defined at:
  3139 ;;		line 58 in file "main.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  value           1   12[COMMON] unsigned char 
  3144 ;;  time            1   13[COMMON] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : B1F/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3156 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3157 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;Total ram usage:        5 bytes
  3159 ;; Hardware stack levels required when called:    5
  3160 ;; This function calls:
  3161 ;;		_ADC1_GetConversion
  3162 ;;		_SYSTEM_Initialize
  3163 ;;		_TMR2_HasOverflowOccured
  3164 ;;		_mygets
  3165 ;;		_printf
  3166 ;;		_sendCMD
  3167 ;; This function is called by:
  3168 ;;		Startup code after reset
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           
  3173                           ;psect for function _main
  3174  0642                     _main:	
  3175                           
  3176                           ;main.c: 61: SYSTEM_Initialize();
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3180  0642  3185  2554  3186   	fcall	_SYSTEM_Initialize
  3181                           
  3182                           ;main.c: 64: do { LATC5 = 1; } while(0);
  3183  0645  0022               	movlb	2	; select bank2
  3184  0646  168E               	bsf	14,5	;volatile
  3185                           
  3186                           ;main.c: 65: do { LATA4 = 1; } while(0);
  3187  0647  160C               	bsf	12,4	;volatile
  3188                           
  3189                           ;main.c: 66: mygets();
  3190  0648  3185  25AC  3186   	fcall	_mygets
  3191                           
  3192                           ;main.c: 67: sendCMD( "SF,2");
  3193  064B  3064               	movlw	low (STR_1| (0+32768))
  3194  064C  00F7               	movwf	sendCMD@cmd
  3195  064D  3088               	movlw	high (STR_1| (0+32768))
  3196  064E  00F8               	movwf	sendCMD@cmd+1
  3197  064F  3185  2519  3186   	fcall	_sendCMD
  3198                           
  3199                           ;main.c: 68: sendCMD( "SS,10000000");
  3200  0652  304C               	movlw	low (STR_2| (0+32768))
  3201  0653  00F7               	movwf	sendCMD@cmd
  3202  0654  3088               	movlw	high (STR_2| (0+32768))
  3203  0655  00F8               	movwf	sendCMD@cmd+1
  3204  0656  3185  2519  3186   	fcall	_sendCMD
  3205                           
  3206                           ;main.c: 69: sendCMD( "SR,20000000");
  3207  0659  3058               	movlw	low (STR_3| (0+32768))
  3208  065A  00F7               	movwf	sendCMD@cmd
  3209  065B  3088               	movlw	high (STR_3| (0+32768))
  3210  065C  00F8               	movwf	sendCMD@cmd+1
  3211  065D  3185  2519  3186   	fcall	_sendCMD
  3212                           
  3213                           ;main.c: 70: sendCMD( "S-,Masters16");
  3214  0660  303F               	movlw	low (STR_4| (0+32768))
  3215  0661  00F7               	movwf	sendCMD@cmd
  3216  0662  3088               	movlw	high (STR_4| (0+32768))
  3217  0663  00F8               	movwf	sendCMD@cmd+1
  3218  0664  3185  2519  3186   	fcall	_sendCMD
  3219                           
  3220                           ;main.c: 71: sendCMD( "R,1");
  3221  0667  3069               	movlw	low (STR_5| (0+32768))
  3222  0668  00F7               	movwf	sendCMD@cmd
  3223  0669  3088               	movlw	high (STR_5| (0+32768))
  3224  066A  00F8               	movwf	sendCMD@cmd+1
  3225  066B  3185  2519  3186   	fcall	_sendCMD
  3226                           
  3227                           ;main.c: 72: mygets();
  3228  066E  3185  25AC  3186   	fcall	_mygets
  3229                           
  3230                           ;main.c: 73: _delay((unsigned long)((640)*(16000000/4000.0)));
  3231  0671  300D               	movlw	13
  3232  0672  0020               	movlb	0	; select bank0
  3233  0673  00CF               	movwf	??_main+2
  3234  0674  30FD               	movlw	253
  3235  0675  00CE               	movwf	??_main+1
  3236  0676  30AD               	movlw	173
  3237  0677  00CD               	movwf	??_main
  3238  0678                     u767:	
  3239  0678  0BCD               	decfsz	??_main,f
  3240  0679  2E78               	goto	u767
  3241  067A  0BCE               	decfsz	??_main+1,f
  3242  067B  2E78               	goto	u767
  3243  067C  0BCF               	decfsz	??_main+2,f
  3244  067D  2E78               	goto	u767
  3245  067E  0000               	nop
  3246  067F                     l220:	
  3247                           ;main.c: 74: while( !RC2);
  3248                           
  3249  067F  0020               	movlb	0	; select bank0
  3250  0680  1D0E               	btfss	14,2	;volatile
  3251  0681  2E7F               	goto	l220
  3252  0682                     l1229:	
  3253                           ;main.c: 76: while (1)
  3254                           
  3255                           
  3256                           ;main.c: 77: {
  3257                           ;main.c: 78: uint8_t time;
  3258                           ;main.c: 80: if ( TMR2_HasOverflowOccured()) {
  3259  0682  3185  2505  3186   	fcall	_TMR2_HasOverflowOccured
  3260  0685  3A00               	xorlw	0
  3261  0686  1903               	skipnz
  3262  0687  2E8D               	goto	l1233
  3263                           
  3264                           ;main.c: 81: time++;
  3265  0688  3001               	movlw	1
  3266  0689  0020               	movlb	0	; select bank0
  3267  068A  00CD               	movwf	??_main
  3268  068B  084D               	movf	??_main,w
  3269  068C  07FD               	addwf	main@time,f
  3270  068D                     l1233:	
  3271                           
  3272                           ;main.c: 82: }
  3273                           ;main.c: 84: if ( time >= 50)
  3274  068D  3032               	movlw	50
  3275  068E  027D               	subwf	main@time,w
  3276  068F  1C03               	skipc
  3277  0690  2E82               	goto	l1229
  3278                           
  3279                           ;main.c: 85: {
  3280                           ;main.c: 86: uint8_t value;
  3281                           ;main.c: 87: time = 0;
  3282  0691  01FD               	clrf	main@time
  3283                           
  3284                           ;main.c: 88: do { LATA2 = ~LATA2; } while(0);
  3285  0692  3004               	movlw	4
  3286  0693  0022               	movlb	2	; select bank2
  3287  0694  068C               	xorwf	12,f
  3288                           
  3289                           ;main.c: 90: value = ADC1_GetConversion(POT)>>9;
  3290  0695  3004               	movlw	4
  3291  0696  3185  2577  3186   	fcall	_ADC1_GetConversion
  3292  0699  0870               	movf	?_ADC1_GetConversion,w
  3293  069A  0020               	movlb	0	; select bank0
  3294  069B  00CD               	movwf	??_main
  3295  069C  0871               	movf	?_ADC1_GetConversion+1,w
  3296  069D  00CE               	movwf	??_main+1
  3297  069E  3009               	movlw	9
  3298  069F                     u755:	
  3299  069F  36CE               	lsrf	??_main+1,f
  3300  06A0  0CCD               	rrf	??_main,f
  3301  06A1  0B89               	decfsz	9,f
  3302  06A2  2E9F               	goto	u755
  3303  06A3  084D               	movf	??_main,w
  3304  06A4  00CF               	movwf	??_main+2
  3305  06A5  084F               	movf	??_main+2,w
  3306  06A6  00FC               	movwf	main@value
  3307                           
  3308                           ;main.c: 93: printf( "SUW,2A1C,01%02x000000\n",value);
  3309  06A7  3008               	movlw	low (STR_6| (0+32768))
  3310  06A8  00F8               	movwf	printf@f
  3311  06A9  3088               	movlw	high (STR_6| (0+32768))
  3312  06AA  00F9               	movwf	printf@f+1
  3313  06AB  087C               	movf	main@value,w
  3314  06AC  00CD               	movwf	??_main
  3315  06AD  01CE               	clrf	??_main+1
  3316  06AE  084D               	movf	??_main,w
  3317  06AF  00FA               	movwf	?_printf+2
  3318  06B0  084E               	movf	??_main+1,w
  3319  06B1  00FB               	movwf	?_printf+3
  3320  06B2  3186  26C7  3186   	fcall	_printf
  3321                           
  3322                           ;main.c: 94: mygets();
  3323  06B5  3185  25AC  3186   	fcall	_mygets
  3324                           
  3325                           ;main.c: 97: printf( "SUW,2A1D,%02x\n",2);
  3326  06B8  3030               	movlw	low (STR_7| (0+32768))
  3327  06B9  00F8               	movwf	printf@f
  3328  06BA  3088               	movlw	high (STR_7| (0+32768))
  3329  06BB  00F9               	movwf	printf@f+1
  3330  06BC  3002               	movlw	2
  3331  06BD  00FA               	movwf	?_printf+2
  3332  06BE  3000               	movlw	0
  3333  06BF  00FB               	movwf	?_printf+3
  3334  06C0  3186  26C7  3186   	fcall	_printf
  3335                           
  3336                           ;main.c: 98: mygets();
  3337  06C3  3185  25AC  3186   	fcall	_mygets
  3338  06C6  2E82               	goto	l1229
  3339  06C7                     __end_of_main:	
  3340                           
  3341                           	psect	text1
  3342  0519                     __ptext1:	
  3343 ;; *************** function _sendCMD *****************
  3344 ;; Defined at:
  3345 ;;		line 115 in file "main.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  cmd             2    7[COMMON] PTR const unsigned char 
  3348 ;;		 -> STR_5(4), STR_4(13), STR_3(12), STR_2(12), 
  3349 ;;		 -> STR_1(5), 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3365 ;;Total ram usage:        2 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    4
  3368 ;; This function calls:
  3369 ;;		_mygets
  3370 ;;		_puts
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function _sendCMD
  3378  0519                     _sendCMD:	
  3379                           
  3380                           ;main.c: 117: puts( cmd);
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _sendCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3384  0519  0878               	movf	sendCMD@cmd+1,w
  3385  051A  00F6               	movwf	puts@s+1
  3386  051B  0877               	movf	sendCMD@cmd,w
  3387  051C  00F5               	movwf	puts@s
  3388  051D  3185  252E  3185   	fcall	_puts
  3389                           
  3390                           ;main.c: 118: mygets();
  3391  0520  3185  25AC         	fcall	_mygets
  3392  0522  0008               	return
  3393  0523                     __end_of_sendCMD:	
  3394                           
  3395                           	psect	text2
  3396  052E                     __ptext2:	
  3397 ;; *************** function _puts *****************
  3398 ;; Defined at:
  3399 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\puts.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  s               2    5[COMMON] PTR const unsigned char 
  3402 ;;		 -> STR_5(4), STR_4(13), STR_3(12), STR_2(12), 
  3403 ;;		 -> STR_1(5), 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  2    5[COMMON] int 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;Total ram usage:        2 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    3
  3422 ;; This function calls:
  3423 ;;		_cputs
  3424 ;;		_putch
  3425 ;; This function is called by:
  3426 ;;		_sendCMD
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           
  3431                           ;psect for function _puts
  3432  052E                     _puts:	
  3433                           
  3434                           ;incstack = 0
  3435                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3436  052E  0876               	movf	puts@s+1,w
  3437  052F  00F3               	movwf	cputs@s+1
  3438  0530  0875               	movf	puts@s,w
  3439  0531  00F2               	movwf	cputs@s
  3440  0532  3185  2563  3185   	fcall	_cputs
  3441  0535  300A               	movlw	10
  3442  0536  3184  24E3         	fcall	_putch
  3443  0538  0008               	return
  3444  0539                     __end_of_puts:	
  3445                           
  3446                           	psect	text3
  3447  0563                     __ptext3:	
  3448 ;; *************** function _cputs *****************
  3449 ;; Defined at:
  3450 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\cputs.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  s               2    2[COMMON] PTR const unsigned char 
  3453 ;;		 -> STR_5(4), STR_4(13), STR_3(12), STR_2(12), 
  3454 ;;		 -> STR_1(5), 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3470 ;;Total ram usage:        3 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    2
  3473 ;; This function calls:
  3474 ;;		_putch
  3475 ;; This function is called by:
  3476 ;;		_puts
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           
  3481                           ;psect for function _cputs
  3482  0563                     _cputs:	
  3483  0563                     l1055:	
  3484                           ;incstack = 0
  3485                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3486                           
  3487  0563  0872               	movf	cputs@s,w
  3488  0564  0084               	movwf	4
  3489  0565  0873               	movf	cputs@s+1,w
  3490  0566  0085               	movwf	5
  3491  0567  0012               	moviw fsr0++
  3492  0568  1903               	btfsc	3,2
  3493  0569  0008               	return
  3494  056A  0872               	movf	cputs@s,w
  3495  056B  0084               	movwf	4
  3496  056C  0873               	movf	cputs@s+1,w
  3497  056D  0085               	movwf	5
  3498  056E  0800               	movf	0,w	;code access
  3499  056F  3184  24E3  3185   	fcall	_putch
  3500  0572  3001               	movlw	1
  3501  0573  07F2               	addwf	cputs@s,f
  3502  0574  3000               	movlw	0
  3503  0575  3DF3               	addwfc	cputs@s+1,f
  3504  0576  2D63               	goto	l1055
  3505  0577                     __end_of_cputs:	
  3506                           
  3507                           	psect	text4
  3508  05AC                     __ptext4:	
  3509 ;; *************** function _mygets *****************
  3510 ;; Defined at:
  3511 ;;		line 105 in file "main.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  p               1    3[COMMON] PTR unsigned char 
  3516 ;;		 -> rxBuffer(32), 
  3517 ;;  i               1    2[COMMON] unsigned char 
  3518 ;;  c               1    1[COMMON] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;Total ram usage:        4 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    2
  3535 ;; This function calls:
  3536 ;;		_getch
  3537 ;; This function is called by:
  3538 ;;		_main
  3539 ;;		_sendCMD
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           
  3544                           ;psect for function _mygets
  3545  05AC                     _mygets:	
  3546                           
  3547                           ;main.c: 107: char c, i=0;
  3548                           
  3549                           ;incstack = 0
  3550                           ; Regs used in _mygets: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3551  05AC  01F2               	clrf	mygets@i
  3552                           
  3553                           ;main.c: 108: char *p = rxBuffer;
  3554  05AD  3020               	movlw	(low (_rxBuffer| 0))& (0+255)
  3555  05AE  00F0               	movwf	??_mygets
  3556  05AF  0870               	movf	??_mygets,w
  3557  05B0  00F3               	movwf	mygets@p
  3558                           
  3559                           ;main.c: 109: while ( (i++ < sizeof(rxBuffer)) && (( c = getch()) != '\n')) {
  3560  05B1  2DBD               	goto	l803
  3561  05B2                     l799:	
  3562                           
  3563                           ;main.c: 110: *p++ = c;
  3564  05B2  0871               	movf	mygets@c,w
  3565  05B3  00F0               	movwf	??_mygets
  3566  05B4  0873               	movf	mygets@p,w
  3567  05B5  0086               	movwf	6
  3568  05B6  0187               	clrf	7
  3569  05B7  0870               	movf	??_mygets,w
  3570  05B8  0081               	movwf	1
  3571  05B9  3001               	movlw	1
  3572  05BA  00F0               	movwf	??_mygets
  3573  05BB  0870               	movf	??_mygets,w
  3574  05BC  07F3               	addwf	mygets@p,f
  3575  05BD                     l803:	
  3576  05BD  0872               	movf	mygets@i,w
  3577  05BE  0AF2               	incf	mygets@i,f
  3578  05BF  00F0               	movwf	??_mygets
  3579  05C0  3020               	movlw	32
  3580  05C1  0270               	subwf	??_mygets,w
  3581  05C2  1803               	skipnc
  3582  05C3  2DCE               	goto	l807
  3583  05C4  3184  24E0  3185   	fcall	_getch
  3584  05C7  00F0               	movwf	??_mygets
  3585  05C8  0870               	movf	??_mygets,w
  3586  05C9  00F1               	movwf	mygets@c
  3587  05CA  300A               	movlw	10
  3588  05CB  0671               	xorwf	mygets@c,w
  3589  05CC  1D03               	btfss	3,2
  3590  05CD  2DB2               	goto	l799
  3591  05CE                     l807:	
  3592                           
  3593                           ;main.c: 111: }
  3594                           ;main.c: 112: *p = '\0';
  3595  05CE  0873               	movf	mygets@p,w
  3596  05CF  0086               	movwf	6
  3597  05D0  0187               	clrf	7
  3598  05D1  0181               	clrf	1
  3599  05D2  0008               	return
  3600  05D3                     __end_of_mygets:	
  3601                           
  3602                           	psect	text5
  3603  04E0                     __ptext5:	
  3604 ;; *************** function _getch *****************
  3605 ;; Defined at:
  3606 ;;		line 98 in file "mcc_generated_files/eusart.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      unsigned char 
  3613 ;; Registers used:
  3614 ;;		wreg, pclath, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;Total ram usage:        0 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    1
  3627 ;; This function calls:
  3628 ;;		_EUSART_Read
  3629 ;; This function is called by:
  3630 ;;		_mygets
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           
  3635                           ;psect for function _getch
  3636  04E0                     _getch:	
  3637                           
  3638                           ;eusart.c: 99: return EUSART_Read();
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in _getch: [wreg+pclath+cstack]
  3642  04E0  3185  250F         	fcall	_EUSART_Read
  3643  04E2  0008               	return
  3644  04E3                     __end_of_getch:	
  3645                           
  3646                           	psect	text6
  3647  050F                     __ptext6:	
  3648 ;; *************** function _EUSART_Read *****************
  3649 ;; Defined at:
  3650 ;;		line 76 in file "mcc_generated_files/eusart.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      unsigned char 
  3657 ;; Registers used:
  3658 ;;		wreg
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3668 ;;Total ram usage:        0 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_getch
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _EUSART_Read
  3679  050F                     _EUSART_Read:	
  3680  050F                     l78:	
  3681                           ;eusart.c: 78: while (!PIR1bits.RCIF) {
  3682                           
  3683                           ;incstack = 0
  3684                           ; Regs used in _EUSART_Read: [wreg]
  3685                           
  3686  050F  0020               	movlb	0	; select bank0
  3687  0510  1E90               	btfss	16,5	;volatile
  3688  0511  2D0F               	goto	l78
  3689                           
  3690                           ;eusart.c: 79: }
  3691                           ;eusart.c: 81: if (1 == RC1STAbits.OERR) {
  3692  0512  0023               	movlb	3	; select bank3
  3693  0513  1C9D               	btfss	29,1	;volatile
  3694  0514  2D17               	goto	l701
  3695                           
  3696                           ;eusart.c: 84: RC1STAbits.CREN = 0;
  3697  0515  121D               	bcf	29,4	;volatile
  3698                           
  3699                           ;eusart.c: 85: RC1STAbits.CREN = 1;
  3700  0516  161D               	bsf	29,4	;volatile
  3701  0517                     l701:	
  3702                           
  3703                           ;eusart.c: 86: }
  3704                           ;eusart.c: 88: return RC1REG;
  3705  0517  0819               	movf	25,w	;volatile
  3706  0518  0008               	return
  3707  0519                     __end_of_EUSART_Read:	
  3708                           
  3709                           	psect	text7
  3710  06C7                     __ptext7:	
  3711 ;; *************** function _printf *****************
  3712 ;; Defined at:
  3713 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  f               2    8[COMMON] PTR const unsigned char 
  3716 ;;		 -> STR_7(15), STR_6(23), 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  idx             1    4[BANK0 ] unsigned char 
  3719 ;;  tmpval          4    0        struct .
  3720 ;;  width           2   10[BANK0 ] int 
  3721 ;;  val             2    7[BANK0 ] unsigned int 
  3722 ;;  cp              2    0        PTR const unsigned char 
  3723 ;;  len             2    0        unsigned int 
  3724 ;;  c               1   12[BANK0 ] char 
  3725 ;;  prec            1    9[BANK0 ] char 
  3726 ;;  flag            1    6[BANK0 ] unsigned char 
  3727 ;;  ap              1    5[BANK0 ] PTR void [1]
  3728 ;;		 -> ?_printf(2), 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  2    8[COMMON] int 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3740 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3741 ;;      Totals:         4      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3742 ;;Total ram usage:       17 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    2
  3745 ;; This function calls:
  3746 ;;		___lwdiv
  3747 ;;		___wmul
  3748 ;;		_isdigit
  3749 ;;		_putch
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           
  3756                           ;psect for function _printf
  3757  06C7                     _printf:	
  3758                           
  3759                           ;doprnt.c: 466: va_list ap;
  3760                           ;doprnt.c: 499: signed char c;
  3761                           ;doprnt.c: 501: int width;
  3762                           ;doprnt.c: 506: signed char prec;
  3763                           ;doprnt.c: 508: unsigned char flag;
  3764                           ;doprnt.c: 523: union {
  3765                           ;doprnt.c: 524: unsigned long vd;
  3766                           ;doprnt.c: 525: double integ;
  3767                           ;doprnt.c: 526: } tmpval;
  3768                           ;doprnt.c: 528: unsigned int val;
  3769                           ;doprnt.c: 529: unsigned len;
  3770                           ;doprnt.c: 530: const char * cp;
  3771                           ;doprnt.c: 533: *ap = __va_start();
  3772                           
  3773                           ;incstack = 0
  3774                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3775  06C7  307A               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3776  06C8  0020               	movlb	0	; select bank0
  3777  06C9  00C0               	movwf	??_printf
  3778  06CA  0840               	movf	??_printf,w
  3779  06CB  00C5               	movwf	printf@ap
  3780  06CC                     l1205:	
  3781                           ;doprnt.c: 536: while(c = *f++) {
  3782                           
  3783  06CC  0879               	movf	printf@f+1,w
  3784  06CD  0020               	movlb	0	; select bank0
  3785  06CE  00C1               	movwf	??_printf+1
  3786  06CF  0878               	movf	printf@f,w
  3787  06D0  00C0               	movwf	??_printf
  3788  06D1  0AF8               	incf	printf@f,f
  3789  06D2  1903               	skipnz
  3790  06D3  0AF9               	incf	printf@f+1,f
  3791  06D4  0840               	movf	??_printf,w
  3792  06D5  0084               	movwf	4
  3793  06D6  0841               	movf	??_printf+1,w
  3794  06D7  0085               	movwf	5
  3795  06D8  0800               	movf	0,w	;code access
  3796  06D9  00C2               	movwf	??_printf+2
  3797  06DA  0842               	movf	??_printf+2,w
  3798  06DB  00CC               	movwf	printf@c
  3799  06DC  084C               	movf	printf@c,w
  3800  06DD  1903               	btfsc	3,2
  3801  06DE  0008               	return
  3802                           
  3803                           ;doprnt.c: 538: if(c != '%')
  3804  06DF  3025               	movlw	37
  3805  06E0  064C               	xorwf	printf@c,w
  3806  06E1  1903               	btfsc	3,2
  3807  06E2  2EE8               	goto	l1135
  3808                           
  3809                           ;doprnt.c: 540: {
  3810                           ;doprnt.c: 541: (putch(c) );
  3811  06E3  084C               	movf	printf@c,w
  3812  06E4  3184  24E3  3186   	fcall	_putch
  3813                           
  3814                           ;doprnt.c: 542: continue;
  3815  06E7  2ECC               	goto	l1205
  3816  06E8                     l1135:	
  3817                           
  3818                           ;doprnt.c: 543: }
  3819                           ;doprnt.c: 546: width = 0;
  3820  06E8  0020               	movlb	0	; select bank0
  3821  06E9  01CA               	clrf	printf@width
  3822  06EA  01CB               	clrf	printf@width+1
  3823                           
  3824                           ;doprnt.c: 548: flag = 0;
  3825  06EB  01C6               	clrf	printf@flag
  3826                           
  3827                           ;doprnt.c: 551: switch(*f) {
  3828                           
  3829                           ;doprnt.c: 550: for(;;) {
  3830  06EC  2EF3               	goto	l1141
  3831  06ED                     l259:	
  3832                           ;doprnt.c: 579: case '0':
  3833                           
  3834                           
  3835                           ;doprnt.c: 580: flag |= 0x04;
  3836  06ED  0020               	movlb	0	; select bank0
  3837  06EE  1546               	bsf	printf@flag,2
  3838                           
  3839                           ;doprnt.c: 581: f++;
  3840  06EF  3001               	movlw	1
  3841  06F0  07F8               	addwf	printf@f,f
  3842  06F1  3000               	movlw	0
  3843  06F2  3DF9               	addwfc	printf@f+1,f
  3844  06F3                     l1141:	
  3845                           ;doprnt.c: 584: }
  3846                           
  3847                           ;doprnt.c: 582: continue;
  3848                           
  3849  06F3  0878               	movf	printf@f,w
  3850  06F4  0084               	movwf	4
  3851  06F5  0879               	movf	printf@f+1,w
  3852  06F6  0085               	movwf	5
  3853  06F7  0800               	movf	0,w	;code access
  3854                           
  3855                           ; Switch size 1, requested type "space"
  3856                           ; Number of cases is 1, Range of values is 48 to 48
  3857                           ; switch strategies available:
  3858                           ; Name         Instructions Cycles
  3859                           ; simple_byte            4     3 (average)
  3860                           ; direct_byte           11     9 (fixed)
  3861                           ; jumptable            263     9 (fixed)
  3862                           ;	Chosen strategy is simple_byte
  3863  06F8  3A30               	xorlw	48	; case 48
  3864  06F9  1903               	skipnz
  3865  06FA  2EED               	goto	l259
  3866  06FB  2EFC               	goto	l1143
  3867  06FC                     l1143:	
  3868                           ;doprnt.c: 586: }
  3869                           
  3870                           ;doprnt.c: 585: break;
  3871                           
  3872                           
  3873                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3874  06FC  0878               	movf	printf@f,w
  3875  06FD  0084               	movwf	4
  3876  06FE  0879               	movf	printf@f+1,w
  3877  06FF  0085               	movwf	5
  3878  0700  0800               	movf	0,w	;code access
  3879  0701  3185  2546  3186   	fcall	_isdigit
  3880  0704  1C03               	btfss	3,0
  3881  0705  2F37               	goto	l1157
  3882                           
  3883                           ;doprnt.c: 598: width = 0;
  3884  0706  0020               	movlb	0	; select bank0
  3885  0707  01CA               	clrf	printf@width
  3886  0708  01CB               	clrf	printf@width+1
  3887  0709                     l1147:	
  3888                           ;doprnt.c: 599: do {
  3889                           
  3890                           
  3891                           ;doprnt.c: 600: width *= 10;
  3892  0709  300A               	movlw	10
  3893  070A  00F0               	movwf	___wmul@multiplier
  3894  070B  3000               	movlw	0
  3895  070C  00F1               	movwf	___wmul@multiplier+1
  3896  070D  0020               	movlb	0	; select bank0
  3897  070E  084B               	movf	printf@width+1,w
  3898  070F  00F3               	movwf	___wmul@multiplicand+1
  3899  0710  084A               	movf	printf@width,w
  3900  0711  00F2               	movwf	___wmul@multiplicand
  3901  0712  3185  2591  3186   	fcall	___wmul
  3902  0715  0871               	movf	?___wmul+1,w
  3903  0716  0020               	movlb	0	; select bank0
  3904  0717  00CB               	movwf	printf@width+1
  3905  0718  0870               	movf	?___wmul,w
  3906  0719  00CA               	movwf	printf@width
  3907                           
  3908                           ;doprnt.c: 601: width += *f++ - '0';
  3909  071A  0878               	movf	printf@f,w
  3910  071B  0084               	movwf	4
  3911  071C  0879               	movf	printf@f+1,w
  3912  071D  0085               	movwf	5
  3913  071E  0800               	movf	0,w	;code access
  3914  071F  3ED0               	addlw	208
  3915  0720  00C0               	movwf	??_printf
  3916  0721  30FF               	movlw	255
  3917  0722  1803               	skipnc
  3918  0723  3000               	movlw	0
  3919  0724  00C1               	movwf	??_printf+1
  3920  0725  0840               	movf	??_printf,w
  3921  0726  07CA               	addwf	printf@width,f
  3922  0727  0841               	movf	??_printf+1,w
  3923  0728  3DCB               	addwfc	printf@width+1,f
  3924  0729  3001               	movlw	1
  3925  072A  07F8               	addwf	printf@f,f
  3926  072B  3000               	movlw	0
  3927  072C  3DF9               	addwfc	printf@f+1,f
  3928                           
  3929                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3930  072D  0878               	movf	printf@f,w
  3931  072E  0084               	movwf	4
  3932  072F  0879               	movf	printf@f+1,w
  3933  0730  0085               	movwf	5
  3934  0731  0800               	movf	0,w	;code access
  3935  0732  3185  2546  3186   	fcall	_isdigit
  3936  0735  1803               	btfsc	3,0
  3937  0736  2F09               	goto	l1147
  3938  0737                     l1157:	
  3939                           ;doprnt.c: 822: }
  3940                           
  3941                           ;doprnt.c: 813: continue;
  3942                           
  3943                           ;doprnt.c: 802: default:
  3944                           
  3945                           ;doprnt.c: 723: break;
  3946                           
  3947                           ;doprnt.c: 718: case 'x':
  3948                           
  3949                           ;doprnt.c: 638: goto alldone;
  3950                           
  3951                           ;doprnt.c: 637: case 0:
  3952                           
  3953                           ;doprnt.c: 608: }
  3954                           ;doprnt.c: 635: switch(c = *f++) {
  3955                           
  3956  0737  0879               	movf	printf@f+1,w
  3957  0738  0020               	movlb	0	; select bank0
  3958  0739  00C1               	movwf	??_printf+1
  3959  073A  0878               	movf	printf@f,w
  3960  073B  00C0               	movwf	??_printf
  3961  073C  0AF8               	incf	printf@f,f
  3962  073D  1903               	skipnz
  3963  073E  0AF9               	incf	printf@f+1,f
  3964  073F  0840               	movf	??_printf,w
  3965  0740  0084               	movwf	4
  3966  0741  0841               	movf	??_printf+1,w
  3967  0742  0085               	movwf	5
  3968  0743  0800               	movf	0,w	;code access
  3969  0744  00CC               	movwf	printf@c
  3970                           
  3971                           ; Switch size 1, requested type "space"
  3972                           ; Number of cases is 2, Range of values is 0 to 120
  3973                           ; switch strategies available:
  3974                           ; Name         Instructions Cycles
  3975                           ; simple_byte            7     4 (average)
  3976                           ; direct_byte          248     6 (fixed)
  3977                           ; jumptable            260     6 (fixed)
  3978                           ;	Chosen strategy is simple_byte
  3979  0745  3A00               	xorlw	0	; case 0
  3980  0746  1903               	skipnz
  3981  0747  2FF5               	goto	l289
  3982  0748  3A78               	xorlw	120	; case 120
  3983  0749  1903               	skipnz
  3984  074A  2F4C               	goto	l1159
  3985  074B  2ECC               	goto	l1205
  3986  074C                     l1159:	
  3987                           
  3988                           ;doprnt.c: 1273: {
  3989                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3990  074C  0020               	movlb	0	; select bank0
  3991  074D  0845               	movf	printf@ap,w
  3992  074E  0086               	movwf	6
  3993  074F  0187               	clrf	7
  3994  0750  3F40               	moviw [0]fsr1
  3995  0751  00C7               	movwf	printf@val
  3996  0752  3F41               	moviw [1]fsr1
  3997  0753  00C8               	movwf	printf@val+1
  3998  0754  3002               	movlw	2
  3999  0755  00C0               	movwf	??_printf
  4000  0756  0840               	movf	??_printf,w
  4001  0757  07C5               	addwf	printf@ap,f
  4002                           
  4003                           ;doprnt.c: 1287: }
  4004                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4005  0758  01CC               	clrf	printf@c
  4006  0759  0ACC               	incf	printf@c,f
  4007  075A  3004               	movlw	4
  4008  075B  064C               	xorwf	printf@c,w
  4009  075C  1903               	btfsc	3,2
  4010  075D  2F7D               	goto	l1175
  4011  075E                     l1169:	
  4012                           
  4013                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4014  075E  084C               	movf	printf@c,w
  4015  075F  00C0               	movwf	??_printf
  4016  0760  01C1               	clrf	??_printf+1
  4017  0761  35C0               	lslf	??_printf,f
  4018  0762  0DC1               	rlf	??_printf+1,f
  4019  0763  3000               	movlw	low (_hexpowers| (0+32768))
  4020  0764  0740               	addwf	??_printf,w
  4021  0765  0084               	movwf	4
  4022  0766  3088               	movlw	high (_hexpowers| (0+32768))
  4023  0767  3D41               	addwfc	??_printf+1,w
  4024  0768  0085               	movwf	5
  4025  0769  3F00               	moviw [0]fsr0
  4026  076A  00C2               	movwf	??_printf+2
  4027  076B  3F01               	moviw [1]fsr0
  4028  076C  00C3               	movwf	??_printf+3
  4029  076D  0843               	movf	??_printf+3,w
  4030  076E  0248               	subwf	printf@val+1,w
  4031  076F  1D03               	skipz
  4032  0770  2F73               	goto	u625
  4033  0771  0842               	movf	??_printf+2,w
  4034  0772  0247               	subwf	printf@val,w
  4035  0773                     u625:	
  4036  0773  1C03               	btfss	3,0
  4037  0774  2F7D               	goto	l1175
  4038                           
  4039                           ;doprnt.c: 1318: break;
  4040  0775  3001               	movlw	1
  4041  0776  00C0               	movwf	??_printf
  4042  0777  0840               	movf	??_printf,w
  4043  0778  07CC               	addwf	printf@c,f
  4044  0779  3004               	movlw	4
  4045  077A  064C               	xorwf	printf@c,w
  4046  077B  1D03               	btfss	3,2
  4047  077C  2F5E               	goto	l1169
  4048  077D                     l1175:	
  4049                           
  4050                           ;doprnt.c: 1381: if(width > c)
  4051  077D  084C               	movf	printf@c,w
  4052  077E  00C0               	movwf	??_printf
  4053  077F  01C1               	clrf	??_printf+1
  4054  0780  1BC0               	btfsc	??_printf,7
  4055  0781  03C1               	decf	??_printf+1,f
  4056  0782  0841               	movf	??_printf+1,w
  4057  0783  3A80               	xorlw	128
  4058  0784  00C2               	movwf	??_printf+2
  4059  0785  084B               	movf	printf@width+1,w
  4060  0786  3A80               	xorlw	128
  4061  0787  0242               	subwf	??_printf+2,w
  4062  0788  1D03               	skipz
  4063  0789  2F8C               	goto	u645
  4064  078A  084A               	movf	printf@width,w
  4065  078B  0240               	subwf	??_printf,w
  4066  078C                     u645:	
  4067  078C  1803               	skipnc
  4068  078D  2F99               	goto	l1179
  4069                           
  4070                           ;doprnt.c: 1382: width -= c;
  4071  078E  0020               	movlb	0	; select bank0
  4072  078F  084C               	movf	printf@c,w
  4073  0790  00C0               	movwf	??_printf
  4074  0791  01C1               	clrf	??_printf+1
  4075  0792  1BC0               	btfsc	??_printf,7
  4076  0793  03C1               	decf	??_printf+1,f
  4077  0794  0840               	movf	??_printf,w
  4078  0795  02CA               	subwf	printf@width,f
  4079  0796  0841               	movf	??_printf+1,w
  4080  0797  3BCB               	subwfb	printf@width+1,f
  4081  0798  2F9C               	goto	l1181
  4082  0799                     l1179:	
  4083                           
  4084                           ;doprnt.c: 1383: else
  4085                           ;doprnt.c: 1384: width = 0;
  4086  0799  0020               	movlb	0	; select bank0
  4087  079A  01CA               	clrf	printf@width
  4088  079B  01CB               	clrf	printf@width+1
  4089  079C                     l1181:	
  4090                           
  4091                           ;doprnt.c: 1387: if(flag & 0x04) {
  4092  079C  1D46               	btfss	printf@flag,2
  4093  079D  2FAC               	goto	l1189
  4094  079E                     L2:	
  4095                           
  4096                           ;doprnt.c: 1415: if(width)
  4097  079E  084A               	movf	printf@width,w
  4098  079F  044B               	iorwf	printf@width+1,w
  4099  07A0  1903               	btfsc	3,2
  4100  07A1  2FBD               	goto	l1195
  4101                           
  4102                           ;doprnt.c: 1417: (putch('0') );
  4103                           
  4104                           ;doprnt.c: 1416: do
  4105  07A2  3030               	movlw	48
  4106  07A3  3184  24E3  3186   	fcall	_putch
  4107                           
  4108                           ;doprnt.c: 1418: while(--width);
  4109  07A6  30FF               	movlw	255
  4110  07A7  0020               	movlb	0	; select bank0
  4111  07A8  07CA               	addwf	printf@width,f
  4112  07A9  30FF               	movlw	255
  4113  07AA  3DCB               	addwfc	printf@width+1,f
  4114  07AB  2F9E               	goto	L2
  4115  07AC                     l1189:	
  4116                           ;doprnt.c: 1420: } else
  4117                           
  4118                           
  4119                           ;doprnt.c: 1422: {
  4120                           ;doprnt.c: 1424: if(width
  4121                           ;doprnt.c: 1428: )
  4122  07AC  084A               	movf	printf@width,w
  4123  07AD  044B               	iorwf	printf@width+1,w
  4124  07AE  1903               	btfsc	3,2
  4125  07AF  2FBD               	goto	l1195
  4126  07B0                     l1191:	
  4127                           ;doprnt.c: 1429: do
  4128                           
  4129                           
  4130                           ;doprnt.c: 1430: (putch(' ') );
  4131  07B0  3020               	movlw	32
  4132  07B1  3184  24E3  3186   	fcall	_putch
  4133                           
  4134                           ;doprnt.c: 1431: while(--width);
  4135  07B4  30FF               	movlw	255
  4136  07B5  0020               	movlb	0	; select bank0
  4137  07B6  07CA               	addwf	printf@width,f
  4138  07B7  30FF               	movlw	255
  4139  07B8  3DCB               	addwfc	printf@width+1,f
  4140  07B9  084A               	movf	printf@width,w
  4141  07BA  044B               	iorwf	printf@width+1,w
  4142  07BB  1D03               	btfss	3,2
  4143  07BC  2FB0               	goto	l1191
  4144  07BD                     l1195:	
  4145                           
  4146                           ;doprnt.c: 1469: }
  4147                           ;doprnt.c: 1472: prec = c;
  4148  07BD  084C               	movf	printf@c,w
  4149  07BE  00C0               	movwf	??_printf
  4150  07BF  0840               	movf	??_printf,w
  4151  07C0  00C9               	movwf	printf@prec
  4152  07C1                     l1203:	
  4153                           ;doprnt.c: 1474: while(prec--) {
  4154                           
  4155  07C1  30FF               	movlw	255
  4156  07C2  0020               	movlb	0	; select bank0
  4157  07C3  00C0               	movwf	??_printf
  4158  07C4  0840               	movf	??_printf,w
  4159  07C5  07C9               	addwf	printf@prec,f
  4160  07C6  0A49               	incf	printf@prec,w
  4161  07C7  1903               	btfsc	3,2
  4162  07C8  2ECC               	goto	l1205
  4163                           
  4164                           ;doprnt.c: 1478: {
  4165                           ;doprnt.c: 1499: {
  4166                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4167  07C9  0849               	movf	printf@prec,w
  4168  07CA  00C0               	movwf	??_printf
  4169  07CB  01C1               	clrf	??_printf+1
  4170  07CC  35C0               	lslf	??_printf,f
  4171  07CD  0DC1               	rlf	??_printf+1,f
  4172  07CE  3000               	movlw	low (_hexpowers| (0+32768))
  4173  07CF  0740               	addwf	??_printf,w
  4174  07D0  0084               	movwf	4
  4175  07D1  3088               	movlw	high (_hexpowers| (0+32768))
  4176  07D2  3D41               	addwfc	??_printf+1,w
  4177  07D3  0085               	movwf	5
  4178  07D4  3F00               	moviw [0]fsr0
  4179  07D5  00F0               	movwf	___lwdiv@divisor
  4180  07D6  3F01               	moviw [1]fsr0
  4181  07D7  00F1               	movwf	___lwdiv@divisor+1
  4182  07D8  0848               	movf	printf@val+1,w
  4183  07D9  00F3               	movwf	___lwdiv@dividend+1
  4184  07DA  0847               	movf	printf@val,w
  4185  07DB  00F2               	movwf	___lwdiv@dividend
  4186  07DC  3185  25D3  3186   	fcall	___lwdiv
  4187  07DF  0870               	movf	?___lwdiv,w
  4188  07E0  390F               	andlw	15
  4189  07E1  0020               	movlb	0	; select bank0
  4190  07E2  00C2               	movwf	??_printf+2
  4191  07E3  0842               	movf	??_printf+2,w
  4192  07E4  00C4               	movwf	printf@idx
  4193                           
  4194                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4195  07E5  0844               	movf	printf@idx,w
  4196  07E6  3E1F               	addlw	low (STR_8| (0+32768))
  4197  07E7  0084               	movwf	4
  4198  07E8  3088               	movlw	high (STR_8| (0+32768))
  4199  07E9  1803               	skipnc
  4200  07EA  3E01               	addlw	1
  4201  07EB  0085               	movwf	5
  4202  07EC  0800               	movf	0,w	;code access
  4203  07ED  00C0               	movwf	??_printf
  4204  07EE  0840               	movf	??_printf,w
  4205  07EF  00CC               	movwf	printf@c
  4206                           
  4207                           ;doprnt.c: 1508: }
  4208                           ;doprnt.c: 1523: }
  4209                           ;doprnt.c: 1524: (putch(c) );
  4210  07F0  084C               	movf	printf@c,w
  4211  07F1  3184  24E3  3186   	fcall	_putch
  4212  07F4  2FC1               	goto	l1203
  4213  07F5                     l289:	
  4214                           ;doprnt.c: 1540: return 0;
  4215                           ;	Return value of _printf is never used
  4216                           
  4217                           ;doprnt.c: 1525: }
  4218                           ;doprnt.c: 1533: }
  4219                           ;doprnt.c: 1535: alldone:
  4220                           
  4221  07F5  0008               	return
  4222  07F6                     __end_of_printf:	
  4223                           
  4224                           	psect	text8
  4225  04E3                     __ptext8:	
  4226 ;; *************** function _putch *****************
  4227 ;; Defined at:
  4228 ;;		line 102 in file "mcc_generated_files/eusart.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  txData          1    wreg     unsigned char 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  txData          1    1[COMMON] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		wreg, status,2, status,0, pclath, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4246 ;;Total ram usage:        1 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    1
  4249 ;; This function calls:
  4250 ;;		_EUSART_Write
  4251 ;; This function is called by:
  4252 ;;		_printf
  4253 ;;		_puts
  4254 ;;		_cputs
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           
  4259                           ;psect for function _putch
  4260  04E3                     _putch:	
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4264                           ;putch@txData stored from wreg
  4265  04E3  00F1               	movwf	putch@txData
  4266                           
  4267                           ;eusart.c: 103: EUSART_Write(txData);
  4268  04E4  0871               	movf	putch@txData,w
  4269  04E5  3184  24F4         	fcall	_EUSART_Write
  4270  04E7  0008               	return
  4271  04E8                     __end_of_putch:	
  4272                           
  4273                           	psect	text9
  4274  04F4                     __ptext9:	
  4275 ;; *************** function _EUSART_Write *****************
  4276 ;; Defined at:
  4277 ;;		line 91 in file "mcc_generated_files/eusart.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  txData          1    wreg     unsigned char 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  txData          1    0[COMMON] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		wreg
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4295 ;;Total ram usage:        1 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_putch
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           
  4305                           ;psect for function _EUSART_Write
  4306  04F4                     _EUSART_Write:	
  4307                           
  4308                           ;incstack = 0
  4309                           ; Regs used in _EUSART_Write: [wreg]
  4310                           ;EUSART_Write@txData stored from wreg
  4311  04F4  00F0               	movwf	EUSART_Write@txData
  4312  04F5                     l85:	
  4313                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
  4314                           
  4315  04F5  0020               	movlb	0	; select bank0
  4316  04F6  1E10               	btfss	16,4	;volatile
  4317  04F7  2CF5               	goto	l85
  4318                           
  4319                           ;eusart.c: 93: }
  4320                           ;eusart.c: 95: TX1REG = txData;
  4321  04F8  0870               	movf	EUSART_Write@txData,w
  4322  04F9  0023               	movlb	3	; select bank3
  4323  04FA  009A               	movwf	26	;volatile
  4324  04FB  0008               	return
  4325  04FC                     __end_of_EUSART_Write:	
  4326                           
  4327                           	psect	text10
  4328  0546                     __ptext10:	
  4329 ;; *************** function _isdigit *****************
  4330 ;; Defined at:
  4331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  c               1    wreg     unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  c               1    1[COMMON] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;		None               void
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;Total ram usage:        2 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_printf
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _isdigit
  4360  0546                     _isdigit:	
  4361                           
  4362                           ;incstack = 0
  4363                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4364                           ;isdigit@c stored from wreg
  4365  0546  00F1               	movwf	isdigit@c
  4366  0547  01F0               	clrf	_isdigit$684
  4367  0548  303A               	movlw	58
  4368  0549  0271               	subwf	isdigit@c,w
  4369  054A  1803               	skipnc
  4370  054B  2D52               	goto	l1069
  4371  054C  3030               	movlw	48
  4372  054D  0271               	subwf	isdigit@c,w
  4373  054E  1C03               	skipc
  4374  054F  2D52               	goto	l1069
  4375  0550  01F0               	clrf	_isdigit$684
  4376  0551  0AF0               	incf	_isdigit$684,f
  4377  0552                     l1069:	
  4378  0552  0C70               	rrf	_isdigit$684,w
  4379  0553  0008               	return
  4380  0554                     __end_of_isdigit:	
  4381                           
  4382                           	psect	text11
  4383  0591                     __ptext11:	
  4384 ;; *************** function ___wmul *****************
  4385 ;; Defined at:
  4386 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  multiplier      2    0[COMMON] unsigned int 
  4389 ;;  multiplicand    2    2[COMMON] unsigned int 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  product         2    4[COMMON] unsigned int 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  2    0[COMMON] unsigned int 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;Total ram usage:        6 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_printf
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function ___wmul
  4416  0591                     ___wmul:	
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4420  0591  01F4               	clrf	___wmul@product
  4421  0592  01F5               	clrf	___wmul@product+1
  4422  0593                     l1075:	
  4423  0593  1C70               	btfss	___wmul@multiplier,0
  4424  0594  2D99               	goto	l293
  4425  0595  0872               	movf	___wmul@multiplicand,w
  4426  0596  07F4               	addwf	___wmul@product,f
  4427  0597  0873               	movf	___wmul@multiplicand+1,w
  4428  0598  3DF5               	addwfc	___wmul@product+1,f
  4429  0599                     l293:	
  4430  0599  3001               	movlw	1
  4431  059A                     u475:	
  4432  059A  35F2               	lslf	___wmul@multiplicand,f
  4433  059B  0DF3               	rlf	___wmul@multiplicand+1,f
  4434  059C  0B89               	decfsz	9,f
  4435  059D  2D9A               	goto	u475
  4436  059E  3001               	movlw	1
  4437  059F                     u485:	
  4438  059F  36F1               	lsrf	___wmul@multiplier+1,f
  4439  05A0  0CF0               	rrf	___wmul@multiplier,f
  4440  05A1  0B89               	decfsz	9,f
  4441  05A2  2D9F               	goto	u485
  4442  05A3  0870               	movf	___wmul@multiplier,w
  4443  05A4  0471               	iorwf	___wmul@multiplier+1,w
  4444  05A5  1D03               	btfss	3,2
  4445  05A6  2D93               	goto	l1075
  4446  05A7  0875               	movf	___wmul@product+1,w
  4447  05A8  00F1               	movwf	?___wmul+1
  4448  05A9  0874               	movf	___wmul@product,w
  4449  05AA  00F0               	movwf	?___wmul
  4450  05AB  0008               	return
  4451  05AC                     __end_of___wmul:	
  4452                           
  4453                           	psect	text12
  4454  05D3                     __ptext12:	
  4455 ;; *************** function ___lwdiv *****************
  4456 ;; Defined at:
  4457 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  divisor         2    0[COMMON] unsigned int 
  4460 ;;  dividend        2    2[COMMON] unsigned int 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  quotient        2    5[COMMON] unsigned int 
  4463 ;;  counter         1    7[COMMON] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  2    0[COMMON] unsigned int 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;Total ram usage:        8 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_printf
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function ___lwdiv
  4488  05D3                     ___lwdiv:	
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4492  05D3  01F5               	clrf	___lwdiv@quotient
  4493  05D4  01F6               	clrf	___lwdiv@quotient+1
  4494  05D5  0870               	movf	___lwdiv@divisor,w
  4495  05D6  0471               	iorwf	___lwdiv@divisor+1,w
  4496  05D7  1903               	btfsc	3,2
  4497  05D8  2E02               	goto	l1109
  4498  05D9  01F7               	clrf	___lwdiv@counter
  4499  05DA  0AF7               	incf	___lwdiv@counter,f
  4500  05DB                     l1097:	
  4501  05DB  1BF1               	btfsc	___lwdiv@divisor+1,7
  4502  05DC  2DE7               	goto	l1099
  4503  05DD  3001               	movlw	1
  4504  05DE                     u515:	
  4505  05DE  35F0               	lslf	___lwdiv@divisor,f
  4506  05DF  0DF1               	rlf	___lwdiv@divisor+1,f
  4507  05E0  0B89               	decfsz	9,f
  4508  05E1  2DDE               	goto	u515
  4509  05E2  3001               	movlw	1
  4510  05E3  00F4               	movwf	??___lwdiv
  4511  05E4  0874               	movf	??___lwdiv,w
  4512  05E5  07F7               	addwf	___lwdiv@counter,f
  4513  05E6  2DDB               	goto	l1097
  4514  05E7                     l1099:	
  4515  05E7  3001               	movlw	1
  4516  05E8                     u535:	
  4517  05E8  35F5               	lslf	___lwdiv@quotient,f
  4518  05E9  0DF6               	rlf	___lwdiv@quotient+1,f
  4519  05EA  0B89               	decfsz	9,f
  4520  05EB  2DE8               	goto	u535
  4521  05EC  0871               	movf	___lwdiv@divisor+1,w
  4522  05ED  0273               	subwf	___lwdiv@dividend+1,w
  4523  05EE  1D03               	skipz
  4524  05EF  2DF2               	goto	u545
  4525  05F0  0870               	movf	___lwdiv@divisor,w
  4526  05F1  0272               	subwf	___lwdiv@dividend,w
  4527  05F2                     u545:	
  4528  05F2  1C03               	skipc
  4529  05F3  2DF9               	goto	l1105
  4530  05F4  0870               	movf	___lwdiv@divisor,w
  4531  05F5  02F2               	subwf	___lwdiv@dividend,f
  4532  05F6  0871               	movf	___lwdiv@divisor+1,w
  4533  05F7  3BF3               	subwfb	___lwdiv@dividend+1,f
  4534  05F8  1475               	bsf	___lwdiv@quotient,0
  4535  05F9                     l1105:	
  4536  05F9  3001               	movlw	1
  4537  05FA                     u555:	
  4538  05FA  36F1               	lsrf	___lwdiv@divisor+1,f
  4539  05FB  0CF0               	rrf	___lwdiv@divisor,f
  4540  05FC  0B89               	decfsz	9,f
  4541  05FD  2DFA               	goto	u555
  4542  05FE  3001               	movlw	1
  4543  05FF  02F7               	subwf	___lwdiv@counter,f
  4544  0600  1D03               	btfss	3,2
  4545  0601  2DE7               	goto	l1099
  4546  0602                     l1109:	
  4547  0602  0876               	movf	___lwdiv@quotient+1,w
  4548  0603  00F1               	movwf	?___lwdiv+1
  4549  0604  0875               	movf	___lwdiv@quotient,w
  4550  0605  00F0               	movwf	?___lwdiv
  4551  0606  0008               	return
  4552  0607                     __end_of___lwdiv:	
  4553                           
  4554                           	psect	text13
  4555  0505                     __ptext13:	
  4556 ;; *************** function _TMR2_HasOverflowOccured *****************
  4557 ;; Defined at:
  4558 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  status          1    0[COMMON] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      unsigned char 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;Total ram usage:        1 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function _TMR2_HasOverflowOccured
  4587  0505                     _TMR2_HasOverflowOccured:	
  4588                           
  4589                           ;tmr2.c: 125: bool status = PIR1bits.TMR2IF;
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in _TMR2_HasOverflowOccured: [wreg+status,2+status,0]
  4593  0505  3000               	movlw	0
  4594  0506  0020               	movlb	0	; select bank0
  4595  0507  1890               	btfsc	16,1	;volatile
  4596  0508  3001               	movlw	1
  4597  0509  00F0               	movwf	TMR2_HasOverflowOccured@status
  4598                           
  4599                           ;tmr2.c: 126: if (status) {
  4600  050A  0870               	movf	TMR2_HasOverflowOccured@status,w
  4601  050B  1D03               	btfss	3,2
  4602                           
  4603                           ;tmr2.c: 128: PIR1bits.TMR2IF = 0;
  4604  050C  1090               	bcf	16,1	;volatile
  4605                           
  4606                           ;tmr2.c: 129: }
  4607                           ;tmr2.c: 130: return status;
  4608  050D  0870               	movf	TMR2_HasOverflowOccured@status,w
  4609  050E  0008               	return
  4610  050F                     __end_of_TMR2_HasOverflowOccured:	
  4611                           
  4612                           	psect	text14
  4613  0554                     __ptext14:	
  4614 ;; *************** function _SYSTEM_Initialize *****************
  4615 ;; Defined at:
  4616 ;;		line 77 in file "mcc_generated_files/mcc.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, pclath, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;Total ram usage:        0 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    2
  4637 ;; This function calls:
  4638 ;;		_ADC1_Initialize
  4639 ;;		_EUSART_Initialize
  4640 ;;		_OSCILLATOR_Initialize
  4641 ;;		_PIN_MANAGER_Initialize
  4642 ;;		_TMR2_Initialize
  4643 ;; This function is called by:
  4644 ;;		_main
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           
  4649                           ;psect for function _SYSTEM_Initialize
  4650  0554                     _SYSTEM_Initialize:	
  4651                           
  4652                           ;mcc.c: 78: OSCILLATOR_Initialize();
  4653                           
  4654                           ;incstack = 0
  4655                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4656  0554  3184  24E8  3185   	fcall	_OSCILLATOR_Initialize
  4657                           
  4658                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  4659  0557  3186  2607  3185   	fcall	_PIN_MANAGER_Initialize
  4660                           
  4661                           ;mcc.c: 80: EUSART_Initialize();
  4662  055A  3185  2523  3185   	fcall	_EUSART_Initialize
  4663                           
  4664                           ;mcc.c: 81: TMR2_Initialize();
  4665  055D  3185  2539  3185   	fcall	_TMR2_Initialize
  4666                           
  4667                           ;mcc.c: 82: ADC1_Initialize();
  4668  0560  3184  24FC         	fcall	_ADC1_Initialize
  4669  0562  0008               	return
  4670  0563                     __end_of_SYSTEM_Initialize:	
  4671                           
  4672                           	psect	text15
  4673  0539                     __ptext15:	
  4674 ;; *************** function _TMR2_Initialize *****************
  4675 ;; Defined at:
  4676 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0, pclath, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;Total ram usage:        0 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    1
  4697 ;; This function calls:
  4698 ;;		_TMR2_Start
  4699 ;; This function is called by:
  4700 ;;		_SYSTEM_Initialize
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function _TMR2_Initialize
  4706  0539                     _TMR2_Initialize:	
  4707                           
  4708                           ;tmr2.c: 62: T2CON = 0x60;
  4709                           
  4710                           ;incstack = 0
  4711                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4712  0539  3060               	movlw	96
  4713  053A  0020               	movlb	0	; select bank0
  4714  053B  009C               	movwf	28	;volatile
  4715                           
  4716                           ;tmr2.c: 65: T2CLKCON = 0x00;
  4717  053C  019E               	clrf	30	;volatile
  4718                           
  4719                           ;tmr2.c: 68: T2HLT = 0x00;
  4720  053D  019D               	clrf	29	;volatile
  4721                           
  4722                           ;tmr2.c: 71: T2RST = 0x00;
  4723  053E  019F               	clrf	31	;volatile
  4724                           
  4725                           ;tmr2.c: 74: T2PR = 0xFF;
  4726  053F  30FF               	movlw	255
  4727  0540  009B               	movwf	27	;volatile
  4728                           
  4729                           ;tmr2.c: 77: T2TMR = 0x00;
  4730  0541  019A               	clrf	26	;volatile
  4731                           
  4732                           ;tmr2.c: 80: PIR1bits.TMR2IF = 0;
  4733  0542  1090               	bcf	16,1	;volatile
  4734                           
  4735                           ;tmr2.c: 83: TMR2_Start();
  4736  0543  3184  24DD         	fcall	_TMR2_Start
  4737  0545  0008               	return
  4738  0546                     __end_of_TMR2_Initialize:	
  4739                           
  4740                           	psect	text16
  4741  04DD                     __ptext16:	
  4742 ;; *************** function _TMR2_Start *****************
  4743 ;; Defined at:
  4744 ;;		line 96 in file "mcc_generated_files/tmr2.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		None
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_TMR2_Initialize
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _TMR2_Start
  4773  04DD                     _TMR2_Start:	
  4774                           
  4775                           ;tmr2.c: 98: T2CONbits.TMR2ON = 1;
  4776                           
  4777                           ;incstack = 0
  4778                           ; Regs used in _TMR2_Start: []
  4779  04DD  0020               	movlb	0	; select bank0
  4780  04DE  179C               	bsf	28,7	;volatile
  4781  04DF  0008               	return
  4782  04E0                     __end_of_TMR2_Start:	
  4783                           
  4784                           	psect	text17
  4785  0607                     __ptext17:	
  4786 ;; *************** function _PIN_MANAGER_Initialize *****************
  4787 ;; Defined at:
  4788 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;		None
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  state           1    0[COMMON] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;Total ram usage:        1 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_SYSTEM_Initialize
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function _PIN_MANAGER_Initialize
  4817  0607                     _PIN_MANAGER_Initialize:	
  4818                           
  4819                           ;pin_manager.c: 52: LATA = 0x00;
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4823  0607  0022               	movlb	2	; select bank2
  4824  0608  018C               	clrf	12	;volatile
  4825                           
  4826                           ;pin_manager.c: 53: TRISA = 0x2B;
  4827  0609  302B               	movlw	43
  4828  060A  0021               	movlb	1	; select bank1
  4829  060B  008C               	movwf	12	;volatile
  4830                           
  4831                           ;pin_manager.c: 54: ANSELA = 0x03;
  4832  060C  3003               	movlw	3
  4833  060D  0023               	movlb	3	; select bank3
  4834  060E  008C               	movwf	12	;volatile
  4835                           
  4836                           ;pin_manager.c: 56: LATB = 0x00;
  4837  060F  0022               	movlb	2	; select bank2
  4838  0610  018D               	clrf	13	;volatile
  4839                           
  4840                           ;pin_manager.c: 57: TRISB = 0xF0;
  4841  0611  30F0               	movlw	240
  4842  0612  0021               	movlb	1	; select bank1
  4843  0613  008D               	movwf	13	;volatile
  4844                           
  4845                           ;pin_manager.c: 58: ANSELB = 0x10;
  4846  0614  3010               	movlw	16
  4847  0615  0023               	movlb	3	; select bank3
  4848  0616  008D               	movwf	13	;volatile
  4849                           
  4850                           ;pin_manager.c: 59: WPUB = 0x00;
  4851  0617  0024               	movlb	4	; select bank4
  4852  0618  018D               	clrf	13	;volatile
  4853                           
  4854                           ;pin_manager.c: 61: LATC = 0x20;
  4855  0619  3020               	movlw	32
  4856  061A  0022               	movlb	2	; select bank2
  4857  061B  008E               	movwf	14	;volatile
  4858                           
  4859                           ;pin_manager.c: 62: TRISC = 0xDF;
  4860  061C  30DF               	movlw	223
  4861  061D  0021               	movlb	1	; select bank1
  4862  061E  008E               	movwf	14	;volatile
  4863                           
  4864                           ;pin_manager.c: 63: ANSELC = 0xCB;
  4865  061F  30CB               	movlw	203
  4866  0620  0023               	movlb	3	; select bank3
  4867  0621  008E               	movwf	14	;volatile
  4868                           
  4869                           ;pin_manager.c: 64: WPUC = 0x00;
  4870  0622  0024               	movlb	4	; select bank4
  4871  0623  018E               	clrf	14	;volatile
  4872                           
  4873                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x01;
  4874  0624  0021               	movlb	1	; select bank1
  4875  0625  1795               	bsf	21,7	;volatile
  4876                           
  4877                           ;pin_manager.c: 69: bool state = GIE;
  4878  0626  3000               	movlw	0
  4879  0627  1B8B               	btfsc	11,7	;volatile
  4880  0628  3001               	movlw	1
  4881  0629  00F0               	movwf	PIN_MANAGER_Initialize@state
  4882                           
  4883                           ;pin_manager.c: 70: GIE = 0;
  4884  062A  138B               	bcf	11,7	;volatile
  4885                           
  4886                           ;pin_manager.c: 71: PPSLOCK = 0x55;
  4887  062B  3055               	movlw	85
  4888  062C  003C               	movlb	28	; select bank28
  4889  062D  008F               	movwf	15	;volatile
  4890                           
  4891                           ;pin_manager.c: 72: PPSLOCK = 0xAA;
  4892  062E  30AA               	movlw	170
  4893  062F  008F               	movwf	15	;volatile
  4894                           
  4895                           ;pin_manager.c: 73: PPSLOCKbits.PPSLOCKED = 0x00;
  4896  0630  100F               	bcf	15,0	;volatile
  4897                           
  4898                           ;pin_manager.c: 75: RXPPS = 0x0D;
  4899  0631  300D               	movlw	13
  4900  0632  00A4               	movwf	36	;volatile
  4901                           
  4902                           ;pin_manager.c: 76: RB7PPS = 0x12;
  4903  0633  3012               	movlw	18
  4904  0634  003D               	movlb	29	; select bank29
  4905  0635  009F               	movwf	31	;volatile
  4906                           
  4907                           ;pin_manager.c: 77: PPSLOCK = 0x55;
  4908  0636  3055               	movlw	85
  4909  0637  003C               	movlb	28	; select bank28
  4910  0638  008F               	movwf	15	;volatile
  4911                           
  4912                           ;pin_manager.c: 78: PPSLOCK = 0xAA;
  4913  0639  30AA               	movlw	170
  4914  063A  008F               	movwf	15	;volatile
  4915                           
  4916                           ;pin_manager.c: 79: PPSLOCKbits.PPSLOCKED = 0x01;
  4917  063B  140F               	bsf	15,0	;volatile
  4918                           
  4919                           ;pin_manager.c: 80: GIE = state;
  4920  063C  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  4921  063D  2E40               	goto	u50
  4922  063E  178B               	bsf	11,7	;volatile
  4923  063F  0008               	return
  4924  0640                     u50:	
  4925  0640  138B               	bcf	11,7	;volatile
  4926  0641  0008               	return
  4927  0642                     __end_of_PIN_MANAGER_Initialize:	
  4928                           
  4929                           	psect	text18
  4930  04E8                     __ptext18:	
  4931 ;; *************** function _OSCILLATOR_Initialize *****************
  4932 ;; Defined at:
  4933 ;;		line 85 in file "mcc_generated_files/mcc.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;Total ram usage:        0 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_SYSTEM_Initialize
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function _OSCILLATOR_Initialize
  4962  04E8                     _OSCILLATOR_Initialize:	
  4963                           
  4964                           ;mcc.c: 87: OSCCON = 0x7A;
  4965                           
  4966                           ;incstack = 0
  4967                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4968  04E8  307A               	movlw	122
  4969  04E9  0021               	movlb	1	; select bank1
  4970  04EA  0099               	movwf	25	;volatile
  4971                           
  4972                           ;mcc.c: 89: OSCSTAT = 0x00;
  4973  04EB  019A               	clrf	26	;volatile
  4974                           
  4975                           ;mcc.c: 91: OSCTUNE = 0x00;
  4976  04EC  0198               	clrf	24	;volatile
  4977  04ED  0008               	return
  4978  04EE                     __end_of_OSCILLATOR_Initialize:	
  4979                           
  4980                           	psect	text19
  4981  0523                     __ptext19:	
  4982 ;; *************** function _EUSART_Initialize *****************
  4983 ;; Defined at:
  4984 ;;		line 56 in file "mcc_generated_files/eusart.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_SYSTEM_Initialize
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           
  5012                           ;psect for function _EUSART_Initialize
  5013  0523                     _EUSART_Initialize:	
  5014                           
  5015                           ;eusart.c: 60: BAUD1CON = 0x48;
  5016                           
  5017                           ;incstack = 0
  5018                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5019  0523  3048               	movlw	72
  5020  0524  0023               	movlb	3	; select bank3
  5021  0525  009F               	movwf	31	;volatile
  5022                           
  5023                           ;eusart.c: 63: RC1STA = 0x90;
  5024  0526  3090               	movlw	144
  5025  0527  009D               	movwf	29	;volatile
  5026                           
  5027                           ;eusart.c: 66: TX1STA = 0x26;
  5028  0528  3026               	movlw	38
  5029  0529  009E               	movwf	30	;volatile
  5030                           
  5031                           ;eusart.c: 69: SPBRGL = 0x22;
  5032  052A  3022               	movlw	34
  5033  052B  009B               	movwf	27	;volatile
  5034                           
  5035                           ;eusart.c: 72: SPBRGH = 0x00;
  5036  052C  019C               	clrf	28	;volatile
  5037  052D  0008               	return
  5038  052E                     __end_of_EUSART_Initialize:	
  5039                           
  5040                           	psect	text20
  5041  04FC                     __ptext20:	
  5042 ;; *************** function _ADC1_Initialize *****************
  5043 ;; Defined at:
  5044 ;;		line 65 in file "mcc_generated_files/adc1.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;		None
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;		None
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  1    wreg      void 
  5051 ;; Registers used:
  5052 ;;		wreg, status,2
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5062 ;;Total ram usage:        0 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_SYSTEM_Initialize
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           
  5072                           ;psect for function _ADC1_Initialize
  5073  04FC                     _ADC1_Initialize:	
  5074                           
  5075                           ;adc1.c: 69: ADCON0 = 0x01;
  5076                           
  5077                           ;incstack = 0
  5078                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  5079  04FC  3001               	movlw	1
  5080  04FD  0021               	movlb	1	; select bank1
  5081  04FE  009D               	movwf	29	;volatile
  5082                           
  5083                           ;adc1.c: 72: ADCON1 = 0x50;
  5084  04FF  3050               	movlw	80
  5085  0500  009E               	movwf	30	;volatile
  5086                           
  5087                           ;adc1.c: 75: ADCON2 = 0x00;
  5088  0501  019F               	clrf	31	;volatile
  5089                           
  5090                           ;adc1.c: 78: ADRESL = 0x00;
  5091  0502  019B               	clrf	27	;volatile
  5092                           
  5093                           ;adc1.c: 81: ADRESH = 0x00;
  5094  0503  019C               	clrf	28	;volatile
  5095  0504  0008               	return
  5096  0505                     __end_of_ADC1_Initialize:	
  5097                           
  5098                           	psect	text21
  5099  0577                     __ptext21:	
  5100 ;; *************** function _ADC1_GetConversion *****************
  5101 ;; Defined at:
  5102 ;;		line 109 in file "mcc_generated_files/adc1.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  channel         1    wreg     enum E11970
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  channel         1    3[COMMON] enum E11970
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2    0[COMMON] unsigned int 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;Total ram usage:        4 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_main
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function _ADC1_GetConversion
  5131  0577                     _ADC1_GetConversion:	
  5132                           
  5133                           ;incstack = 0
  5134                           ; Regs used in _ADC1_GetConversion: [wreg+status,2+status,0]
  5135                           ;ADC1_GetConversion@channel stored from wreg
  5136  0577  00F3               	movwf	ADC1_GetConversion@channel
  5137                           
  5138                           ;adc1.c: 111: ADCON0bits.CHS = channel;
  5139  0578  0873               	movf	ADC1_GetConversion@channel,w
  5140  0579  00F2               	movwf	??_ADC1_GetConversion
  5141  057A  0DF2               	rlf	??_ADC1_GetConversion,f
  5142  057B  0DF2               	rlf	??_ADC1_GetConversion,f
  5143  057C  0021               	movlb	1	; select bank1
  5144  057D  081D               	movf	29,w	;volatile
  5145  057E  0672               	xorwf	??_ADC1_GetConversion,w
  5146  057F  3983               	andlw	-125
  5147  0580  0672               	xorwf	??_ADC1_GetConversion,w
  5148  0581  009D               	movwf	29	;volatile
  5149                           
  5150                           ;adc1.c: 114: ADCON0bits.ADON = 1;
  5151  0582  141D               	bsf	29,0	;volatile
  5152                           
  5153                           ;adc1.c: 117: _delay((unsigned long)((5)*(16000000/4000000.0)));
  5154  0583  3006               	movlw	6
  5155  0584  00F2               	movwf	??_ADC1_GetConversion
  5156  0585                     u777:	
  5157  0585  0BF2               	decfsz	??_ADC1_GetConversion,f
  5158  0586  2D85               	goto	u777
  5159  0587  0000               	nop
  5160                           
  5161                           ;adc1.c: 120: ADCON0bits.GO_nDONE = 1;
  5162  0588  0021               	movlb	1	; select bank1
  5163  0589  149D               	bsf	29,1	;volatile
  5164  058A                     l182:	
  5165                           ;adc1.c: 123: while (ADCON0bits.GO_nDONE) {
  5166                           
  5167  058A  189D               	btfsc	29,1	;volatile
  5168  058B  2D8A               	goto	l182
  5169                           
  5170                           ;adc1.c: 124: }
  5171                           ;adc1.c: 127: return ((ADRESH << 8) + ADRESL);
  5172  058C  081C               	movf	28,w	;volatile
  5173  058D  00F1               	movwf	?_ADC1_GetConversion+1
  5174  058E  081B               	movf	27,w	;volatile
  5175  058F  00F0               	movwf	?_ADC1_GetConversion
  5176  0590  0008               	return
  5177  0591                     __end_of_ADC1_GetConversion:	
  5178  007E                     btemp	set	126	;btemp
  5179  007E                     wtemp	set	126
  5180  007E                     wtemp0	set	126
  5181  0080                     wtemp1	set	128
  5182  0082                     wtemp2	set	130
  5183  0084                     wtemp3	set	132
  5184  0086                     wtemp4	set	134
  5185  0088                     wtemp5	set	136
  5186  007F                     wtemp6	set	127
  5187  007E                     ttemp	set	126
  5188  007E                     ttemp0	set	126
  5189  0081                     ttemp1	set	129
  5190  0084                     ttemp2	set	132
  5191  0087                     ttemp3	set	135
  5192  007F                     ttemp4	set	127
  5193  007E                     ltemp	set	126
  5194  007E                     ltemp0	set	126
  5195  0082                     ltemp1	set	130
  5196  0086                     ltemp2	set	134
  5197  0080                     ltemp3	set	128


Data Sizes:
    Strings     101
    Constant    8
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      48
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    cputs@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[4]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[4]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_7(CODE[15]), STR_6(CODE[23]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sendCMD@cmd	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[4]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    mygets@p	PTR unsigned char  size(1) Largest target is 32
		 -> rxBuffer(BANK0[32]), 


Critical Paths under _main in COMMON

    _main->_printf
    _sendCMD->_puts
    _puts->_cputs
    _cputs->_putch
    _printf->___lwdiv
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2245
                                             12 COMMON     2     2      0
                                             13 BANK0      3     3      0
                 _ADC1_GetConversion
                  _SYSTEM_Initialize
            _TMR2_HasOverflowOccured
                             _mygets
                             _printf
                            _sendCMD
 ---------------------------------------------------------------------------------
 (1) _sendCMD                                              2     0      2     685
                                              7 COMMON     2     0      2
                             _mygets
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     283
                                              5 COMMON     2     0      2
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2     153
                                              2 COMMON     3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _mygets                                               4     4      0      60
                                              0 COMMON     4     4      0
                              _getch
 ---------------------------------------------------------------------------------
 (3) _getch                                                0     0      0       0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              25    21      4    1386
                                              8 COMMON     4     0      4
                                              0 BANK0     13    13      0
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR2_HasOverflowOccured                              1     1      0      30
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                    _ADC1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1_GetConversion
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_Start
   _TMR2_HasOverflowOccured
   _mygets
     _getch
       _EUSART_Read
   _printf
     ___lwdiv
     ___wmul
     _isdigit
     _putch
       _EUSART_Write
   _sendCMD
     _mygets
       _getch
         _EUSART_Read
     _puts
       _cputs
         _putch
           _EUSART_Write
       _putch
         _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Oct 01 00:43:46 2016

                     __CFG_CP$OFF 0000                                l85 04F5                                l78 050F  
                              u50 0640               ___wmul@multiplicand 0072        __end_of_ADC1_GetConversion 0591  
                     __CFG_LVP$ON 0000                               l220 067F                               l182 058A  
                             l259 06ED                               l293 0599                               l701 0517  
                             l289 07F5                               l803 05BD                               l807 05CE  
                             l799 05B2                               _GIE 005F                               _RC2 0072  
                             _PR2 001B                               u515 05DE                               u535 05E8  
                             u545 05F2                               u625 0773                               u555 05FA  
                             u475 059A                               u485 059F                               u645 078C  
                             u755 069F                               u767 0678                               u777 0585  
                 _TMR2_Initialize 0539                      __CFG_BORV$LO 0000                               wreg 0009  
                    __CFG_IESO$ON 0000     TMR2_HasOverflowOccured@status 0070                      ?_EUSART_Read 0070  
                    __CFG_ZCD$OFF 0000                              l1105 05F9                              l1203 07C1  
                            l1109 0602                              l1141 06F3                              l1205 06CC  
                            l1143 06FC                              l1135 06E8                              l1055 0563  
                            l1233 068D                              l1075 0593                              l1147 0709  
                            l1069 0552                              l1181 079C                              l1157 0737  
                            l1229 0682                              l1191 07B0                              l1175 077D  
                            l1159 074C                              l1097 05DB                              l1169 075E  
                            l1099 05E7                              l1195 07BD                              l1179 0799  
                            l1189 07AC                              STR_1 0864                              STR_2 084C  
                            STR_3 0858                              STR_4 083F                              STR_5 0869  
                            STR_6 0808                              STR_7 0830                              STR_8 081F  
                            _LATA 010C                              _LATB 010D                              _LATC 010E  
                            _T2PR 001B                              _TMR2 001A                              _WPUB 020D  
                            _WPUC 020E                      __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000  
                            _main 0642                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              _puts 052E  
                   __CFG_BOREN$ON 0000                              ltemp 007E                              start 0002  
                            ttemp 007E                              wtemp 007E                     __CFG_MCLRE$ON 0000  
                   __CFG_PLLEN$ON 0000                     ?_EUSART_Write 0070    __size_of_OSCILLATOR_Initialize 0006  
   __end_of_OSCILLATOR_Initialize 04EE                             ?_main 0070                     __CFG_WDTE$OFF 0000  
                           ?_puts 0075                             _T2CON 001C                             _LATA2 0862  
                           _LATA4 0864                             _LATC5 0875                             _T2HLT 001D  
                 __end_of___lwdiv 0607                             _T2TMR 001A                             _T2RST 001F  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _RXPPS 0E24                             _getch 04E0                       ?_TMR2_Start 0070  
                           _cputs 0563                   __end_of_isdigit 0554                   __end_of_sendCMD 0523  
                           _putch 04E3                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           puts@s 0075                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __initialization 07F6                      __end_of_main 06C7  
                    __end_of_puts 0539                    ??_EUSART_Write 0070           __end_of_TMR2_Initialize 0546  
                  __CFG_LPBOR$OFF 0000                            ??_main 004D                            ??_puts 0077  
                          ?_getch 0070                            _ADCON0 009D                            _ADCON1 009E  
                          _ADCON2 009F                            ?_cputs 0072                            _ADRESH 009C  
                          _ADRESL 009B                            _ANSELA 018C                            ?_putch 0070  
                          _ANSELB 018D                            _ANSELC 018E                            _RC1REG 0199  
                          _RC1STA 019D                            _RB7PPS 0E9F                            _OSCCON 0099  
                          _SPBRGH 019C                            _SPBRGL 019B                            _TX1REG 019A  
                          _TX1STA 019E                    __CFG_PWRTE$OFF 0000                            ___wmul 0591  
                  __CFG_STVREN$ON 0000                         ??___lwdiv 0074               __size_of_TMR2_Start 0003  
                          _mygets 05AC                            _printf 06C7          __size_of_ADC1_Initialize 0009  
                          cputs@s 0072          ?_TMR2_HasOverflowOccured 0070                         ??_isdigit 0070  
                       ??_sendCMD 0079              __size_of_EUSART_Read 000A                 _SYSTEM_Initialize 0554  
         __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070                    __pcstackCOMMON 0070  
             ??_SYSTEM_Initialize 0071                     __end_of_getch 04E3                     __end_of_cputs 0577  
                   __end_of_putch 04E8                  ?_TMR2_Initialize 0070                    _OPTION_REGbits 0095  
                         ??_getch 0070                           ??_cputs 0074         __end_of_SYSTEM_Initialize 0563  
                         ??_putch 0071                _ADC1_GetConversion 0577                        __pbssBANK0 0020  
            __end_of_EUSART_Write 04FC               ?_ADC1_GetConversion 0070                        __pmaintext 0642  
                         ?___wmul 0070                   __CFG_PPS1WAY$ON 0000   __end_of_TMR2_HasOverflowOccured 050F  
                         ?_mygets 0070                           ?_printf 0078              ??_ADC1_GetConversion 0072  
                 __CFG_WDTCCS$SWC 0000                           _OSCSTAT 009A                           _OSCTUNE 0098  
                         _PPSLOCK 0E0F                 ??_ADC1_Initialize 0070                      ??_TMR2_Start 0070  
                 __size_of___wmul 001B                           ___lwdiv 05D3                __end_of_TMR2_Start 04E0  
                         __ptext1 0519                           __ptext2 052E                           __ptext3 0563  
                         __ptext4 05AC                           __ptext5 04E0                           __ptext6 050F  
                         __ptext7 06C7                           __ptext8 04E3                           __ptext9 04F4  
                 __size_of_mygets 0027                   __size_of_printf 012F                 __end_of_hexpowers 0808  
           _OSCILLATOR_Initialize 04E8                         _T2CONbits 001C                           _isdigit 0546  
                         _sendCMD 0519          ??_PIN_MANAGER_Initialize 0070                         _T2HLTbits 001D  
      __size_of_SYSTEM_Initialize 000F                           clrloop0 04EF              end_of_initialization 07FD  
                       _T2RSTbits 001F                 _EUSART_Initialize 0523                ?_EUSART_Initialize 0070  
                         mygets@c 0071                           mygets@i 0072                           mygets@p 0073  
                         printf@c 004C                           printf@f 0078                      __pstringtext 0800  
             ??_EUSART_Initialize 0070                  __CFG_FOSC$INTOSC 0000             __size_of_EUSART_Write 0008  
       __end_of_EUSART_Initialize 052E  __size_of_TMR2_HasOverflowOccured 000A                       printf@width 004A  
       ADC1_GetConversion@channel 0073                    __end_of___wmul 05AC                      _EUSART_Write 04F4  
          ?_OSCILLATOR_Initialize 0070                    __end_of_mygets 05D3                    __end_of_printf 07F6  
             start_initialization 07F6   __size_of_PIN_MANAGER_Initialize 003B                     ??_EUSART_Read 0070  
                     putch@txData 0071                          ??___wmul 0074                   _ADC1_Initialize 04FC  
                        ??_mygets 0070                          ??_printf 0040                        sendCMD@cmd 0077  
                       ___latbits 0002                     __pcstackBANK0 0040          __size_of_TMR2_Initialize 000D  
      __size_of_EUSART_Initialize 000B               __end_of_EUSART_Read 0519                  ___lwdiv@dividend 0072  
          _PIN_MANAGER_Initialize 0607                          ?___lwdiv 0070                          _BAUD1CON 019F  
                        ?_isdigit 0070                          ?_sendCMD 0077       __size_of_ADC1_GetConversion 001A  
                       _hexpowers 0800                  ___lwdiv@quotient 0075                    __size_of_getch 0003  
                  __size_of_cputs 0014                          _T2CLKCON 001E                    __size_of_putch 0005  
         _TMR2_HasOverflowOccured 0505                    ___wmul@product 0074                         clear_ram0 04EE  
         __end_of_ADC1_Initialize 0505                          _PIR1bits 0010              __CFG_WDTCPS$WDTCPS1F 0000  
                      _ADCON0bits 009D                 ___wmul@multiplier 0070                        printf@flag 0046  
                      printf@prec 0049                         main@value 007C                       _EUSART_Read 050F  
               ??_TMR2_Initialize 0070           ??_OSCILLATOR_Initialize 0070                  __size_of___lwdiv 0034  
                     _isdigit$684 0070                  __size_of_isdigit 000E                  __size_of_sendCMD 000A  
                 ___lwdiv@divisor 0070                   ___lwdiv@counter 0077         ??_TMR2_HasOverflowOccured 0070  
                        __ptext10 0546                          __ptext11 0591                          __ptext20 04FC  
                        __ptext12 05D3                          __ptext21 0577                          __ptext13 0505  
                        __ptext14 0554                          __ptext15 0539                          __ptext16 04DD  
                        __ptext17 0607                          __ptext18 04E8                          __ptext19 0523  
                   __size_of_main 0085                     __size_of_puts 000B              __CFG_WDTCWS$WDTCWSSW 0000  
                        _rxBuffer 0020                        _RC1STAbits 019D                  ?_ADC1_Initialize 0070  
                       printf@idx 0044                         printf@val 0047                          main@time 007D  
     PIN_MANAGER_Initialize@state 0070                          isdigit@c 0071           ?_PIN_MANAGER_Initialize 0070  
               __CFG_CLKOUTEN$OFF 0000                       _PPSLOCKbits 0E0F                          printf@ap 0045  
                      _TMR2_Start 04DD                EUSART_Write@txData 0070    __end_of_PIN_MANAGER_Initialize 0642  
