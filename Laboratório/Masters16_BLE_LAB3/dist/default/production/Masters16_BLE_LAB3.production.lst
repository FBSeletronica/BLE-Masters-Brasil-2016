

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Oct 01 11:34:53 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  008E                     	;# 
    70  0090                     	;# 
    71  0091                     	;# 
    72  0092                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0113                     	;# 
    92  0114                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011C                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  018E                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0197                     	;# 
   111  0199                     	;# 
   112  0199                     	;# 
   113  0199                     	;# 
   114  019A                     	;# 
   115  019A                     	;# 
   116  019A                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019C                     	;# 
   125  019D                     	;# 
   126  019D                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019E                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  019F                     	;# 
   133  019F                     	;# 
   134  019F                     	;# 
   135  019F                     	;# 
   136  020C                     	;# 
   137  020D                     	;# 
   138  020E                     	;# 
   139  0211                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0212                     	;# 
   143  0213                     	;# 
   144  0213                     	;# 
   145  0214                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0216                     	;# 
   152  0216                     	;# 
   153  0217                     	;# 
   154  0217                     	;# 
   155  028C                     	;# 
   156  028D                     	;# 
   157  028E                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0298                     	;# 
   164  0298                     	;# 
   165  0299                     	;# 
   166  029A                     	;# 
   167  029B                     	;# 
   168  029E                     	;# 
   169  030C                     	;# 
   170  030D                     	;# 
   171  030E                     	;# 
   172  038C                     	;# 
   173  038D                     	;# 
   174  038E                     	;# 
   175  0391                     	;# 
   176  0392                     	;# 
   177  0393                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  0397                     	;# 
   182  0398                     	;# 
   183  0399                     	;# 
   184  040E                     	;# 
   185  0413                     	;# 
   186  0413                     	;# 
   187  0414                     	;# 
   188  0414                     	;# 
   189  0415                     	;# 
   190  0416                     	;# 
   191  0417                     	;# 
   192  0418                     	;# 
   193  041A                     	;# 
   194  041A                     	;# 
   195  041B                     	;# 
   196  041B                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  041F                     	;# 
   201  0493                     	;# 
   202  0494                     	;# 
   203  0495                     	;# 
   204  0496                     	;# 
   205  049A                     	;# 
   206  049B                     	;# 
   207  049C                     	;# 
   208  049D                     	;# 
   209  058C                     	;# 
   210  058C                     	;# 
   211  058D                     	;# 
   212  058E                     	;# 
   213  058E                     	;# 
   214  058F                     	;# 
   215  0590                     	;# 
   216  0590                     	;# 
   217  0591                     	;# 
   218  0592                     	;# 
   219  0592                     	;# 
   220  0593                     	;# 
   221  0594                     	;# 
   222  0594                     	;# 
   223  0595                     	;# 
   224  0596                     	;# 
   225  0596                     	;# 
   226  0597                     	;# 
   227  0598                     	;# 
   228  0599                     	;# 
   229  059A                     	;# 
   230  059B                     	;# 
   231  059B                     	;# 
   232  059C                     	;# 
   233  059D                     	;# 
   234  060C                     	;# 
   235  060C                     	;# 
   236  060D                     	;# 
   237  060E                     	;# 
   238  060F                     	;# 
   239  060F                     	;# 
   240  0610                     	;# 
   241  0611                     	;# 
   242  0612                     	;# 
   243  0613                     	;# 
   244  0614                     	;# 
   245  0617                     	;# 
   246  0618                     	;# 
   247  0619                     	;# 
   248  061A                     	;# 
   249  061B                     	;# 
   250  061C                     	;# 
   251  0691                     	;# 
   252  0692                     	;# 
   253  0693                     	;# 
   254  0694                     	;# 
   255  0695                     	;# 
   256  0696                     	;# 
   257  0697                     	;# 
   258  0699                     	;# 
   259  069A                     	;# 
   260  0711                     	;# 
   261  0712                     	;# 
   262  0713                     	;# 
   263  0714                     	;# 
   264  0715                     	;# 
   265  0718                     	;# 
   266  0718                     	;# 
   267  0719                     	;# 
   268  071A                     	;# 
   269  071A                     	;# 
   270  071B                     	;# 
   271  071C                     	;# 
   272  071D                     	;# 
   273  0791                     	;# 
   274  0791                     	;# 
   275  0792                     	;# 
   276  0793                     	;# 
   277  0793                     	;# 
   278  0794                     	;# 
   279  0795                     	;# 
   280  0795                     	;# 
   281  0796                     	;# 
   282  0797                     	;# 
   283  0797                     	;# 
   284  0798                     	;# 
   285  0799                     	;# 
   286  079A                     	;# 
   287  080C                     	;# 
   288  080C                     	;# 
   289  080D                     	;# 
   290  080E                     	;# 
   291  080E                     	;# 
   292  080F                     	;# 
   293  0810                     	;# 
   294  0810                     	;# 
   295  0811                     	;# 
   296  0812                     	;# 
   297  0812                     	;# 
   298  0813                     	;# 
   299  0814                     	;# 
   300  0815                     	;# 
   301  0816                     	;# 
   302  0817                     	;# 
   303  0818                     	;# 
   304  0819                     	;# 
   305  081A                     	;# 
   306  081A                     	;# 
   307  081B                     	;# 
   308  081C                     	;# 
   309  081C                     	;# 
   310  081D                     	;# 
   311  088C                     	;# 
   312  088D                     	;# 
   313  088E                     	;# 
   314  088F                     	;# 
   315  088F                     	;# 
   316  0890                     	;# 
   317  0891                     	;# 
   318  0892                     	;# 
   319  0893                     	;# 
   320  0893                     	;# 
   321  0894                     	;# 
   322  0895                     	;# 
   323  0896                     	;# 
   324  0897                     	;# 
   325  0897                     	;# 
   326  0898                     	;# 
   327  0899                     	;# 
   328  0D8C                     	;# 
   329  0D8C                     	;# 
   330  0D8D                     	;# 
   331  0D8E                     	;# 
   332  0D8F                     	;# 
   333  0D8F                     	;# 
   334  0D90                     	;# 
   335  0D91                     	;# 
   336  0D92                     	;# 
   337  0D92                     	;# 
   338  0D93                     	;# 
   339  0D94                     	;# 
   340  0D95                     	;# 
   341  0D95                     	;# 
   342  0D96                     	;# 
   343  0D97                     	;# 
   344  0D98                     	;# 
   345  0D99                     	;# 
   346  0D9A                     	;# 
   347  0D9B                     	;# 
   348  0D9C                     	;# 
   349  0D9D                     	;# 
   350  0D9E                     	;# 
   351  0D9E                     	;# 
   352  0D9F                     	;# 
   353  0DA0                     	;# 
   354  0DA1                     	;# 
   355  0DA1                     	;# 
   356  0DA2                     	;# 
   357  0DA3                     	;# 
   358  0DA4                     	;# 
   359  0DA4                     	;# 
   360  0DA5                     	;# 
   361  0DA6                     	;# 
   362  0DA7                     	;# 
   363  0DA7                     	;# 
   364  0DA8                     	;# 
   365  0DA9                     	;# 
   366  0DAA                     	;# 
   367  0DAB                     	;# 
   368  0DAC                     	;# 
   369  0DAD                     	;# 
   370  0DAE                     	;# 
   371  0DAF                     	;# 
   372  0E0F                     	;# 
   373  0E10                     	;# 
   374  0E11                     	;# 
   375  0E12                     	;# 
   376  0E13                     	;# 
   377  0E14                     	;# 
   378  0E15                     	;# 
   379  0E16                     	;# 
   380  0E17                     	;# 
   381  0E18                     	;# 
   382  0E19                     	;# 
   383  0E1A                     	;# 
   384  0E1B                     	;# 
   385  0E1C                     	;# 
   386  0E1D                     	;# 
   387  0E1E                     	;# 
   388  0E1F                     	;# 
   389  0E20                     	;# 
   390  0E21                     	;# 
   391  0E22                     	;# 
   392  0E23                     	;# 
   393  0E24                     	;# 
   394  0E25                     	;# 
   395  0E26                     	;# 
   396  0E27                     	;# 
   397  0E28                     	;# 
   398  0E29                     	;# 
   399  0E2A                     	;# 
   400  0E2B                     	;# 
   401  0E2C                     	;# 
   402  0E2D                     	;# 
   403  0E2E                     	;# 
   404  0E90                     	;# 
   405  0E91                     	;# 
   406  0E92                     	;# 
   407  0E94                     	;# 
   408  0E95                     	;# 
   409  0E9C                     	;# 
   410  0E9D                     	;# 
   411  0E9E                     	;# 
   412  0E9F                     	;# 
   413  0EA0                     	;# 
   414  0EA1                     	;# 
   415  0EA2                     	;# 
   416  0EA3                     	;# 
   417  0EA4                     	;# 
   418  0EA5                     	;# 
   419  0EA6                     	;# 
   420  0EA7                     	;# 
   421  0F0F                     	;# 
   422  0F10                     	;# 
   423  0F11                     	;# 
   424  0F12                     	;# 
   425  0F13                     	;# 
   426  0F14                     	;# 
   427  0F15                     	;# 
   428  0F16                     	;# 
   429  0F17                     	;# 
   430  0F18                     	;# 
   431  0F19                     	;# 
   432  0F1A                     	;# 
   433  0F1B                     	;# 
   434  0F1C                     	;# 
   435  0F1D                     	;# 
   436  0F1E                     	;# 
   437  0F1F                     	;# 
   438  0F20                     	;# 
   439  0F21                     	;# 
   440  0F22                     	;# 
   441  0F23                     	;# 
   442  0F24                     	;# 
   443  0F25                     	;# 
   444  0F26                     	;# 
   445  0F27                     	;# 
   446  0F28                     	;# 
   447  0F29                     	;# 
   448  0F2A                     	;# 
   449  0F2B                     	;# 
   450  0F2C                     	;# 
   451  0F2D                     	;# 
   452  0F2E                     	;# 
   453  0F2F                     	;# 
   454  0F30                     	;# 
   455  0F31                     	;# 
   456  0F32                     	;# 
   457  0F33                     	;# 
   458  0F34                     	;# 
   459  0F35                     	;# 
   460  0F36                     	;# 
   461  0F37                     	;# 
   462  0FE4                     	;# 
   463  0FE5                     	;# 
   464  0FE6                     	;# 
   465  0FE7                     	;# 
   466  0FE8                     	;# 
   467  0FE9                     	;# 
   468  0FEA                     	;# 
   469  0FEB                     	;# 
   470  0FED                     	;# 
   471  0FEE                     	;# 
   472  0FEF                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0008                     	;# 
   482  0009                     	;# 
   483  000A                     	;# 
   484  000B                     	;# 
   485  000C                     	;# 
   486  000D                     	;# 
   487  000E                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0016                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  001A                     	;# 
   500  001A                     	;# 
   501  001B                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001D                     	;# 
   505  001E                     	;# 
   506  001F                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  0090                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0095                     	;# 
   516  0096                     	;# 
   517  0098                     	;# 
   518  0099                     	;# 
   519  009A                     	;# 
   520  009B                     	;# 
   521  009B                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  010C                     	;# 
   527  010D                     	;# 
   528  010E                     	;# 
   529  0111                     	;# 
   530  0112                     	;# 
   531  0113                     	;# 
   532  0114                     	;# 
   533  0115                     	;# 
   534  0116                     	;# 
   535  0117                     	;# 
   536  0118                     	;# 
   537  0119                     	;# 
   538  011C                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  018E                     	;# 
   542  0191                     	;# 
   543  0191                     	;# 
   544  0192                     	;# 
   545  0193                     	;# 
   546  0193                     	;# 
   547  0194                     	;# 
   548  0195                     	;# 
   549  0196                     	;# 
   550  0197                     	;# 
   551  0199                     	;# 
   552  0199                     	;# 
   553  0199                     	;# 
   554  019A                     	;# 
   555  019A                     	;# 
   556  019A                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019B                     	;# 
   561  019B                     	;# 
   562  019C                     	;# 
   563  019C                     	;# 
   564  019C                     	;# 
   565  019D                     	;# 
   566  019D                     	;# 
   567  019D                     	;# 
   568  019E                     	;# 
   569  019E                     	;# 
   570  019E                     	;# 
   571  019F                     	;# 
   572  019F                     	;# 
   573  019F                     	;# 
   574  019F                     	;# 
   575  019F                     	;# 
   576  020C                     	;# 
   577  020D                     	;# 
   578  020E                     	;# 
   579  0211                     	;# 
   580  0211                     	;# 
   581  0212                     	;# 
   582  0212                     	;# 
   583  0213                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0214                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0216                     	;# 
   592  0216                     	;# 
   593  0217                     	;# 
   594  0217                     	;# 
   595  028C                     	;# 
   596  028D                     	;# 
   597  028E                     	;# 
   598  0291                     	;# 
   599  0291                     	;# 
   600  0292                     	;# 
   601  0293                     	;# 
   602  0294                     	;# 
   603  0298                     	;# 
   604  0298                     	;# 
   605  0299                     	;# 
   606  029A                     	;# 
   607  029B                     	;# 
   608  029E                     	;# 
   609  030C                     	;# 
   610  030D                     	;# 
   611  030E                     	;# 
   612  038C                     	;# 
   613  038D                     	;# 
   614  038E                     	;# 
   615  0391                     	;# 
   616  0392                     	;# 
   617  0393                     	;# 
   618  0394                     	;# 
   619  0395                     	;# 
   620  0396                     	;# 
   621  0397                     	;# 
   622  0398                     	;# 
   623  0399                     	;# 
   624  040E                     	;# 
   625  0413                     	;# 
   626  0413                     	;# 
   627  0414                     	;# 
   628  0414                     	;# 
   629  0415                     	;# 
   630  0416                     	;# 
   631  0417                     	;# 
   632  0418                     	;# 
   633  041A                     	;# 
   634  041A                     	;# 
   635  041B                     	;# 
   636  041B                     	;# 
   637  041C                     	;# 
   638  041D                     	;# 
   639  041E                     	;# 
   640  041F                     	;# 
   641  0493                     	;# 
   642  0494                     	;# 
   643  0495                     	;# 
   644  0496                     	;# 
   645  049A                     	;# 
   646  049B                     	;# 
   647  049C                     	;# 
   648  049D                     	;# 
   649  058C                     	;# 
   650  058C                     	;# 
   651  058D                     	;# 
   652  058E                     	;# 
   653  058E                     	;# 
   654  058F                     	;# 
   655  0590                     	;# 
   656  0590                     	;# 
   657  0591                     	;# 
   658  0592                     	;# 
   659  0592                     	;# 
   660  0593                     	;# 
   661  0594                     	;# 
   662  0594                     	;# 
   663  0595                     	;# 
   664  0596                     	;# 
   665  0596                     	;# 
   666  0597                     	;# 
   667  0598                     	;# 
   668  0599                     	;# 
   669  059A                     	;# 
   670  059B                     	;# 
   671  059B                     	;# 
   672  059C                     	;# 
   673  059D                     	;# 
   674  060C                     	;# 
   675  060C                     	;# 
   676  060D                     	;# 
   677  060E                     	;# 
   678  060F                     	;# 
   679  060F                     	;# 
   680  0610                     	;# 
   681  0611                     	;# 
   682  0612                     	;# 
   683  0613                     	;# 
   684  0614                     	;# 
   685  0617                     	;# 
   686  0618                     	;# 
   687  0619                     	;# 
   688  061A                     	;# 
   689  061B                     	;# 
   690  061C                     	;# 
   691  0691                     	;# 
   692  0692                     	;# 
   693  0693                     	;# 
   694  0694                     	;# 
   695  0695                     	;# 
   696  0696                     	;# 
   697  0697                     	;# 
   698  0699                     	;# 
   699  069A                     	;# 
   700  0711                     	;# 
   701  0712                     	;# 
   702  0713                     	;# 
   703  0714                     	;# 
   704  0715                     	;# 
   705  0718                     	;# 
   706  0718                     	;# 
   707  0719                     	;# 
   708  071A                     	;# 
   709  071A                     	;# 
   710  071B                     	;# 
   711  071C                     	;# 
   712  071D                     	;# 
   713  0791                     	;# 
   714  0791                     	;# 
   715  0792                     	;# 
   716  0793                     	;# 
   717  0793                     	;# 
   718  0794                     	;# 
   719  0795                     	;# 
   720  0795                     	;# 
   721  0796                     	;# 
   722  0797                     	;# 
   723  0797                     	;# 
   724  0798                     	;# 
   725  0799                     	;# 
   726  079A                     	;# 
   727  080C                     	;# 
   728  080C                     	;# 
   729  080D                     	;# 
   730  080E                     	;# 
   731  080E                     	;# 
   732  080F                     	;# 
   733  0810                     	;# 
   734  0810                     	;# 
   735  0811                     	;# 
   736  0812                     	;# 
   737  0812                     	;# 
   738  0813                     	;# 
   739  0814                     	;# 
   740  0815                     	;# 
   741  0816                     	;# 
   742  0817                     	;# 
   743  0818                     	;# 
   744  0819                     	;# 
   745  081A                     	;# 
   746  081A                     	;# 
   747  081B                     	;# 
   748  081C                     	;# 
   749  081C                     	;# 
   750  081D                     	;# 
   751  088C                     	;# 
   752  088D                     	;# 
   753  088E                     	;# 
   754  088F                     	;# 
   755  088F                     	;# 
   756  0890                     	;# 
   757  0891                     	;# 
   758  0892                     	;# 
   759  0893                     	;# 
   760  0893                     	;# 
   761  0894                     	;# 
   762  0895                     	;# 
   763  0896                     	;# 
   764  0897                     	;# 
   765  0897                     	;# 
   766  0898                     	;# 
   767  0899                     	;# 
   768  0D8C                     	;# 
   769  0D8C                     	;# 
   770  0D8D                     	;# 
   771  0D8E                     	;# 
   772  0D8F                     	;# 
   773  0D8F                     	;# 
   774  0D90                     	;# 
   775  0D91                     	;# 
   776  0D92                     	;# 
   777  0D92                     	;# 
   778  0D93                     	;# 
   779  0D94                     	;# 
   780  0D95                     	;# 
   781  0D95                     	;# 
   782  0D96                     	;# 
   783  0D97                     	;# 
   784  0D98                     	;# 
   785  0D99                     	;# 
   786  0D9A                     	;# 
   787  0D9B                     	;# 
   788  0D9C                     	;# 
   789  0D9D                     	;# 
   790  0D9E                     	;# 
   791  0D9E                     	;# 
   792  0D9F                     	;# 
   793  0DA0                     	;# 
   794  0DA1                     	;# 
   795  0DA1                     	;# 
   796  0DA2                     	;# 
   797  0DA3                     	;# 
   798  0DA4                     	;# 
   799  0DA4                     	;# 
   800  0DA5                     	;# 
   801  0DA6                     	;# 
   802  0DA7                     	;# 
   803  0DA7                     	;# 
   804  0DA8                     	;# 
   805  0DA9                     	;# 
   806  0DAA                     	;# 
   807  0DAB                     	;# 
   808  0DAC                     	;# 
   809  0DAD                     	;# 
   810  0DAE                     	;# 
   811  0DAF                     	;# 
   812  0E0F                     	;# 
   813  0E10                     	;# 
   814  0E11                     	;# 
   815  0E12                     	;# 
   816  0E13                     	;# 
   817  0E14                     	;# 
   818  0E15                     	;# 
   819  0E16                     	;# 
   820  0E17                     	;# 
   821  0E18                     	;# 
   822  0E19                     	;# 
   823  0E1A                     	;# 
   824  0E1B                     	;# 
   825  0E1C                     	;# 
   826  0E1D                     	;# 
   827  0E1E                     	;# 
   828  0E1F                     	;# 
   829  0E20                     	;# 
   830  0E21                     	;# 
   831  0E22                     	;# 
   832  0E23                     	;# 
   833  0E24                     	;# 
   834  0E25                     	;# 
   835  0E26                     	;# 
   836  0E27                     	;# 
   837  0E28                     	;# 
   838  0E29                     	;# 
   839  0E2A                     	;# 
   840  0E2B                     	;# 
   841  0E2C                     	;# 
   842  0E2D                     	;# 
   843  0E2E                     	;# 
   844  0E90                     	;# 
   845  0E91                     	;# 
   846  0E92                     	;# 
   847  0E94                     	;# 
   848  0E95                     	;# 
   849  0E9C                     	;# 
   850  0E9D                     	;# 
   851  0E9E                     	;# 
   852  0E9F                     	;# 
   853  0EA0                     	;# 
   854  0EA1                     	;# 
   855  0EA2                     	;# 
   856  0EA3                     	;# 
   857  0EA4                     	;# 
   858  0EA5                     	;# 
   859  0EA6                     	;# 
   860  0EA7                     	;# 
   861  0F0F                     	;# 
   862  0F10                     	;# 
   863  0F11                     	;# 
   864  0F12                     	;# 
   865  0F13                     	;# 
   866  0F14                     	;# 
   867  0F15                     	;# 
   868  0F16                     	;# 
   869  0F17                     	;# 
   870  0F18                     	;# 
   871  0F19                     	;# 
   872  0F1A                     	;# 
   873  0F1B                     	;# 
   874  0F1C                     	;# 
   875  0F1D                     	;# 
   876  0F1E                     	;# 
   877  0F1F                     	;# 
   878  0F20                     	;# 
   879  0F21                     	;# 
   880  0F22                     	;# 
   881  0F23                     	;# 
   882  0F24                     	;# 
   883  0F25                     	;# 
   884  0F26                     	;# 
   885  0F27                     	;# 
   886  0F28                     	;# 
   887  0F29                     	;# 
   888  0F2A                     	;# 
   889  0F2B                     	;# 
   890  0F2C                     	;# 
   891  0F2D                     	;# 
   892  0F2E                     	;# 
   893  0F2F                     	;# 
   894  0F30                     	;# 
   895  0F31                     	;# 
   896  0F32                     	;# 
   897  0F33                     	;# 
   898  0F34                     	;# 
   899  0F35                     	;# 
   900  0F36                     	;# 
   901  0F37                     	;# 
   902  0FE4                     	;# 
   903  0FE5                     	;# 
   904  0FE6                     	;# 
   905  0FE7                     	;# 
   906  0FE8                     	;# 
   907  0FE9                     	;# 
   908  0FEA                     	;# 
   909  0FEB                     	;# 
   910  0FED                     	;# 
   911  0FEE                     	;# 
   912  0FEF                     	;# 
   913  0000                     	;# 
   914  0001                     	;# 
   915  0002                     	;# 
   916  0003                     	;# 
   917  0004                     	;# 
   918  0005                     	;# 
   919  0006                     	;# 
   920  0007                     	;# 
   921  0008                     	;# 
   922  0009                     	;# 
   923  000A                     	;# 
   924  000B                     	;# 
   925  000C                     	;# 
   926  000D                     	;# 
   927  000E                     	;# 
   928  0010                     	;# 
   929  0011                     	;# 
   930  0012                     	;# 
   931  0013                     	;# 
   932  0014                     	;# 
   933  0015                     	;# 
   934  0016                     	;# 
   935  0016                     	;# 
   936  0017                     	;# 
   937  0018                     	;# 
   938  0019                     	;# 
   939  001A                     	;# 
   940  001A                     	;# 
   941  001B                     	;# 
   942  001B                     	;# 
   943  001C                     	;# 
   944  001D                     	;# 
   945  001E                     	;# 
   946  001F                     	;# 
   947  008C                     	;# 
   948  008D                     	;# 
   949  008E                     	;# 
   950  0090                     	;# 
   951  0091                     	;# 
   952  0092                     	;# 
   953  0093                     	;# 
   954  0094                     	;# 
   955  0095                     	;# 
   956  0096                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009A                     	;# 
   960  009B                     	;# 
   961  009B                     	;# 
   962  009C                     	;# 
   963  009D                     	;# 
   964  009E                     	;# 
   965  009F                     	;# 
   966  010C                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  0111                     	;# 
   970  0112                     	;# 
   971  0113                     	;# 
   972  0114                     	;# 
   973  0115                     	;# 
   974  0116                     	;# 
   975  0117                     	;# 
   976  0118                     	;# 
   977  0119                     	;# 
   978  011C                     	;# 
   979  018C                     	;# 
   980  018D                     	;# 
   981  018E                     	;# 
   982  0191                     	;# 
   983  0191                     	;# 
   984  0192                     	;# 
   985  0193                     	;# 
   986  0193                     	;# 
   987  0194                     	;# 
   988  0195                     	;# 
   989  0196                     	;# 
   990  0197                     	;# 
   991  0199                     	;# 
   992  0199                     	;# 
   993  0199                     	;# 
   994  019A                     	;# 
   995  019A                     	;# 
   996  019A                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019C                     	;# 
  1003  019C                     	;# 
  1004  019C                     	;# 
  1005  019D                     	;# 
  1006  019D                     	;# 
  1007  019D                     	;# 
  1008  019E                     	;# 
  1009  019E                     	;# 
  1010  019E                     	;# 
  1011  019F                     	;# 
  1012  019F                     	;# 
  1013  019F                     	;# 
  1014  019F                     	;# 
  1015  019F                     	;# 
  1016  020C                     	;# 
  1017  020D                     	;# 
  1018  020E                     	;# 
  1019  0211                     	;# 
  1020  0211                     	;# 
  1021  0212                     	;# 
  1022  0212                     	;# 
  1023  0213                     	;# 
  1024  0213                     	;# 
  1025  0214                     	;# 
  1026  0214                     	;# 
  1027  0215                     	;# 
  1028  0215                     	;# 
  1029  0215                     	;# 
  1030  0215                     	;# 
  1031  0216                     	;# 
  1032  0216                     	;# 
  1033  0217                     	;# 
  1034  0217                     	;# 
  1035  028C                     	;# 
  1036  028D                     	;# 
  1037  028E                     	;# 
  1038  0291                     	;# 
  1039  0291                     	;# 
  1040  0292                     	;# 
  1041  0293                     	;# 
  1042  0294                     	;# 
  1043  0298                     	;# 
  1044  0298                     	;# 
  1045  0299                     	;# 
  1046  029A                     	;# 
  1047  029B                     	;# 
  1048  029E                     	;# 
  1049  030C                     	;# 
  1050  030D                     	;# 
  1051  030E                     	;# 
  1052  038C                     	;# 
  1053  038D                     	;# 
  1054  038E                     	;# 
  1055  0391                     	;# 
  1056  0392                     	;# 
  1057  0393                     	;# 
  1058  0394                     	;# 
  1059  0395                     	;# 
  1060  0396                     	;# 
  1061  0397                     	;# 
  1062  0398                     	;# 
  1063  0399                     	;# 
  1064  040E                     	;# 
  1065  0413                     	;# 
  1066  0413                     	;# 
  1067  0414                     	;# 
  1068  0414                     	;# 
  1069  0415                     	;# 
  1070  0416                     	;# 
  1071  0417                     	;# 
  1072  0418                     	;# 
  1073  041A                     	;# 
  1074  041A                     	;# 
  1075  041B                     	;# 
  1076  041B                     	;# 
  1077  041C                     	;# 
  1078  041D                     	;# 
  1079  041E                     	;# 
  1080  041F                     	;# 
  1081  0493                     	;# 
  1082  0494                     	;# 
  1083  0495                     	;# 
  1084  0496                     	;# 
  1085  049A                     	;# 
  1086  049B                     	;# 
  1087  049C                     	;# 
  1088  049D                     	;# 
  1089  058C                     	;# 
  1090  058C                     	;# 
  1091  058D                     	;# 
  1092  058E                     	;# 
  1093  058E                     	;# 
  1094  058F                     	;# 
  1095  0590                     	;# 
  1096  0590                     	;# 
  1097  0591                     	;# 
  1098  0592                     	;# 
  1099  0592                     	;# 
  1100  0593                     	;# 
  1101  0594                     	;# 
  1102  0594                     	;# 
  1103  0595                     	;# 
  1104  0596                     	;# 
  1105  0596                     	;# 
  1106  0597                     	;# 
  1107  0598                     	;# 
  1108  0599                     	;# 
  1109  059A                     	;# 
  1110  059B                     	;# 
  1111  059B                     	;# 
  1112  059C                     	;# 
  1113  059D                     	;# 
  1114  060C                     	;# 
  1115  060C                     	;# 
  1116  060D                     	;# 
  1117  060E                     	;# 
  1118  060F                     	;# 
  1119  060F                     	;# 
  1120  0610                     	;# 
  1121  0611                     	;# 
  1122  0612                     	;# 
  1123  0613                     	;# 
  1124  0614                     	;# 
  1125  0617                     	;# 
  1126  0618                     	;# 
  1127  0619                     	;# 
  1128  061A                     	;# 
  1129  061B                     	;# 
  1130  061C                     	;# 
  1131  0691                     	;# 
  1132  0692                     	;# 
  1133  0693                     	;# 
  1134  0694                     	;# 
  1135  0695                     	;# 
  1136  0696                     	;# 
  1137  0697                     	;# 
  1138  0699                     	;# 
  1139  069A                     	;# 
  1140  0711                     	;# 
  1141  0712                     	;# 
  1142  0713                     	;# 
  1143  0714                     	;# 
  1144  0715                     	;# 
  1145  0718                     	;# 
  1146  0718                     	;# 
  1147  0719                     	;# 
  1148  071A                     	;# 
  1149  071A                     	;# 
  1150  071B                     	;# 
  1151  071C                     	;# 
  1152  071D                     	;# 
  1153  0791                     	;# 
  1154  0791                     	;# 
  1155  0792                     	;# 
  1156  0793                     	;# 
  1157  0793                     	;# 
  1158  0794                     	;# 
  1159  0795                     	;# 
  1160  0795                     	;# 
  1161  0796                     	;# 
  1162  0797                     	;# 
  1163  0797                     	;# 
  1164  0798                     	;# 
  1165  0799                     	;# 
  1166  079A                     	;# 
  1167  080C                     	;# 
  1168  080C                     	;# 
  1169  080D                     	;# 
  1170  080E                     	;# 
  1171  080E                     	;# 
  1172  080F                     	;# 
  1173  0810                     	;# 
  1174  0810                     	;# 
  1175  0811                     	;# 
  1176  0812                     	;# 
  1177  0812                     	;# 
  1178  0813                     	;# 
  1179  0814                     	;# 
  1180  0815                     	;# 
  1181  0816                     	;# 
  1182  0817                     	;# 
  1183  0818                     	;# 
  1184  0819                     	;# 
  1185  081A                     	;# 
  1186  081A                     	;# 
  1187  081B                     	;# 
  1188  081C                     	;# 
  1189  081C                     	;# 
  1190  081D                     	;# 
  1191  088C                     	;# 
  1192  088D                     	;# 
  1193  088E                     	;# 
  1194  088F                     	;# 
  1195  088F                     	;# 
  1196  0890                     	;# 
  1197  0891                     	;# 
  1198  0892                     	;# 
  1199  0893                     	;# 
  1200  0893                     	;# 
  1201  0894                     	;# 
  1202  0895                     	;# 
  1203  0896                     	;# 
  1204  0897                     	;# 
  1205  0897                     	;# 
  1206  0898                     	;# 
  1207  0899                     	;# 
  1208  0D8C                     	;# 
  1209  0D8C                     	;# 
  1210  0D8D                     	;# 
  1211  0D8E                     	;# 
  1212  0D8F                     	;# 
  1213  0D8F                     	;# 
  1214  0D90                     	;# 
  1215  0D91                     	;# 
  1216  0D92                     	;# 
  1217  0D92                     	;# 
  1218  0D93                     	;# 
  1219  0D94                     	;# 
  1220  0D95                     	;# 
  1221  0D95                     	;# 
  1222  0D96                     	;# 
  1223  0D97                     	;# 
  1224  0D98                     	;# 
  1225  0D99                     	;# 
  1226  0D9A                     	;# 
  1227  0D9B                     	;# 
  1228  0D9C                     	;# 
  1229  0D9D                     	;# 
  1230  0D9E                     	;# 
  1231  0D9E                     	;# 
  1232  0D9F                     	;# 
  1233  0DA0                     	;# 
  1234  0DA1                     	;# 
  1235  0DA1                     	;# 
  1236  0DA2                     	;# 
  1237  0DA3                     	;# 
  1238  0DA4                     	;# 
  1239  0DA4                     	;# 
  1240  0DA5                     	;# 
  1241  0DA6                     	;# 
  1242  0DA7                     	;# 
  1243  0DA7                     	;# 
  1244  0DA8                     	;# 
  1245  0DA9                     	;# 
  1246  0DAA                     	;# 
  1247  0DAB                     	;# 
  1248  0DAC                     	;# 
  1249  0DAD                     	;# 
  1250  0DAE                     	;# 
  1251  0DAF                     	;# 
  1252  0E0F                     	;# 
  1253  0E10                     	;# 
  1254  0E11                     	;# 
  1255  0E12                     	;# 
  1256  0E13                     	;# 
  1257  0E14                     	;# 
  1258  0E15                     	;# 
  1259  0E16                     	;# 
  1260  0E17                     	;# 
  1261  0E18                     	;# 
  1262  0E19                     	;# 
  1263  0E1A                     	;# 
  1264  0E1B                     	;# 
  1265  0E1C                     	;# 
  1266  0E1D                     	;# 
  1267  0E1E                     	;# 
  1268  0E1F                     	;# 
  1269  0E20                     	;# 
  1270  0E21                     	;# 
  1271  0E22                     	;# 
  1272  0E23                     	;# 
  1273  0E24                     	;# 
  1274  0E25                     	;# 
  1275  0E26                     	;# 
  1276  0E27                     	;# 
  1277  0E28                     	;# 
  1278  0E29                     	;# 
  1279  0E2A                     	;# 
  1280  0E2B                     	;# 
  1281  0E2C                     	;# 
  1282  0E2D                     	;# 
  1283  0E2E                     	;# 
  1284  0E90                     	;# 
  1285  0E91                     	;# 
  1286  0E92                     	;# 
  1287  0E94                     	;# 
  1288  0E95                     	;# 
  1289  0E9C                     	;# 
  1290  0E9D                     	;# 
  1291  0E9E                     	;# 
  1292  0E9F                     	;# 
  1293  0EA0                     	;# 
  1294  0EA1                     	;# 
  1295  0EA2                     	;# 
  1296  0EA3                     	;# 
  1297  0EA4                     	;# 
  1298  0EA5                     	;# 
  1299  0EA6                     	;# 
  1300  0EA7                     	;# 
  1301  0F0F                     	;# 
  1302  0F10                     	;# 
  1303  0F11                     	;# 
  1304  0F12                     	;# 
  1305  0F13                     	;# 
  1306  0F14                     	;# 
  1307  0F15                     	;# 
  1308  0F16                     	;# 
  1309  0F17                     	;# 
  1310  0F18                     	;# 
  1311  0F19                     	;# 
  1312  0F1A                     	;# 
  1313  0F1B                     	;# 
  1314  0F1C                     	;# 
  1315  0F1D                     	;# 
  1316  0F1E                     	;# 
  1317  0F1F                     	;# 
  1318  0F20                     	;# 
  1319  0F21                     	;# 
  1320  0F22                     	;# 
  1321  0F23                     	;# 
  1322  0F24                     	;# 
  1323  0F25                     	;# 
  1324  0F26                     	;# 
  1325  0F27                     	;# 
  1326  0F28                     	;# 
  1327  0F29                     	;# 
  1328  0F2A                     	;# 
  1329  0F2B                     	;# 
  1330  0F2C                     	;# 
  1331  0F2D                     	;# 
  1332  0F2E                     	;# 
  1333  0F2F                     	;# 
  1334  0F30                     	;# 
  1335  0F31                     	;# 
  1336  0F32                     	;# 
  1337  0F33                     	;# 
  1338  0F34                     	;# 
  1339  0F35                     	;# 
  1340  0F36                     	;# 
  1341  0F37                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000D                     	;# 
  1367  000E                     	;# 
  1368  0010                     	;# 
  1369  0011                     	;# 
  1370  0012                     	;# 
  1371  0013                     	;# 
  1372  0014                     	;# 
  1373  0015                     	;# 
  1374  0016                     	;# 
  1375  0016                     	;# 
  1376  0017                     	;# 
  1377  0018                     	;# 
  1378  0019                     	;# 
  1379  001A                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001B                     	;# 
  1383  001C                     	;# 
  1384  001D                     	;# 
  1385  001E                     	;# 
  1386  001F                     	;# 
  1387  008C                     	;# 
  1388  008D                     	;# 
  1389  008E                     	;# 
  1390  0090                     	;# 
  1391  0091                     	;# 
  1392  0092                     	;# 
  1393  0093                     	;# 
  1394  0094                     	;# 
  1395  0095                     	;# 
  1396  0096                     	;# 
  1397  0098                     	;# 
  1398  0099                     	;# 
  1399  009A                     	;# 
  1400  009B                     	;# 
  1401  009B                     	;# 
  1402  009C                     	;# 
  1403  009D                     	;# 
  1404  009E                     	;# 
  1405  009F                     	;# 
  1406  010C                     	;# 
  1407  010D                     	;# 
  1408  010E                     	;# 
  1409  0111                     	;# 
  1410  0112                     	;# 
  1411  0113                     	;# 
  1412  0114                     	;# 
  1413  0115                     	;# 
  1414  0116                     	;# 
  1415  0117                     	;# 
  1416  0118                     	;# 
  1417  0119                     	;# 
  1418  011C                     	;# 
  1419  018C                     	;# 
  1420  018D                     	;# 
  1421  018E                     	;# 
  1422  0191                     	;# 
  1423  0191                     	;# 
  1424  0192                     	;# 
  1425  0193                     	;# 
  1426  0193                     	;# 
  1427  0194                     	;# 
  1428  0195                     	;# 
  1429  0196                     	;# 
  1430  0197                     	;# 
  1431  0199                     	;# 
  1432  0199                     	;# 
  1433  0199                     	;# 
  1434  019A                     	;# 
  1435  019A                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019C                     	;# 
  1444  019C                     	;# 
  1445  019D                     	;# 
  1446  019D                     	;# 
  1447  019D                     	;# 
  1448  019E                     	;# 
  1449  019E                     	;# 
  1450  019E                     	;# 
  1451  019F                     	;# 
  1452  019F                     	;# 
  1453  019F                     	;# 
  1454  019F                     	;# 
  1455  019F                     	;# 
  1456  020C                     	;# 
  1457  020D                     	;# 
  1458  020E                     	;# 
  1459  0211                     	;# 
  1460  0211                     	;# 
  1461  0212                     	;# 
  1462  0212                     	;# 
  1463  0213                     	;# 
  1464  0213                     	;# 
  1465  0214                     	;# 
  1466  0214                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0216                     	;# 
  1472  0216                     	;# 
  1473  0217                     	;# 
  1474  0217                     	;# 
  1475  028C                     	;# 
  1476  028D                     	;# 
  1477  028E                     	;# 
  1478  0291                     	;# 
  1479  0291                     	;# 
  1480  0292                     	;# 
  1481  0293                     	;# 
  1482  0294                     	;# 
  1483  0298                     	;# 
  1484  0298                     	;# 
  1485  0299                     	;# 
  1486  029A                     	;# 
  1487  029B                     	;# 
  1488  029E                     	;# 
  1489  030C                     	;# 
  1490  030D                     	;# 
  1491  030E                     	;# 
  1492  038C                     	;# 
  1493  038D                     	;# 
  1494  038E                     	;# 
  1495  0391                     	;# 
  1496  0392                     	;# 
  1497  0393                     	;# 
  1498  0394                     	;# 
  1499  0395                     	;# 
  1500  0396                     	;# 
  1501  0397                     	;# 
  1502  0398                     	;# 
  1503  0399                     	;# 
  1504  040E                     	;# 
  1505  0413                     	;# 
  1506  0413                     	;# 
  1507  0414                     	;# 
  1508  0414                     	;# 
  1509  0415                     	;# 
  1510  0416                     	;# 
  1511  0417                     	;# 
  1512  0418                     	;# 
  1513  041A                     	;# 
  1514  041A                     	;# 
  1515  041B                     	;# 
  1516  041B                     	;# 
  1517  041C                     	;# 
  1518  041D                     	;# 
  1519  041E                     	;# 
  1520  041F                     	;# 
  1521  0493                     	;# 
  1522  0494                     	;# 
  1523  0495                     	;# 
  1524  0496                     	;# 
  1525  049A                     	;# 
  1526  049B                     	;# 
  1527  049C                     	;# 
  1528  049D                     	;# 
  1529  058C                     	;# 
  1530  058C                     	;# 
  1531  058D                     	;# 
  1532  058E                     	;# 
  1533  058E                     	;# 
  1534  058F                     	;# 
  1535  0590                     	;# 
  1536  0590                     	;# 
  1537  0591                     	;# 
  1538  0592                     	;# 
  1539  0592                     	;# 
  1540  0593                     	;# 
  1541  0594                     	;# 
  1542  0594                     	;# 
  1543  0595                     	;# 
  1544  0596                     	;# 
  1545  0596                     	;# 
  1546  0597                     	;# 
  1547  0598                     	;# 
  1548  0599                     	;# 
  1549  059A                     	;# 
  1550  059B                     	;# 
  1551  059B                     	;# 
  1552  059C                     	;# 
  1553  059D                     	;# 
  1554  060C                     	;# 
  1555  060C                     	;# 
  1556  060D                     	;# 
  1557  060E                     	;# 
  1558  060F                     	;# 
  1559  060F                     	;# 
  1560  0610                     	;# 
  1561  0611                     	;# 
  1562  0612                     	;# 
  1563  0613                     	;# 
  1564  0614                     	;# 
  1565  0617                     	;# 
  1566  0618                     	;# 
  1567  0619                     	;# 
  1568  061A                     	;# 
  1569  061B                     	;# 
  1570  061C                     	;# 
  1571  0691                     	;# 
  1572  0692                     	;# 
  1573  0693                     	;# 
  1574  0694                     	;# 
  1575  0695                     	;# 
  1576  0696                     	;# 
  1577  0697                     	;# 
  1578  0699                     	;# 
  1579  069A                     	;# 
  1580  0711                     	;# 
  1581  0712                     	;# 
  1582  0713                     	;# 
  1583  0714                     	;# 
  1584  0715                     	;# 
  1585  0718                     	;# 
  1586  0718                     	;# 
  1587  0719                     	;# 
  1588  071A                     	;# 
  1589  071A                     	;# 
  1590  071B                     	;# 
  1591  071C                     	;# 
  1592  071D                     	;# 
  1593  0791                     	;# 
  1594  0791                     	;# 
  1595  0792                     	;# 
  1596  0793                     	;# 
  1597  0793                     	;# 
  1598  0794                     	;# 
  1599  0795                     	;# 
  1600  0795                     	;# 
  1601  0796                     	;# 
  1602  0797                     	;# 
  1603  0797                     	;# 
  1604  0798                     	;# 
  1605  0799                     	;# 
  1606  079A                     	;# 
  1607  080C                     	;# 
  1608  080C                     	;# 
  1609  080D                     	;# 
  1610  080E                     	;# 
  1611  080E                     	;# 
  1612  080F                     	;# 
  1613  0810                     	;# 
  1614  0810                     	;# 
  1615  0811                     	;# 
  1616  0812                     	;# 
  1617  0812                     	;# 
  1618  0813                     	;# 
  1619  0814                     	;# 
  1620  0815                     	;# 
  1621  0816                     	;# 
  1622  0817                     	;# 
  1623  0818                     	;# 
  1624  0819                     	;# 
  1625  081A                     	;# 
  1626  081A                     	;# 
  1627  081B                     	;# 
  1628  081C                     	;# 
  1629  081C                     	;# 
  1630  081D                     	;# 
  1631  088C                     	;# 
  1632  088D                     	;# 
  1633  088E                     	;# 
  1634  088F                     	;# 
  1635  088F                     	;# 
  1636  0890                     	;# 
  1637  0891                     	;# 
  1638  0892                     	;# 
  1639  0893                     	;# 
  1640  0893                     	;# 
  1641  0894                     	;# 
  1642  0895                     	;# 
  1643  0896                     	;# 
  1644  0897                     	;# 
  1645  0897                     	;# 
  1646  0898                     	;# 
  1647  0899                     	;# 
  1648  0D8C                     	;# 
  1649  0D8C                     	;# 
  1650  0D8D                     	;# 
  1651  0D8E                     	;# 
  1652  0D8F                     	;# 
  1653  0D8F                     	;# 
  1654  0D90                     	;# 
  1655  0D91                     	;# 
  1656  0D92                     	;# 
  1657  0D92                     	;# 
  1658  0D93                     	;# 
  1659  0D94                     	;# 
  1660  0D95                     	;# 
  1661  0D95                     	;# 
  1662  0D96                     	;# 
  1663  0D97                     	;# 
  1664  0D98                     	;# 
  1665  0D99                     	;# 
  1666  0D9A                     	;# 
  1667  0D9B                     	;# 
  1668  0D9C                     	;# 
  1669  0D9D                     	;# 
  1670  0D9E                     	;# 
  1671  0D9E                     	;# 
  1672  0D9F                     	;# 
  1673  0DA0                     	;# 
  1674  0DA1                     	;# 
  1675  0DA1                     	;# 
  1676  0DA2                     	;# 
  1677  0DA3                     	;# 
  1678  0DA4                     	;# 
  1679  0DA4                     	;# 
  1680  0DA5                     	;# 
  1681  0DA6                     	;# 
  1682  0DA7                     	;# 
  1683  0DA7                     	;# 
  1684  0DA8                     	;# 
  1685  0DA9                     	;# 
  1686  0DAA                     	;# 
  1687  0DAB                     	;# 
  1688  0DAC                     	;# 
  1689  0DAD                     	;# 
  1690  0DAE                     	;# 
  1691  0DAF                     	;# 
  1692  0E0F                     	;# 
  1693  0E10                     	;# 
  1694  0E11                     	;# 
  1695  0E12                     	;# 
  1696  0E13                     	;# 
  1697  0E14                     	;# 
  1698  0E15                     	;# 
  1699  0E16                     	;# 
  1700  0E17                     	;# 
  1701  0E18                     	;# 
  1702  0E19                     	;# 
  1703  0E1A                     	;# 
  1704  0E1B                     	;# 
  1705  0E1C                     	;# 
  1706  0E1D                     	;# 
  1707  0E1E                     	;# 
  1708  0E1F                     	;# 
  1709  0E20                     	;# 
  1710  0E21                     	;# 
  1711  0E22                     	;# 
  1712  0E23                     	;# 
  1713  0E24                     	;# 
  1714  0E25                     	;# 
  1715  0E26                     	;# 
  1716  0E27                     	;# 
  1717  0E28                     	;# 
  1718  0E29                     	;# 
  1719  0E2A                     	;# 
  1720  0E2B                     	;# 
  1721  0E2C                     	;# 
  1722  0E2D                     	;# 
  1723  0E2E                     	;# 
  1724  0E90                     	;# 
  1725  0E91                     	;# 
  1726  0E92                     	;# 
  1727  0E94                     	;# 
  1728  0E95                     	;# 
  1729  0E9C                     	;# 
  1730  0E9D                     	;# 
  1731  0E9E                     	;# 
  1732  0E9F                     	;# 
  1733  0EA0                     	;# 
  1734  0EA1                     	;# 
  1735  0EA2                     	;# 
  1736  0EA3                     	;# 
  1737  0EA4                     	;# 
  1738  0EA5                     	;# 
  1739  0EA6                     	;# 
  1740  0EA7                     	;# 
  1741  0F0F                     	;# 
  1742  0F10                     	;# 
  1743  0F11                     	;# 
  1744  0F12                     	;# 
  1745  0F13                     	;# 
  1746  0F14                     	;# 
  1747  0F15                     	;# 
  1748  0F16                     	;# 
  1749  0F17                     	;# 
  1750  0F18                     	;# 
  1751  0F19                     	;# 
  1752  0F1A                     	;# 
  1753  0F1B                     	;# 
  1754  0F1C                     	;# 
  1755  0F1D                     	;# 
  1756  0F1E                     	;# 
  1757  0F1F                     	;# 
  1758  0F20                     	;# 
  1759  0F21                     	;# 
  1760  0F22                     	;# 
  1761  0F23                     	;# 
  1762  0F24                     	;# 
  1763  0F25                     	;# 
  1764  0F26                     	;# 
  1765  0F27                     	;# 
  1766  0F28                     	;# 
  1767  0F29                     	;# 
  1768  0F2A                     	;# 
  1769  0F2B                     	;# 
  1770  0F2C                     	;# 
  1771  0F2D                     	;# 
  1772  0F2E                     	;# 
  1773  0F2F                     	;# 
  1774  0F30                     	;# 
  1775  0F31                     	;# 
  1776  0F32                     	;# 
  1777  0F33                     	;# 
  1778  0F34                     	;# 
  1779  0F35                     	;# 
  1780  0F36                     	;# 
  1781  0F37                     	;# 
  1782  0FE4                     	;# 
  1783  0FE5                     	;# 
  1784  0FE6                     	;# 
  1785  0FE7                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEB                     	;# 
  1790  0FED                     	;# 
  1791  0FEE                     	;# 
  1792  0FEF                     	;# 
  1793  0000                     	;# 
  1794  0001                     	;# 
  1795  0002                     	;# 
  1796  0003                     	;# 
  1797  0004                     	;# 
  1798  0005                     	;# 
  1799  0006                     	;# 
  1800  0007                     	;# 
  1801  0008                     	;# 
  1802  0009                     	;# 
  1803  000A                     	;# 
  1804  000B                     	;# 
  1805  000C                     	;# 
  1806  000D                     	;# 
  1807  000E                     	;# 
  1808  0010                     	;# 
  1809  0011                     	;# 
  1810  0012                     	;# 
  1811  0013                     	;# 
  1812  0014                     	;# 
  1813  0015                     	;# 
  1814  0016                     	;# 
  1815  0016                     	;# 
  1816  0017                     	;# 
  1817  0018                     	;# 
  1818  0019                     	;# 
  1819  001A                     	;# 
  1820  001A                     	;# 
  1821  001B                     	;# 
  1822  001B                     	;# 
  1823  001C                     	;# 
  1824  001D                     	;# 
  1825  001E                     	;# 
  1826  001F                     	;# 
  1827  008C                     	;# 
  1828  008D                     	;# 
  1829  008E                     	;# 
  1830  0090                     	;# 
  1831  0091                     	;# 
  1832  0092                     	;# 
  1833  0093                     	;# 
  1834  0094                     	;# 
  1835  0095                     	;# 
  1836  0096                     	;# 
  1837  0098                     	;# 
  1838  0099                     	;# 
  1839  009A                     	;# 
  1840  009B                     	;# 
  1841  009B                     	;# 
  1842  009C                     	;# 
  1843  009D                     	;# 
  1844  009E                     	;# 
  1845  009F                     	;# 
  1846  010C                     	;# 
  1847  010D                     	;# 
  1848  010E                     	;# 
  1849  0111                     	;# 
  1850  0112                     	;# 
  1851  0113                     	;# 
  1852  0114                     	;# 
  1853  0115                     	;# 
  1854  0116                     	;# 
  1855  0117                     	;# 
  1856  0118                     	;# 
  1857  0119                     	;# 
  1858  011C                     	;# 
  1859  018C                     	;# 
  1860  018D                     	;# 
  1861  018E                     	;# 
  1862  0191                     	;# 
  1863  0191                     	;# 
  1864  0192                     	;# 
  1865  0193                     	;# 
  1866  0193                     	;# 
  1867  0194                     	;# 
  1868  0195                     	;# 
  1869  0196                     	;# 
  1870  0197                     	;# 
  1871  0199                     	;# 
  1872  0199                     	;# 
  1873  0199                     	;# 
  1874  019A                     	;# 
  1875  019A                     	;# 
  1876  019A                     	;# 
  1877  019B                     	;# 
  1878  019B                     	;# 
  1879  019B                     	;# 
  1880  019B                     	;# 
  1881  019B                     	;# 
  1882  019C                     	;# 
  1883  019C                     	;# 
  1884  019C                     	;# 
  1885  019D                     	;# 
  1886  019D                     	;# 
  1887  019D                     	;# 
  1888  019E                     	;# 
  1889  019E                     	;# 
  1890  019E                     	;# 
  1891  019F                     	;# 
  1892  019F                     	;# 
  1893  019F                     	;# 
  1894  019F                     	;# 
  1895  019F                     	;# 
  1896  020C                     	;# 
  1897  020D                     	;# 
  1898  020E                     	;# 
  1899  0211                     	;# 
  1900  0211                     	;# 
  1901  0212                     	;# 
  1902  0212                     	;# 
  1903  0213                     	;# 
  1904  0213                     	;# 
  1905  0214                     	;# 
  1906  0214                     	;# 
  1907  0215                     	;# 
  1908  0215                     	;# 
  1909  0215                     	;# 
  1910  0215                     	;# 
  1911  0216                     	;# 
  1912  0216                     	;# 
  1913  0217                     	;# 
  1914  0217                     	;# 
  1915  028C                     	;# 
  1916  028D                     	;# 
  1917  028E                     	;# 
  1918  0291                     	;# 
  1919  0291                     	;# 
  1920  0292                     	;# 
  1921  0293                     	;# 
  1922  0294                     	;# 
  1923  0298                     	;# 
  1924  0298                     	;# 
  1925  0299                     	;# 
  1926  029A                     	;# 
  1927  029B                     	;# 
  1928  029E                     	;# 
  1929  030C                     	;# 
  1930  030D                     	;# 
  1931  030E                     	;# 
  1932  038C                     	;# 
  1933  038D                     	;# 
  1934  038E                     	;# 
  1935  0391                     	;# 
  1936  0392                     	;# 
  1937  0393                     	;# 
  1938  0394                     	;# 
  1939  0395                     	;# 
  1940  0396                     	;# 
  1941  0397                     	;# 
  1942  0398                     	;# 
  1943  0399                     	;# 
  1944  040E                     	;# 
  1945  0413                     	;# 
  1946  0413                     	;# 
  1947  0414                     	;# 
  1948  0414                     	;# 
  1949  0415                     	;# 
  1950  0416                     	;# 
  1951  0417                     	;# 
  1952  0418                     	;# 
  1953  041A                     	;# 
  1954  041A                     	;# 
  1955  041B                     	;# 
  1956  041B                     	;# 
  1957  041C                     	;# 
  1958  041D                     	;# 
  1959  041E                     	;# 
  1960  041F                     	;# 
  1961  0493                     	;# 
  1962  0494                     	;# 
  1963  0495                     	;# 
  1964  0496                     	;# 
  1965  049A                     	;# 
  1966  049B                     	;# 
  1967  049C                     	;# 
  1968  049D                     	;# 
  1969  058C                     	;# 
  1970  058C                     	;# 
  1971  058D                     	;# 
  1972  058E                     	;# 
  1973  058E                     	;# 
  1974  058F                     	;# 
  1975  0590                     	;# 
  1976  0590                     	;# 
  1977  0591                     	;# 
  1978  0592                     	;# 
  1979  0592                     	;# 
  1980  0593                     	;# 
  1981  0594                     	;# 
  1982  0594                     	;# 
  1983  0595                     	;# 
  1984  0596                     	;# 
  1985  0596                     	;# 
  1986  0597                     	;# 
  1987  0598                     	;# 
  1988  0599                     	;# 
  1989  059A                     	;# 
  1990  059B                     	;# 
  1991  059B                     	;# 
  1992  059C                     	;# 
  1993  059D                     	;# 
  1994  060C                     	;# 
  1995  060C                     	;# 
  1996  060D                     	;# 
  1997  060E                     	;# 
  1998  060F                     	;# 
  1999  060F                     	;# 
  2000  0610                     	;# 
  2001  0611                     	;# 
  2002  0612                     	;# 
  2003  0613                     	;# 
  2004  0614                     	;# 
  2005  0617                     	;# 
  2006  0618                     	;# 
  2007  0619                     	;# 
  2008  061A                     	;# 
  2009  061B                     	;# 
  2010  061C                     	;# 
  2011  0691                     	;# 
  2012  0692                     	;# 
  2013  0693                     	;# 
  2014  0694                     	;# 
  2015  0695                     	;# 
  2016  0696                     	;# 
  2017  0697                     	;# 
  2018  0699                     	;# 
  2019  069A                     	;# 
  2020  0711                     	;# 
  2021  0712                     	;# 
  2022  0713                     	;# 
  2023  0714                     	;# 
  2024  0715                     	;# 
  2025  0718                     	;# 
  2026  0718                     	;# 
  2027  0719                     	;# 
  2028  071A                     	;# 
  2029  071A                     	;# 
  2030  071B                     	;# 
  2031  071C                     	;# 
  2032  071D                     	;# 
  2033  0791                     	;# 
  2034  0791                     	;# 
  2035  0792                     	;# 
  2036  0793                     	;# 
  2037  0793                     	;# 
  2038  0794                     	;# 
  2039  0795                     	;# 
  2040  0795                     	;# 
  2041  0796                     	;# 
  2042  0797                     	;# 
  2043  0797                     	;# 
  2044  0798                     	;# 
  2045  0799                     	;# 
  2046  079A                     	;# 
  2047  080C                     	;# 
  2048  080C                     	;# 
  2049  080D                     	;# 
  2050  080E                     	;# 
  2051  080E                     	;# 
  2052  080F                     	;# 
  2053  0810                     	;# 
  2054  0810                     	;# 
  2055  0811                     	;# 
  2056  0812                     	;# 
  2057  0812                     	;# 
  2058  0813                     	;# 
  2059  0814                     	;# 
  2060  0815                     	;# 
  2061  0816                     	;# 
  2062  0817                     	;# 
  2063  0818                     	;# 
  2064  0819                     	;# 
  2065  081A                     	;# 
  2066  081A                     	;# 
  2067  081B                     	;# 
  2068  081C                     	;# 
  2069  081C                     	;# 
  2070  081D                     	;# 
  2071  088C                     	;# 
  2072  088D                     	;# 
  2073  088E                     	;# 
  2074  088F                     	;# 
  2075  088F                     	;# 
  2076  0890                     	;# 
  2077  0891                     	;# 
  2078  0892                     	;# 
  2079  0893                     	;# 
  2080  0893                     	;# 
  2081  0894                     	;# 
  2082  0895                     	;# 
  2083  0896                     	;# 
  2084  0897                     	;# 
  2085  0897                     	;# 
  2086  0898                     	;# 
  2087  0899                     	;# 
  2088  0D8C                     	;# 
  2089  0D8C                     	;# 
  2090  0D8D                     	;# 
  2091  0D8E                     	;# 
  2092  0D8F                     	;# 
  2093  0D8F                     	;# 
  2094  0D90                     	;# 
  2095  0D91                     	;# 
  2096  0D92                     	;# 
  2097  0D92                     	;# 
  2098  0D93                     	;# 
  2099  0D94                     	;# 
  2100  0D95                     	;# 
  2101  0D95                     	;# 
  2102  0D96                     	;# 
  2103  0D97                     	;# 
  2104  0D98                     	;# 
  2105  0D99                     	;# 
  2106  0D9A                     	;# 
  2107  0D9B                     	;# 
  2108  0D9C                     	;# 
  2109  0D9D                     	;# 
  2110  0D9E                     	;# 
  2111  0D9E                     	;# 
  2112  0D9F                     	;# 
  2113  0DA0                     	;# 
  2114  0DA1                     	;# 
  2115  0DA1                     	;# 
  2116  0DA2                     	;# 
  2117  0DA3                     	;# 
  2118  0DA4                     	;# 
  2119  0DA4                     	;# 
  2120  0DA5                     	;# 
  2121  0DA6                     	;# 
  2122  0DA7                     	;# 
  2123  0DA7                     	;# 
  2124  0DA8                     	;# 
  2125  0DA9                     	;# 
  2126  0DAA                     	;# 
  2127  0DAB                     	;# 
  2128  0DAC                     	;# 
  2129  0DAD                     	;# 
  2130  0DAE                     	;# 
  2131  0DAF                     	;# 
  2132  0E0F                     	;# 
  2133  0E10                     	;# 
  2134  0E11                     	;# 
  2135  0E12                     	;# 
  2136  0E13                     	;# 
  2137  0E14                     	;# 
  2138  0E15                     	;# 
  2139  0E16                     	;# 
  2140  0E17                     	;# 
  2141  0E18                     	;# 
  2142  0E19                     	;# 
  2143  0E1A                     	;# 
  2144  0E1B                     	;# 
  2145  0E1C                     	;# 
  2146  0E1D                     	;# 
  2147  0E1E                     	;# 
  2148  0E1F                     	;# 
  2149  0E20                     	;# 
  2150  0E21                     	;# 
  2151  0E22                     	;# 
  2152  0E23                     	;# 
  2153  0E24                     	;# 
  2154  0E25                     	;# 
  2155  0E26                     	;# 
  2156  0E27                     	;# 
  2157  0E28                     	;# 
  2158  0E29                     	;# 
  2159  0E2A                     	;# 
  2160  0E2B                     	;# 
  2161  0E2C                     	;# 
  2162  0E2D                     	;# 
  2163  0E2E                     	;# 
  2164  0E90                     	;# 
  2165  0E91                     	;# 
  2166  0E92                     	;# 
  2167  0E94                     	;# 
  2168  0E95                     	;# 
  2169  0E9C                     	;# 
  2170  0E9D                     	;# 
  2171  0E9E                     	;# 
  2172  0E9F                     	;# 
  2173  0EA0                     	;# 
  2174  0EA1                     	;# 
  2175  0EA2                     	;# 
  2176  0EA3                     	;# 
  2177  0EA4                     	;# 
  2178  0EA5                     	;# 
  2179  0EA6                     	;# 
  2180  0EA7                     	;# 
  2181  0F0F                     	;# 
  2182  0F10                     	;# 
  2183  0F11                     	;# 
  2184  0F12                     	;# 
  2185  0F13                     	;# 
  2186  0F14                     	;# 
  2187  0F15                     	;# 
  2188  0F16                     	;# 
  2189  0F17                     	;# 
  2190  0F18                     	;# 
  2191  0F19                     	;# 
  2192  0F1A                     	;# 
  2193  0F1B                     	;# 
  2194  0F1C                     	;# 
  2195  0F1D                     	;# 
  2196  0F1E                     	;# 
  2197  0F1F                     	;# 
  2198  0F20                     	;# 
  2199  0F21                     	;# 
  2200  0F22                     	;# 
  2201  0F23                     	;# 
  2202  0F24                     	;# 
  2203  0F25                     	;# 
  2204  0F26                     	;# 
  2205  0F27                     	;# 
  2206  0F28                     	;# 
  2207  0F29                     	;# 
  2208  0F2A                     	;# 
  2209  0F2B                     	;# 
  2210  0F2C                     	;# 
  2211  0F2D                     	;# 
  2212  0F2E                     	;# 
  2213  0F2F                     	;# 
  2214  0F30                     	;# 
  2215  0F31                     	;# 
  2216  0F32                     	;# 
  2217  0F33                     	;# 
  2218  0F34                     	;# 
  2219  0F35                     	;# 
  2220  0F36                     	;# 
  2221  0F37                     	;# 
  2222  0FE4                     	;# 
  2223  0FE5                     	;# 
  2224  0FE6                     	;# 
  2225  0FE7                     	;# 
  2226  0FE8                     	;# 
  2227  0FE9                     	;# 
  2228  0FEA                     	;# 
  2229  0FEB                     	;# 
  2230  0FED                     	;# 
  2231  0FEE                     	;# 
  2232  0FEF                     	;# 
  2233  0000                     	;# 
  2234  0001                     	;# 
  2235  0002                     	;# 
  2236  0003                     	;# 
  2237  0004                     	;# 
  2238  0005                     	;# 
  2239  0006                     	;# 
  2240  0007                     	;# 
  2241  0008                     	;# 
  2242  0009                     	;# 
  2243  000A                     	;# 
  2244  000B                     	;# 
  2245  000C                     	;# 
  2246  000D                     	;# 
  2247  000E                     	;# 
  2248  0010                     	;# 
  2249  0011                     	;# 
  2250  0012                     	;# 
  2251  0013                     	;# 
  2252  0014                     	;# 
  2253  0015                     	;# 
  2254  0016                     	;# 
  2255  0016                     	;# 
  2256  0017                     	;# 
  2257  0018                     	;# 
  2258  0019                     	;# 
  2259  001A                     	;# 
  2260  001A                     	;# 
  2261  001B                     	;# 
  2262  001B                     	;# 
  2263  001C                     	;# 
  2264  001D                     	;# 
  2265  001E                     	;# 
  2266  001F                     	;# 
  2267  008C                     	;# 
  2268  008D                     	;# 
  2269  008E                     	;# 
  2270  0090                     	;# 
  2271  0091                     	;# 
  2272  0092                     	;# 
  2273  0093                     	;# 
  2274  0094                     	;# 
  2275  0095                     	;# 
  2276  0096                     	;# 
  2277  0098                     	;# 
  2278  0099                     	;# 
  2279  009A                     	;# 
  2280  009B                     	;# 
  2281  009B                     	;# 
  2282  009C                     	;# 
  2283  009D                     	;# 
  2284  009E                     	;# 
  2285  009F                     	;# 
  2286  010C                     	;# 
  2287  010D                     	;# 
  2288  010E                     	;# 
  2289  0111                     	;# 
  2290  0112                     	;# 
  2291  0113                     	;# 
  2292  0114                     	;# 
  2293  0115                     	;# 
  2294  0116                     	;# 
  2295  0117                     	;# 
  2296  0118                     	;# 
  2297  0119                     	;# 
  2298  011C                     	;# 
  2299  018C                     	;# 
  2300  018D                     	;# 
  2301  018E                     	;# 
  2302  0191                     	;# 
  2303  0191                     	;# 
  2304  0192                     	;# 
  2305  0193                     	;# 
  2306  0193                     	;# 
  2307  0194                     	;# 
  2308  0195                     	;# 
  2309  0196                     	;# 
  2310  0197                     	;# 
  2311  0199                     	;# 
  2312  0199                     	;# 
  2313  0199                     	;# 
  2314  019A                     	;# 
  2315  019A                     	;# 
  2316  019A                     	;# 
  2317  019B                     	;# 
  2318  019B                     	;# 
  2319  019B                     	;# 
  2320  019B                     	;# 
  2321  019B                     	;# 
  2322  019C                     	;# 
  2323  019C                     	;# 
  2324  019C                     	;# 
  2325  019D                     	;# 
  2326  019D                     	;# 
  2327  019D                     	;# 
  2328  019E                     	;# 
  2329  019E                     	;# 
  2330  019E                     	;# 
  2331  019F                     	;# 
  2332  019F                     	;# 
  2333  019F                     	;# 
  2334  019F                     	;# 
  2335  019F                     	;# 
  2336  020C                     	;# 
  2337  020D                     	;# 
  2338  020E                     	;# 
  2339  0211                     	;# 
  2340  0211                     	;# 
  2341  0212                     	;# 
  2342  0212                     	;# 
  2343  0213                     	;# 
  2344  0213                     	;# 
  2345  0214                     	;# 
  2346  0214                     	;# 
  2347  0215                     	;# 
  2348  0215                     	;# 
  2349  0215                     	;# 
  2350  0215                     	;# 
  2351  0216                     	;# 
  2352  0216                     	;# 
  2353  0217                     	;# 
  2354  0217                     	;# 
  2355  028C                     	;# 
  2356  028D                     	;# 
  2357  028E                     	;# 
  2358  0291                     	;# 
  2359  0291                     	;# 
  2360  0292                     	;# 
  2361  0293                     	;# 
  2362  0294                     	;# 
  2363  0298                     	;# 
  2364  0298                     	;# 
  2365  0299                     	;# 
  2366  029A                     	;# 
  2367  029B                     	;# 
  2368  029E                     	;# 
  2369  030C                     	;# 
  2370  030D                     	;# 
  2371  030E                     	;# 
  2372  038C                     	;# 
  2373  038D                     	;# 
  2374  038E                     	;# 
  2375  0391                     	;# 
  2376  0392                     	;# 
  2377  0393                     	;# 
  2378  0394                     	;# 
  2379  0395                     	;# 
  2380  0396                     	;# 
  2381  0397                     	;# 
  2382  0398                     	;# 
  2383  0399                     	;# 
  2384  040E                     	;# 
  2385  0413                     	;# 
  2386  0413                     	;# 
  2387  0414                     	;# 
  2388  0414                     	;# 
  2389  0415                     	;# 
  2390  0416                     	;# 
  2391  0417                     	;# 
  2392  0418                     	;# 
  2393  041A                     	;# 
  2394  041A                     	;# 
  2395  041B                     	;# 
  2396  041B                     	;# 
  2397  041C                     	;# 
  2398  041D                     	;# 
  2399  041E                     	;# 
  2400  041F                     	;# 
  2401  0493                     	;# 
  2402  0494                     	;# 
  2403  0495                     	;# 
  2404  0496                     	;# 
  2405  049A                     	;# 
  2406  049B                     	;# 
  2407  049C                     	;# 
  2408  049D                     	;# 
  2409  058C                     	;# 
  2410  058C                     	;# 
  2411  058D                     	;# 
  2412  058E                     	;# 
  2413  058E                     	;# 
  2414  058F                     	;# 
  2415  0590                     	;# 
  2416  0590                     	;# 
  2417  0591                     	;# 
  2418  0592                     	;# 
  2419  0592                     	;# 
  2420  0593                     	;# 
  2421  0594                     	;# 
  2422  0594                     	;# 
  2423  0595                     	;# 
  2424  0596                     	;# 
  2425  0596                     	;# 
  2426  0597                     	;# 
  2427  0598                     	;# 
  2428  0599                     	;# 
  2429  059A                     	;# 
  2430  059B                     	;# 
  2431  059B                     	;# 
  2432  059C                     	;# 
  2433  059D                     	;# 
  2434  060C                     	;# 
  2435  060C                     	;# 
  2436  060D                     	;# 
  2437  060E                     	;# 
  2438  060F                     	;# 
  2439  060F                     	;# 
  2440  0610                     	;# 
  2441  0611                     	;# 
  2442  0612                     	;# 
  2443  0613                     	;# 
  2444  0614                     	;# 
  2445  0617                     	;# 
  2446  0618                     	;# 
  2447  0619                     	;# 
  2448  061A                     	;# 
  2449  061B                     	;# 
  2450  061C                     	;# 
  2451  0691                     	;# 
  2452  0692                     	;# 
  2453  0693                     	;# 
  2454  0694                     	;# 
  2455  0695                     	;# 
  2456  0696                     	;# 
  2457  0697                     	;# 
  2458  0699                     	;# 
  2459  069A                     	;# 
  2460  0711                     	;# 
  2461  0712                     	;# 
  2462  0713                     	;# 
  2463  0714                     	;# 
  2464  0715                     	;# 
  2465  0718                     	;# 
  2466  0718                     	;# 
  2467  0719                     	;# 
  2468  071A                     	;# 
  2469  071A                     	;# 
  2470  071B                     	;# 
  2471  071C                     	;# 
  2472  071D                     	;# 
  2473  0791                     	;# 
  2474  0791                     	;# 
  2475  0792                     	;# 
  2476  0793                     	;# 
  2477  0793                     	;# 
  2478  0794                     	;# 
  2479  0795                     	;# 
  2480  0795                     	;# 
  2481  0796                     	;# 
  2482  0797                     	;# 
  2483  0797                     	;# 
  2484  0798                     	;# 
  2485  0799                     	;# 
  2486  079A                     	;# 
  2487  080C                     	;# 
  2488  080C                     	;# 
  2489  080D                     	;# 
  2490  080E                     	;# 
  2491  080E                     	;# 
  2492  080F                     	;# 
  2493  0810                     	;# 
  2494  0810                     	;# 
  2495  0811                     	;# 
  2496  0812                     	;# 
  2497  0812                     	;# 
  2498  0813                     	;# 
  2499  0814                     	;# 
  2500  0815                     	;# 
  2501  0816                     	;# 
  2502  0817                     	;# 
  2503  0818                     	;# 
  2504  0819                     	;# 
  2505  081A                     	;# 
  2506  081A                     	;# 
  2507  081B                     	;# 
  2508  081C                     	;# 
  2509  081C                     	;# 
  2510  081D                     	;# 
  2511  088C                     	;# 
  2512  088D                     	;# 
  2513  088E                     	;# 
  2514  088F                     	;# 
  2515  088F                     	;# 
  2516  0890                     	;# 
  2517  0891                     	;# 
  2518  0892                     	;# 
  2519  0893                     	;# 
  2520  0893                     	;# 
  2521  0894                     	;# 
  2522  0895                     	;# 
  2523  0896                     	;# 
  2524  0897                     	;# 
  2525  0897                     	;# 
  2526  0898                     	;# 
  2527  0899                     	;# 
  2528  0D8C                     	;# 
  2529  0D8C                     	;# 
  2530  0D8D                     	;# 
  2531  0D8E                     	;# 
  2532  0D8F                     	;# 
  2533  0D8F                     	;# 
  2534  0D90                     	;# 
  2535  0D91                     	;# 
  2536  0D92                     	;# 
  2537  0D92                     	;# 
  2538  0D93                     	;# 
  2539  0D94                     	;# 
  2540  0D95                     	;# 
  2541  0D95                     	;# 
  2542  0D96                     	;# 
  2543  0D97                     	;# 
  2544  0D98                     	;# 
  2545  0D99                     	;# 
  2546  0D9A                     	;# 
  2547  0D9B                     	;# 
  2548  0D9C                     	;# 
  2549  0D9D                     	;# 
  2550  0D9E                     	;# 
  2551  0D9E                     	;# 
  2552  0D9F                     	;# 
  2553  0DA0                     	;# 
  2554  0DA1                     	;# 
  2555  0DA1                     	;# 
  2556  0DA2                     	;# 
  2557  0DA3                     	;# 
  2558  0DA4                     	;# 
  2559  0DA4                     	;# 
  2560  0DA5                     	;# 
  2561  0DA6                     	;# 
  2562  0DA7                     	;# 
  2563  0DA7                     	;# 
  2564  0DA8                     	;# 
  2565  0DA9                     	;# 
  2566  0DAA                     	;# 
  2567  0DAB                     	;# 
  2568  0DAC                     	;# 
  2569  0DAD                     	;# 
  2570  0DAE                     	;# 
  2571  0DAF                     	;# 
  2572  0E0F                     	;# 
  2573  0E10                     	;# 
  2574  0E11                     	;# 
  2575  0E12                     	;# 
  2576  0E13                     	;# 
  2577  0E14                     	;# 
  2578  0E15                     	;# 
  2579  0E16                     	;# 
  2580  0E17                     	;# 
  2581  0E18                     	;# 
  2582  0E19                     	;# 
  2583  0E1A                     	;# 
  2584  0E1B                     	;# 
  2585  0E1C                     	;# 
  2586  0E1D                     	;# 
  2587  0E1E                     	;# 
  2588  0E1F                     	;# 
  2589  0E20                     	;# 
  2590  0E21                     	;# 
  2591  0E22                     	;# 
  2592  0E23                     	;# 
  2593  0E24                     	;# 
  2594  0E25                     	;# 
  2595  0E26                     	;# 
  2596  0E27                     	;# 
  2597  0E28                     	;# 
  2598  0E29                     	;# 
  2599  0E2A                     	;# 
  2600  0E2B                     	;# 
  2601  0E2C                     	;# 
  2602  0E2D                     	;# 
  2603  0E2E                     	;# 
  2604  0E90                     	;# 
  2605  0E91                     	;# 
  2606  0E92                     	;# 
  2607  0E94                     	;# 
  2608  0E95                     	;# 
  2609  0E9C                     	;# 
  2610  0E9D                     	;# 
  2611  0E9E                     	;# 
  2612  0E9F                     	;# 
  2613  0EA0                     	;# 
  2614  0EA1                     	;# 
  2615  0EA2                     	;# 
  2616  0EA3                     	;# 
  2617  0EA4                     	;# 
  2618  0EA5                     	;# 
  2619  0EA6                     	;# 
  2620  0EA7                     	;# 
  2621  0F0F                     	;# 
  2622  0F10                     	;# 
  2623  0F11                     	;# 
  2624  0F12                     	;# 
  2625  0F13                     	;# 
  2626  0F14                     	;# 
  2627  0F15                     	;# 
  2628  0F16                     	;# 
  2629  0F17                     	;# 
  2630  0F18                     	;# 
  2631  0F19                     	;# 
  2632  0F1A                     	;# 
  2633  0F1B                     	;# 
  2634  0F1C                     	;# 
  2635  0F1D                     	;# 
  2636  0F1E                     	;# 
  2637  0F1F                     	;# 
  2638  0F20                     	;# 
  2639  0F21                     	;# 
  2640  0F22                     	;# 
  2641  0F23                     	;# 
  2642  0F24                     	;# 
  2643  0F25                     	;# 
  2644  0F26                     	;# 
  2645  0F27                     	;# 
  2646  0F28                     	;# 
  2647  0F29                     	;# 
  2648  0F2A                     	;# 
  2649  0F2B                     	;# 
  2650  0F2C                     	;# 
  2651  0F2D                     	;# 
  2652  0F2E                     	;# 
  2653  0F2F                     	;# 
  2654  0F30                     	;# 
  2655  0F31                     	;# 
  2656  0F32                     	;# 
  2657  0F33                     	;# 
  2658  0F34                     	;# 
  2659  0F35                     	;# 
  2660  0F36                     	;# 
  2661  0F37                     	;# 
  2662  0FE4                     	;# 
  2663  0FE5                     	;# 
  2664  0FE6                     	;# 
  2665  0FE7                     	;# 
  2666  0FE8                     	;# 
  2667  0FE9                     	;# 
  2668  0FEA                     	;# 
  2669  0FEB                     	;# 
  2670  0FED                     	;# 
  2671  0FEE                     	;# 
  2672  0FEF                     	;# 
  2673                           
  2674                           	psect	stringtext
  2675  0800                     __pstringtext:	
  2676  0800                     _hexpowers:	
  2677  0800  3401               	retlw	1
  2678  0801  3400               	retlw	0
  2679  0802  3410               	retlw	16
  2680  0803  3400               	retlw	0
  2681  0804  3400               	retlw	0
  2682  0805  3401               	retlw	1
  2683  0806  3400               	retlw	0
  2684  0807  3410               	retlw	16
  2685  0808                     __end_of_hexpowers:	
  2686  0010                     _PIR1bits	set	16
  2687  001B                     _PR2	set	27
  2688  001E                     _T2CLKCON	set	30
  2689  001C                     _T2CON	set	28
  2690  001C                     _T2CONbits	set	28
  2691  001D                     _T2HLT	set	29
  2692  001D                     _T2HLTbits	set	29
  2693  001B                     _T2PR	set	27
  2694  001F                     _T2RST	set	31
  2695  001F                     _T2RSTbits	set	31
  2696  001A                     _T2TMR	set	26
  2697  001A                     _TMR2	set	26
  2698  005F                     _GIE	set	95
  2699  0072                     _RC2	set	114
  2700  009D                     _ADCON0	set	157
  2701  009D                     _ADCON0bits	set	157
  2702  009E                     _ADCON1	set	158
  2703  009F                     _ADCON2	set	159
  2704  009C                     _ADRESH	set	156
  2705  009B                     _ADRESL	set	155
  2706  0095                     _OPTION_REGbits	set	149
  2707  0099                     _OSCCON	set	153
  2708  009A                     _OSCSTAT	set	154
  2709  0098                     _OSCTUNE	set	152
  2710  008C                     _TRISA	set	140
  2711  008D                     _TRISB	set	141
  2712  008E                     _TRISC	set	142
  2713  010C                     _LATA	set	268
  2714  010D                     _LATB	set	269
  2715  010E                     _LATC	set	270
  2716  0862                     _LATA2	set	2146
  2717  0864                     _LATA4	set	2148
  2718  0875                     _LATC5	set	2165
  2719  018C                     _ANSELA	set	396
  2720  018D                     _ANSELB	set	397
  2721  018E                     _ANSELC	set	398
  2722  019F                     _BAUD1CON	set	415
  2723  0199                     _RC1REG	set	409
  2724  019D                     _RC1STA	set	413
  2725  019D                     _RC1STAbits	set	413
  2726  019C                     _SPBRGH	set	412
  2727  019B                     _SPBRGL	set	411
  2728  019A                     _TX1REG	set	410
  2729  019E                     _TX1STA	set	414
  2730  020D                     _WPUB	set	525
  2731  020E                     _WPUC	set	526
  2732  0E0F                     _PPSLOCK	set	3599
  2733  0E0F                     _PPSLOCKbits	set	3599
  2734  0E24                     _RXPPS	set	3620
  2735  0E9F                     _RB7PPS	set	3743
  2736  0808                     STR_7:	
  2737  0808  3430               	retlw	48	;'0'
  2738  0809  3431               	retlw	49	;'1'
  2739  080A  3432               	retlw	50	;'2'
  2740  080B  3433               	retlw	51	;'3'
  2741  080C  3434               	retlw	52	;'4'
  2742  080D  3435               	retlw	53	;'5'
  2743  080E  3436               	retlw	54	;'6'
  2744  080F  3437               	retlw	55	;'7'
  2745  0810  3438               	retlw	56	;'8'
  2746  0811  3439               	retlw	57	;'9'
  2747  0812  3461               	retlw	97	;'a'
  2748  0813  3462               	retlw	98	;'b'
  2749  0814  3463               	retlw	99	;'c'
  2750  0815  3464               	retlw	100	;'d'
  2751  0816  3465               	retlw	101	;'e'
  2752  0817  3466               	retlw	102	;'f'
  2753  0818  3400               	retlw	0
  2754  0819                     STR_6:	
  2755  0819  3453               	retlw	83	;'S'
  2756  081A  3455               	retlw	85	;'U'
  2757  081B  3457               	retlw	87	;'W'
  2758  081C  342C               	retlw	44	;','
  2759  081D  3432               	retlw	50	;'2'
  2760  081E  3441               	retlw	65	;'A'
  2761  081F  3431               	retlw	49	;'1'
  2762  0820  3439               	retlw	57	;'9'
  2763  0821  342C               	retlw	44	;','
  2764  0822  3425               	retlw	37	;'%'
  2765  0823  3430               	retlw	48	;'0'
  2766  0824  3432               	retlw	50	;'2'
  2767  0825  3478               	retlw	120	;'x'
  2768  0826  340D               	retlw	13
  2769  0827  340A               	retlw	10
  2770  0828  3400               	retlw	0
  2771  0829                     STR_4:	
  2772  0829  3453               	retlw	83	;'S'
  2773  082A  342D               	retlw	45	;'-'
  2774  082B  342C               	retlw	44	;','
  2775  082C  344D               	retlw	77	;'M'
  2776  082D  3461               	retlw	97	;'a'
  2777  082E  3473               	retlw	115	;'s'
  2778  082F  3474               	retlw	116	;'t'
  2779  0830  3465               	retlw	101	;'e'
  2780  0831  3472               	retlw	114	;'r'
  2781  0832  3473               	retlw	115	;'s'
  2782  0833  3431               	retlw	49	;'1'
  2783  0834  3436               	retlw	54	;'6'
  2784  0835  3400               	retlw	0
  2785  0836                     STR_3:	
  2786  0836  3453               	retlw	83	;'S'
  2787  0837  3452               	retlw	82	;'R'
  2788  0838  342C               	retlw	44	;','
  2789  0839  3432               	retlw	50	;'2'
  2790  083A  3430               	retlw	48	;'0'
  2791  083B  3430               	retlw	48	;'0'
  2792  083C  3430               	retlw	48	;'0'
  2793  083D  3430               	retlw	48	;'0'
  2794  083E  3430               	retlw	48	;'0'
  2795  083F  3430               	retlw	48	;'0'
  2796  0840  3430               	retlw	48	;'0'
  2797  0841  3400               	retlw	0
  2798  0842                     STR_2:	
  2799  0842  3453               	retlw	83	;'S'
  2800  0843  3453               	retlw	83	;'S'
  2801  0844  342C               	retlw	44	;','
  2802  0845  3443               	retlw	67	;'C'
  2803  0846  3430               	retlw	48	;'0'
  2804  0847  3430               	retlw	48	;'0'
  2805  0848  3430               	retlw	48	;'0'
  2806  0849  3430               	retlw	48	;'0'
  2807  084A  3430               	retlw	48	;'0'
  2808  084B  3430               	retlw	48	;'0'
  2809  084C  3430               	retlw	48	;'0'
  2810  084D  3400               	retlw	0
  2811  084E                     STR_1:	
  2812  084E  3453               	retlw	83	;'S'
  2813  084F  3446               	retlw	70	;'F'
  2814  0850  342C               	retlw	44	;','
  2815  0851  3432               	retlw	50	;'2'
  2816  0852  3400               	retlw	0
  2817  0853                     STR_5:	
  2818  0853  3452               	retlw	82	;'R'
  2819  0854  342C               	retlw	44	;','
  2820  0855  3431               	retlw	49	;'1'
  2821  0856  3400               	retlw	0
  2822                           
  2823                           ; #config settings
  2824  0000                     
  2825                           	psect	cinit
  2826  07F6                     start_initialization:	
  2827  07F6                     __initialization:	
  2828                           
  2829                           ; Clear objects allocated to BANK0
  2830  07F6  3020               	movlw	low __pbssBANK0
  2831  07F7  0084               	movwf	4
  2832  07F8  3000               	movlw	high __pbssBANK0
  2833  07F9  0085               	movwf	5
  2834  07FA  3020               	movlw	32
  2835  07FB  3184  24FC         	fcall	clear_ram0
  2836  07FD                     end_of_initialization:	
  2837                           ;End of C runtime variable initialization code
  2838                           
  2839  07FD                     __end_of__initialization:	
  2840  07FD  0020               	movlb	0
  2841  07FE  3186  2E50         	ljmp	_main	;jump to C main() function
  2842                           
  2843                           	psect	bssBANK0
  2844  0020                     __pbssBANK0:	
  2845  0020                     _rxBuffer:	
  2846  0020                     	ds	32
  2847                           
  2848                           	psect	clrtext
  2849  04FC                     clear_ram0:	
  2850                           ;	Called with FSR0 containing the base address, and
  2851                           ;	WREG with the size to clear
  2852                           
  2853  04FC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2854  04FD                     clrloop0:	
  2855  04FD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2856  04FE  3101               	addfsr 0,1
  2857  04FF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2858  0500  2CFD               	goto	clrloop0	;have we reached the end yet?
  2859  0501  3400               	retlw	0	;all done for this memory range, return
  2860                           
  2861                           	psect	cstackCOMMON
  2862  0070                     __pcstackCOMMON:	
  2863  0070                     ?_isdigit:	
  2864  0070                     ?_TMR2_Start:	
  2865                           ; 1 bit 
  2866                           
  2867  0070                     ??_TMR2_Start:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870  0070                     ?_OSCILLATOR_Initialize:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873  0070                     ??_OSCILLATOR_Initialize:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876  0070                     ?_ADC1_Initialize:	
  2877                           ; 1 bytes @ 0x0
  2878                           
  2879  0070                     ??_ADC1_Initialize:	
  2880                           ; 1 bytes @ 0x0
  2881                           
  2882  0070                     ?_mygets:	
  2883                           ; 1 bytes @ 0x0
  2884                           
  2885  0070                     ??_mygets:	
  2886                           ; 1 bytes @ 0x0
  2887                           
  2888  0070                     ??_isdigit:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891  0070                     ?_TMR2_Initialize:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  0070                     ??_TMR2_Initialize:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  0070                     ?_TMR2_HasOverflowOccured:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  0070                     ??_TMR2_HasOverflowOccured:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  0070                     ?_EUSART_Initialize:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  0070                     ??_EUSART_Initialize:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0070                     ?_EUSART_Read:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912  0070                     ??_EUSART_Read:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915  0070                     ?_EUSART_Write:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918  0070                     ??_EUSART_Write:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921  0070                     ?_getch:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  0070                     ??_getch:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927  0070                     ?_putch:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  0070                     ?_PIN_MANAGER_Initialize:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  0070                     ??_PIN_MANAGER_Initialize:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936  0070                     ?_SYSTEM_Initialize:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  0070                     ?_main:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  0070                     ?_ADC1_GetConversion:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945  0070                     ?___wmul:	
  2946                           ; 2 bytes @ 0x0
  2947                           
  2948  0070                     ?___lwdiv:	
  2949                           ; 2 bytes @ 0x0
  2950                           
  2951  0070                     TMR2_HasOverflowOccured@status:	
  2952                           ; 2 bytes @ 0x0
  2953                           
  2954  0070                     EUSART_Write@txData:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0070                     PIN_MANAGER_Initialize@state:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960  0070                     _isdigit$683:	
  2961                           ; 1 bytes @ 0x0
  2962                           
  2963  0070                     ___wmul@multiplier:	
  2964                           ; 1 bytes @ 0x0
  2965                           
  2966  0070                     ___lwdiv@divisor:	
  2967                           ; 2 bytes @ 0x0
  2968                           
  2969                           
  2970                           ; 2 bytes @ 0x0
  2971  0070                     	ds	1
  2972  0071                     ??_putch:	
  2973  0071                     ??_SYSTEM_Initialize:	
  2974                           ; 1 bytes @ 0x1
  2975                           
  2976  0071                     putch@txData:	
  2977                           ; 1 bytes @ 0x1
  2978                           
  2979  0071                     mygets@c:	
  2980                           ; 1 bytes @ 0x1
  2981                           
  2982  0071                     isdigit@c:	
  2983                           ; 1 bytes @ 0x1
  2984                           
  2985                           
  2986                           ; 1 bytes @ 0x1
  2987  0071                     	ds	1
  2988  0072                     ?_cputs:	
  2989  0072                     ??_ADC1_GetConversion:	
  2990                           ; 1 bytes @ 0x2
  2991                           
  2992  0072                     mygets@i:	
  2993                           ; 1 bytes @ 0x2
  2994                           
  2995  0072                     ___wmul@multiplicand:	
  2996                           ; 1 bytes @ 0x2
  2997                           
  2998  0072                     ___lwdiv@dividend:	
  2999                           ; 2 bytes @ 0x2
  3000                           
  3001  0072                     cputs@s:	
  3002                           ; 2 bytes @ 0x2
  3003                           
  3004                           
  3005                           ; 2 bytes @ 0x2
  3006  0072                     	ds	1
  3007  0073                     ADC1_GetConversion@channel:	
  3008  0073                     mygets@p:	
  3009                           ; 1 bytes @ 0x3
  3010                           
  3011                           
  3012                           ; 1 bytes @ 0x3
  3013  0073                     	ds	1
  3014  0074                     ??_cputs:	
  3015  0074                     ??___wmul:	
  3016                           ; 1 bytes @ 0x4
  3017                           
  3018  0074                     ??___lwdiv:	
  3019                           ; 1 bytes @ 0x4
  3020                           
  3021  0074                     ___wmul@product:	
  3022                           ; 1 bytes @ 0x4
  3023                           
  3024                           
  3025                           ; 2 bytes @ 0x4
  3026  0074                     	ds	1
  3027  0075                     ?_puts:	
  3028  0075                     ___lwdiv@quotient:	
  3029                           ; 2 bytes @ 0x5
  3030                           
  3031  0075                     puts@s:	
  3032                           ; 2 bytes @ 0x5
  3033                           
  3034                           
  3035                           ; 2 bytes @ 0x5
  3036  0075                     	ds	2
  3037  0077                     ?_sendCMD:	
  3038  0077                     ??_puts:	
  3039                           ; 1 bytes @ 0x7
  3040                           
  3041  0077                     ___lwdiv@counter:	
  3042                           ; 1 bytes @ 0x7
  3043                           
  3044  0077                     sendCMD@cmd:	
  3045                           ; 1 bytes @ 0x7
  3046                           
  3047                           
  3048                           ; 2 bytes @ 0x7
  3049  0077                     	ds	1
  3050  0078                     ?_printf:	
  3051  0078                     printf@f:	
  3052                           ; 2 bytes @ 0x8
  3053                           
  3054                           
  3055                           ; 2 bytes @ 0x8
  3056  0078                     	ds	1
  3057  0079                     ??_sendCMD:	
  3058                           
  3059                           ; 1 bytes @ 0x9
  3060  0079                     	ds	3
  3061  007C                     main@value:	
  3062                           
  3063                           ; 1 bytes @ 0xC
  3064  007C                     	ds	1
  3065  007D                     main@time:	
  3066                           
  3067                           ; 1 bytes @ 0xD
  3068  007D                     	ds	1
  3069                           
  3070                           	psect	cstackBANK0
  3071  0040                     __pcstackBANK0:	
  3072  0040                     ??_printf:	
  3073                           
  3074                           ; 1 bytes @ 0x0
  3075  0040                     	ds	4
  3076  0044                     printf@idx:	
  3077                           
  3078                           ; 1 bytes @ 0x4
  3079  0044                     	ds	1
  3080  0045                     printf@ap:	
  3081                           
  3082                           ; 1 bytes @ 0x5
  3083  0045                     	ds	1
  3084  0046                     printf@flag:	
  3085                           
  3086                           ; 1 bytes @ 0x6
  3087  0046                     	ds	1
  3088  0047                     printf@val:	
  3089                           
  3090                           ; 2 bytes @ 0x7
  3091  0047                     	ds	2
  3092  0049                     printf@prec:	
  3093                           
  3094                           ; 1 bytes @ 0x9
  3095  0049                     	ds	1
  3096  004A                     printf@width:	
  3097                           
  3098                           ; 2 bytes @ 0xA
  3099  004A                     	ds	2
  3100  004C                     printf@c:	
  3101                           
  3102                           ; 1 bytes @ 0xC
  3103  004C                     	ds	1
  3104  004D                     ??_main:	
  3105                           
  3106                           ; 1 bytes @ 0xD
  3107  004D                     	ds	3
  3108                           
  3109                           	psect	maintext
  3110  0650                     __pmaintext:	
  3111 ;;
  3112 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3113 ;;
  3114 ;; *************** function _main *****************
  3115 ;; Defined at:
  3116 ;;		line 58 in file "main.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  value           1   12[COMMON] unsigned char 
  3121 ;;  time            1   13[COMMON] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : B1F/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3133 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3134 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3135 ;;Total ram usage:        5 bytes
  3136 ;; Hardware stack levels required when called:    5
  3137 ;; This function calls:
  3138 ;;		_ADC1_GetConversion
  3139 ;;		_SYSTEM_Initialize
  3140 ;;		_TMR2_HasOverflowOccured
  3141 ;;		_mygets
  3142 ;;		_printf
  3143 ;;		_sendCMD
  3144 ;; This function is called by:
  3145 ;;		Startup code after reset
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           
  3150                           ;psect for function _main
  3151  0650                     _main:	
  3152                           
  3153                           ;main.c: 61: SYSTEM_Initialize();
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3157  0650  3185  2562  3186   	fcall	_SYSTEM_Initialize
  3158                           
  3159                           ;main.c: 64: do { LATC5 = 1; } while(0);
  3160  0653  0022               	movlb	2	; select bank2
  3161  0654  168E               	bsf	14,5	;volatile
  3162                           
  3163                           ;main.c: 65: do { LATA4 = 1; } while(0);
  3164  0655  160C               	bsf	12,4	;volatile
  3165                           
  3166                           ;main.c: 66: mygets();
  3167  0656  3185  25BA  3186   	fcall	_mygets
  3168                           
  3169                           ;main.c: 67: sendCMD( "SF,2");
  3170  0659  304E               	movlw	low (STR_1| (0+32768))
  3171  065A  00F7               	movwf	sendCMD@cmd
  3172  065B  3088               	movlw	high (STR_1| (0+32768))
  3173  065C  00F8               	movwf	sendCMD@cmd+1
  3174  065D  3185  2527  3186   	fcall	_sendCMD
  3175                           
  3176                           ;main.c: 68: sendCMD( "SS,C0000000");
  3177  0660  3042               	movlw	low (STR_2| (0+32768))
  3178  0661  00F7               	movwf	sendCMD@cmd
  3179  0662  3088               	movlw	high (STR_2| (0+32768))
  3180  0663  00F8               	movwf	sendCMD@cmd+1
  3181  0664  3185  2527  3186   	fcall	_sendCMD
  3182                           
  3183                           ;main.c: 69: sendCMD( "SR,20000000");
  3184  0667  3036               	movlw	low (STR_3| (0+32768))
  3185  0668  00F7               	movwf	sendCMD@cmd
  3186  0669  3088               	movlw	high (STR_3| (0+32768))
  3187  066A  00F8               	movwf	sendCMD@cmd+1
  3188  066B  3185  2527  3186   	fcall	_sendCMD
  3189                           
  3190                           ;main.c: 70: sendCMD( "S-,Masters16");
  3191  066E  3029               	movlw	low (STR_4| (0+32768))
  3192  066F  00F7               	movwf	sendCMD@cmd
  3193  0670  3088               	movlw	high (STR_4| (0+32768))
  3194  0671  00F8               	movwf	sendCMD@cmd+1
  3195  0672  3185  2527  3186   	fcall	_sendCMD
  3196                           
  3197                           ;main.c: 71: sendCMD( "R,1");
  3198  0675  3053               	movlw	low (STR_5| (0+32768))
  3199  0676  00F7               	movwf	sendCMD@cmd
  3200  0677  3088               	movlw	high (STR_5| (0+32768))
  3201  0678  00F8               	movwf	sendCMD@cmd+1
  3202  0679  3185  2527  3186   	fcall	_sendCMD
  3203                           
  3204                           ;main.c: 72: mygets();
  3205  067C  3185  25BA  3186   	fcall	_mygets
  3206                           
  3207                           ;main.c: 73: _delay((unsigned long)((640)*(16000000/4000.0)));
  3208  067F  300D               	movlw	13
  3209  0680  0020               	movlb	0	; select bank0
  3210  0681  00CF               	movwf	??_main+2
  3211  0682  30FD               	movlw	253
  3212  0683  00CE               	movwf	??_main+1
  3213  0684  30AD               	movlw	173
  3214  0685  00CD               	movwf	??_main
  3215  0686                     u767:	
  3216  0686  0BCD               	decfsz	??_main,f
  3217  0687  2E86               	goto	u767
  3218  0688  0BCE               	decfsz	??_main+1,f
  3219  0689  2E86               	goto	u767
  3220  068A  0BCF               	decfsz	??_main+2,f
  3221  068B  2E86               	goto	u767
  3222  068C  0000               	nop
  3223  068D                     l220:	
  3224                           ;main.c: 74: while( !RC2);
  3225                           
  3226  068D  0020               	movlb	0	; select bank0
  3227  068E  1D0E               	btfss	14,2	;volatile
  3228  068F  2E8D               	goto	l220
  3229  0690                     l1225:	
  3230                           ;main.c: 76: while (1)
  3231                           
  3232                           
  3233                           ;main.c: 77: {
  3234                           ;main.c: 78: uint8_t time;
  3235                           ;main.c: 80: if ( TMR2_HasOverflowOccured()) {
  3236  0690  3185  2513  3186   	fcall	_TMR2_HasOverflowOccured
  3237  0693  3A00               	xorlw	0
  3238  0694  1903               	skipnz
  3239  0695  2E9B               	goto	l1229
  3240                           
  3241                           ;main.c: 81: time++;
  3242  0696  3001               	movlw	1
  3243  0697  0020               	movlb	0	; select bank0
  3244  0698  00CD               	movwf	??_main
  3245  0699  084D               	movf	??_main,w
  3246  069A  07FD               	addwf	main@time,f
  3247  069B                     l1229:	
  3248                           
  3249                           ;main.c: 82: }
  3250                           ;main.c: 84: if ( time >= 50)
  3251  069B  3032               	movlw	50
  3252  069C  027D               	subwf	main@time,w
  3253  069D  1C03               	skipc
  3254  069E  2E90               	goto	l1225
  3255                           
  3256                           ;main.c: 85: {
  3257                           ;main.c: 86: uint8_t value;
  3258                           ;main.c: 87: time = 0;
  3259  069F  01FD               	clrf	main@time
  3260                           
  3261                           ;main.c: 88: do { LATA2 = ~LATA2; } while(0);
  3262  06A0  3004               	movlw	4
  3263  06A1  0022               	movlb	2	; select bank2
  3264  06A2  068C               	xorwf	12,f
  3265                           
  3266                           ;main.c: 90: value = ADC1_GetConversion(POT)>>9;
  3267  06A3  3004               	movlw	4
  3268  06A4  3185  2585  3186   	fcall	_ADC1_GetConversion
  3269  06A7  0870               	movf	?_ADC1_GetConversion,w
  3270  06A8  0020               	movlb	0	; select bank0
  3271  06A9  00CD               	movwf	??_main
  3272  06AA  0871               	movf	?_ADC1_GetConversion+1,w
  3273  06AB  00CE               	movwf	??_main+1
  3274  06AC  3009               	movlw	9
  3275  06AD                     u755:	
  3276  06AD  36CE               	lsrf	??_main+1,f
  3277  06AE  0CCD               	rrf	??_main,f
  3278  06AF  0B89               	decfsz	9,f
  3279  06B0  2EAD               	goto	u755
  3280  06B1  084D               	movf	??_main,w
  3281  06B2  00CF               	movwf	??_main+2
  3282  06B3  084F               	movf	??_main+2,w
  3283  06B4  00FC               	movwf	main@value
  3284                           
  3285                           ;main.c: 92: printf( "SUW,2A19,%02x\r\n", value);
  3286  06B5  3019               	movlw	low (STR_6| (0+32768))
  3287  06B6  00F8               	movwf	printf@f
  3288  06B7  3088               	movlw	high (STR_6| (0+32768))
  3289  06B8  00F9               	movwf	printf@f+1
  3290  06B9  087C               	movf	main@value,w
  3291  06BA  00CD               	movwf	??_main
  3292  06BB  01CE               	clrf	??_main+1
  3293  06BC  084D               	movf	??_main,w
  3294  06BD  00FA               	movwf	?_printf+2
  3295  06BE  084E               	movf	??_main+1,w
  3296  06BF  00FB               	movwf	?_printf+3
  3297  06C0  3186  26C7  3186   	fcall	_printf
  3298                           
  3299                           ;main.c: 93: mygets();
  3300  06C3  3185  25BA  3186   	fcall	_mygets
  3301  06C6  2E90               	goto	l1225
  3302  06C7                     __end_of_main:	
  3303                           
  3304                           	psect	text1
  3305  0527                     __ptext1:	
  3306 ;; *************** function _sendCMD *****************
  3307 ;; Defined at:
  3308 ;;		line 110 in file "main.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  cmd             2    7[COMMON] PTR const unsigned char 
  3311 ;;		 -> STR_5(4), STR_4(13), STR_3(12), STR_2(12), 
  3312 ;;		 -> STR_1(5), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;Total ram usage:        2 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    4
  3331 ;; This function calls:
  3332 ;;		_mygets
  3333 ;;		_puts
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _sendCMD
  3341  0527                     _sendCMD:	
  3342                           
  3343                           ;main.c: 112: puts( cmd);
  3344                           
  3345                           ;incstack = 0
  3346                           ; Regs used in _sendCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3347  0527  0878               	movf	sendCMD@cmd+1,w
  3348  0528  00F6               	movwf	puts@s+1
  3349  0529  0877               	movf	sendCMD@cmd,w
  3350  052A  00F5               	movwf	puts@s
  3351  052B  3185  253C  3185   	fcall	_puts
  3352                           
  3353                           ;main.c: 113: mygets();
  3354  052E  3185  25BA         	fcall	_mygets
  3355  0530  0008               	return
  3356  0531                     __end_of_sendCMD:	
  3357                           
  3358                           	psect	text2
  3359  053C                     __ptext2:	
  3360 ;; *************** function _puts *****************
  3361 ;; Defined at:
  3362 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\puts.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  s               2    5[COMMON] PTR const unsigned char 
  3365 ;;		 -> STR_5(4), STR_4(13), STR_3(12), STR_2(12), 
  3366 ;;		 -> STR_1(5), 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  2    5[COMMON] int 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;Total ram usage:        2 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    3
  3385 ;; This function calls:
  3386 ;;		_cputs
  3387 ;;		_putch
  3388 ;; This function is called by:
  3389 ;;		_sendCMD
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _puts
  3395  053C                     _puts:	
  3396                           
  3397                           ;incstack = 0
  3398                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3399  053C  0876               	movf	puts@s+1,w
  3400  053D  00F3               	movwf	cputs@s+1
  3401  053E  0875               	movf	puts@s,w
  3402  053F  00F2               	movwf	cputs@s
  3403  0540  3185  2571  3185   	fcall	_cputs
  3404  0543  300A               	movlw	10
  3405  0544  3184  24F1         	fcall	_putch
  3406  0546  0008               	return
  3407  0547                     __end_of_puts:	
  3408                           
  3409                           	psect	text3
  3410  0571                     __ptext3:	
  3411 ;; *************** function _cputs *****************
  3412 ;; Defined at:
  3413 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\cputs.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  s               2    2[COMMON] PTR const unsigned char 
  3416 ;;		 -> STR_5(4), STR_4(13), STR_3(12), STR_2(12), 
  3417 ;;		 -> STR_1(5), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;Total ram usage:        3 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    2
  3436 ;; This function calls:
  3437 ;;		_putch
  3438 ;; This function is called by:
  3439 ;;		_puts
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _cputs
  3445  0571                     _cputs:	
  3446  0571                     l1051:	
  3447                           ;incstack = 0
  3448                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3449                           
  3450  0571  0872               	movf	cputs@s,w
  3451  0572  0084               	movwf	4
  3452  0573  0873               	movf	cputs@s+1,w
  3453  0574  0085               	movwf	5
  3454  0575  0012               	moviw fsr0++
  3455  0576  1903               	btfsc	3,2
  3456  0577  0008               	return
  3457  0578  0872               	movf	cputs@s,w
  3458  0579  0084               	movwf	4
  3459  057A  0873               	movf	cputs@s+1,w
  3460  057B  0085               	movwf	5
  3461  057C  0800               	movf	0,w	;code access
  3462  057D  3184  24F1  3185   	fcall	_putch
  3463  0580  3001               	movlw	1
  3464  0581  07F2               	addwf	cputs@s,f
  3465  0582  3000               	movlw	0
  3466  0583  3DF3               	addwfc	cputs@s+1,f
  3467  0584  2D71               	goto	l1051
  3468  0585                     __end_of_cputs:	
  3469                           
  3470                           	psect	text4
  3471  05BA                     __ptext4:	
  3472 ;; *************** function _mygets *****************
  3473 ;; Defined at:
  3474 ;;		line 100 in file "main.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  p               1    3[COMMON] PTR unsigned char 
  3479 ;;		 -> rxBuffer(32), 
  3480 ;;  i               1    2[COMMON] unsigned char 
  3481 ;;  c               1    1[COMMON] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;Total ram usage:        4 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    2
  3498 ;; This function calls:
  3499 ;;		_getch
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;;		_sendCMD
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           
  3507                           ;psect for function _mygets
  3508  05BA                     _mygets:	
  3509                           
  3510                           ;main.c: 102: char c, i=0;
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in _mygets: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3514  05BA  01F2               	clrf	mygets@i
  3515                           
  3516                           ;main.c: 103: char *p = rxBuffer;
  3517  05BB  3020               	movlw	(low (_rxBuffer| 0))& (0+255)
  3518  05BC  00F0               	movwf	??_mygets
  3519  05BD  0870               	movf	??_mygets,w
  3520  05BE  00F3               	movwf	mygets@p
  3521                           
  3522                           ;main.c: 104: while ( (i++ < sizeof(rxBuffer)) && (( c = getch()) != '\n')) {
  3523  05BF  2DCB               	goto	l803
  3524  05C0                     l799:	
  3525                           
  3526                           ;main.c: 105: *p++ = c;
  3527  05C0  0871               	movf	mygets@c,w
  3528  05C1  00F0               	movwf	??_mygets
  3529  05C2  0873               	movf	mygets@p,w
  3530  05C3  0086               	movwf	6
  3531  05C4  0187               	clrf	7
  3532  05C5  0870               	movf	??_mygets,w
  3533  05C6  0081               	movwf	1
  3534  05C7  3001               	movlw	1
  3535  05C8  00F0               	movwf	??_mygets
  3536  05C9  0870               	movf	??_mygets,w
  3537  05CA  07F3               	addwf	mygets@p,f
  3538  05CB                     l803:	
  3539  05CB  0872               	movf	mygets@i,w
  3540  05CC  0AF2               	incf	mygets@i,f
  3541  05CD  00F0               	movwf	??_mygets
  3542  05CE  3020               	movlw	32
  3543  05CF  0270               	subwf	??_mygets,w
  3544  05D0  1803               	skipnc
  3545  05D1  2DDC               	goto	l807
  3546  05D2  3184  24EE  3185   	fcall	_getch
  3547  05D5  00F0               	movwf	??_mygets
  3548  05D6  0870               	movf	??_mygets,w
  3549  05D7  00F1               	movwf	mygets@c
  3550  05D8  300A               	movlw	10
  3551  05D9  0671               	xorwf	mygets@c,w
  3552  05DA  1D03               	btfss	3,2
  3553  05DB  2DC0               	goto	l799
  3554  05DC                     l807:	
  3555                           
  3556                           ;main.c: 106: }
  3557                           ;main.c: 107: *p = '\0';
  3558  05DC  0873               	movf	mygets@p,w
  3559  05DD  0086               	movwf	6
  3560  05DE  0187               	clrf	7
  3561  05DF  0181               	clrf	1
  3562  05E0  0008               	return
  3563  05E1                     __end_of_mygets:	
  3564                           
  3565                           	psect	text5
  3566  04EE                     __ptext5:	
  3567 ;; *************** function _getch *****************
  3568 ;; Defined at:
  3569 ;;		line 98 in file "mcc_generated_files/eusart.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      unsigned char 
  3576 ;; Registers used:
  3577 ;;		wreg, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;Total ram usage:        0 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    1
  3590 ;; This function calls:
  3591 ;;		_EUSART_Read
  3592 ;; This function is called by:
  3593 ;;		_mygets
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function _getch
  3599  04EE                     _getch:	
  3600                           
  3601                           ;eusart.c: 99: return EUSART_Read();
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in _getch: [wreg+pclath+cstack]
  3605  04EE  3185  251D         	fcall	_EUSART_Read
  3606  04F0  0008               	return
  3607  04F1                     __end_of_getch:	
  3608                           
  3609                           	psect	text6
  3610  051D                     __ptext6:	
  3611 ;; *************** function _EUSART_Read *****************
  3612 ;; Defined at:
  3613 ;;		line 76 in file "mcc_generated_files/eusart.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      unsigned char 
  3620 ;; Registers used:
  3621 ;;		wreg
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;Total ram usage:        0 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_getch
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _EUSART_Read
  3642  051D                     _EUSART_Read:	
  3643  051D                     l78:	
  3644                           ;eusart.c: 78: while (!PIR1bits.RCIF) {
  3645                           
  3646                           ;incstack = 0
  3647                           ; Regs used in _EUSART_Read: [wreg]
  3648                           
  3649  051D  0020               	movlb	0	; select bank0
  3650  051E  1E90               	btfss	16,5	;volatile
  3651  051F  2D1D               	goto	l78
  3652                           
  3653                           ;eusart.c: 79: }
  3654                           ;eusart.c: 81: if (1 == RC1STAbits.OERR) {
  3655  0520  0023               	movlb	3	; select bank3
  3656  0521  1C9D               	btfss	29,1	;volatile
  3657  0522  2D25               	goto	l701
  3658                           
  3659                           ;eusart.c: 84: RC1STAbits.CREN = 0;
  3660  0523  121D               	bcf	29,4	;volatile
  3661                           
  3662                           ;eusart.c: 85: RC1STAbits.CREN = 1;
  3663  0524  161D               	bsf	29,4	;volatile
  3664  0525                     l701:	
  3665                           
  3666                           ;eusart.c: 86: }
  3667                           ;eusart.c: 88: return RC1REG;
  3668  0525  0819               	movf	25,w	;volatile
  3669  0526  0008               	return
  3670  0527                     __end_of_EUSART_Read:	
  3671                           
  3672                           	psect	text7
  3673  06C7                     __ptext7:	
  3674 ;; *************** function _printf *****************
  3675 ;; Defined at:
  3676 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  f               2    8[COMMON] PTR const unsigned char 
  3679 ;;		 -> STR_6(16), 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  idx             1    4[BANK0 ] unsigned char 
  3682 ;;  tmpval          4    0        struct .
  3683 ;;  width           2   10[BANK0 ] int 
  3684 ;;  val             2    7[BANK0 ] unsigned int 
  3685 ;;  cp              2    0        PTR const unsigned char 
  3686 ;;  len             2    0        unsigned int 
  3687 ;;  c               1   12[BANK0 ] char 
  3688 ;;  prec            1    9[BANK0 ] char 
  3689 ;;  flag            1    6[BANK0 ] unsigned char 
  3690 ;;  ap              1    5[BANK0 ] PTR void [1]
  3691 ;;		 -> ?_printf(2), 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  2    8[COMMON] int 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3701 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3704 ;;      Totals:         4      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3705 ;;Total ram usage:       17 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    2
  3708 ;; This function calls:
  3709 ;;		___lwdiv
  3710 ;;		___wmul
  3711 ;;		_isdigit
  3712 ;;		_putch
  3713 ;; This function is called by:
  3714 ;;		_main
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           
  3719                           ;psect for function _printf
  3720  06C7                     _printf:	
  3721                           
  3722                           ;doprnt.c: 466: va_list ap;
  3723                           ;doprnt.c: 499: signed char c;
  3724                           ;doprnt.c: 501: int width;
  3725                           ;doprnt.c: 506: signed char prec;
  3726                           ;doprnt.c: 508: unsigned char flag;
  3727                           ;doprnt.c: 523: union {
  3728                           ;doprnt.c: 524: unsigned long vd;
  3729                           ;doprnt.c: 525: double integ;
  3730                           ;doprnt.c: 526: } tmpval;
  3731                           ;doprnt.c: 528: unsigned int val;
  3732                           ;doprnt.c: 529: unsigned len;
  3733                           ;doprnt.c: 530: const char * cp;
  3734                           ;doprnt.c: 533: *ap = __va_start();
  3735                           
  3736                           ;incstack = 0
  3737                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3738  06C7  307A               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3739  06C8  0020               	movlb	0	; select bank0
  3740  06C9  00C0               	movwf	??_printf
  3741  06CA  0840               	movf	??_printf,w
  3742  06CB  00C5               	movwf	printf@ap
  3743  06CC                     l1201:	
  3744                           ;doprnt.c: 536: while(c = *f++) {
  3745                           
  3746  06CC  0879               	movf	printf@f+1,w
  3747  06CD  0020               	movlb	0	; select bank0
  3748  06CE  00C1               	movwf	??_printf+1
  3749  06CF  0878               	movf	printf@f,w
  3750  06D0  00C0               	movwf	??_printf
  3751  06D1  0AF8               	incf	printf@f,f
  3752  06D2  1903               	skipnz
  3753  06D3  0AF9               	incf	printf@f+1,f
  3754  06D4  0840               	movf	??_printf,w
  3755  06D5  0084               	movwf	4
  3756  06D6  0841               	movf	??_printf+1,w
  3757  06D7  0085               	movwf	5
  3758  06D8  0800               	movf	0,w	;code access
  3759  06D9  00C2               	movwf	??_printf+2
  3760  06DA  0842               	movf	??_printf+2,w
  3761  06DB  00CC               	movwf	printf@c
  3762  06DC  084C               	movf	printf@c,w
  3763  06DD  1903               	btfsc	3,2
  3764  06DE  0008               	return
  3765                           
  3766                           ;doprnt.c: 538: if(c != '%')
  3767  06DF  3025               	movlw	37
  3768  06E0  064C               	xorwf	printf@c,w
  3769  06E1  1903               	btfsc	3,2
  3770  06E2  2EE8               	goto	l1131
  3771                           
  3772                           ;doprnt.c: 540: {
  3773                           ;doprnt.c: 541: (putch(c) );
  3774  06E3  084C               	movf	printf@c,w
  3775  06E4  3184  24F1  3186   	fcall	_putch
  3776                           
  3777                           ;doprnt.c: 542: continue;
  3778  06E7  2ECC               	goto	l1201
  3779  06E8                     l1131:	
  3780                           
  3781                           ;doprnt.c: 543: }
  3782                           ;doprnt.c: 546: width = 0;
  3783  06E8  0020               	movlb	0	; select bank0
  3784  06E9  01CA               	clrf	printf@width
  3785  06EA  01CB               	clrf	printf@width+1
  3786                           
  3787                           ;doprnt.c: 548: flag = 0;
  3788  06EB  01C6               	clrf	printf@flag
  3789                           
  3790                           ;doprnt.c: 551: switch(*f) {
  3791                           
  3792                           ;doprnt.c: 550: for(;;) {
  3793  06EC  2EF3               	goto	l1137
  3794  06ED                     l259:	
  3795                           ;doprnt.c: 579: case '0':
  3796                           
  3797                           
  3798                           ;doprnt.c: 580: flag |= 0x04;
  3799  06ED  0020               	movlb	0	; select bank0
  3800  06EE  1546               	bsf	printf@flag,2
  3801                           
  3802                           ;doprnt.c: 581: f++;
  3803  06EF  3001               	movlw	1
  3804  06F0  07F8               	addwf	printf@f,f
  3805  06F1  3000               	movlw	0
  3806  06F2  3DF9               	addwfc	printf@f+1,f
  3807  06F3                     l1137:	
  3808                           ;doprnt.c: 584: }
  3809                           
  3810                           ;doprnt.c: 582: continue;
  3811                           
  3812  06F3  0878               	movf	printf@f,w
  3813  06F4  0084               	movwf	4
  3814  06F5  0879               	movf	printf@f+1,w
  3815  06F6  0085               	movwf	5
  3816  06F7  0800               	movf	0,w	;code access
  3817                           
  3818                           ; Switch size 1, requested type "space"
  3819                           ; Number of cases is 1, Range of values is 48 to 48
  3820                           ; switch strategies available:
  3821                           ; Name         Instructions Cycles
  3822                           ; simple_byte            4     3 (average)
  3823                           ; direct_byte           11     9 (fixed)
  3824                           ; jumptable            263     9 (fixed)
  3825                           ;	Chosen strategy is simple_byte
  3826  06F8  3A30               	xorlw	48	; case 48
  3827  06F9  1903               	skipnz
  3828  06FA  2EED               	goto	l259
  3829  06FB  2EFC               	goto	l1139
  3830  06FC                     l1139:	
  3831                           ;doprnt.c: 586: }
  3832                           
  3833                           ;doprnt.c: 585: break;
  3834                           
  3835                           
  3836                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3837  06FC  0878               	movf	printf@f,w
  3838  06FD  0084               	movwf	4
  3839  06FE  0879               	movf	printf@f+1,w
  3840  06FF  0085               	movwf	5
  3841  0700  0800               	movf	0,w	;code access
  3842  0701  3185  2554  3186   	fcall	_isdigit
  3843  0704  1C03               	btfss	3,0
  3844  0705  2F37               	goto	l1153
  3845                           
  3846                           ;doprnt.c: 598: width = 0;
  3847  0706  0020               	movlb	0	; select bank0
  3848  0707  01CA               	clrf	printf@width
  3849  0708  01CB               	clrf	printf@width+1
  3850  0709                     l1143:	
  3851                           ;doprnt.c: 599: do {
  3852                           
  3853                           
  3854                           ;doprnt.c: 600: width *= 10;
  3855  0709  300A               	movlw	10
  3856  070A  00F0               	movwf	___wmul@multiplier
  3857  070B  3000               	movlw	0
  3858  070C  00F1               	movwf	___wmul@multiplier+1
  3859  070D  0020               	movlb	0	; select bank0
  3860  070E  084B               	movf	printf@width+1,w
  3861  070F  00F3               	movwf	___wmul@multiplicand+1
  3862  0710  084A               	movf	printf@width,w
  3863  0711  00F2               	movwf	___wmul@multiplicand
  3864  0712  3185  259F  3186   	fcall	___wmul
  3865  0715  0871               	movf	?___wmul+1,w
  3866  0716  0020               	movlb	0	; select bank0
  3867  0717  00CB               	movwf	printf@width+1
  3868  0718  0870               	movf	?___wmul,w
  3869  0719  00CA               	movwf	printf@width
  3870                           
  3871                           ;doprnt.c: 601: width += *f++ - '0';
  3872  071A  0878               	movf	printf@f,w
  3873  071B  0084               	movwf	4
  3874  071C  0879               	movf	printf@f+1,w
  3875  071D  0085               	movwf	5
  3876  071E  0800               	movf	0,w	;code access
  3877  071F  3ED0               	addlw	208
  3878  0720  00C0               	movwf	??_printf
  3879  0721  30FF               	movlw	255
  3880  0722  1803               	skipnc
  3881  0723  3000               	movlw	0
  3882  0724  00C1               	movwf	??_printf+1
  3883  0725  0840               	movf	??_printf,w
  3884  0726  07CA               	addwf	printf@width,f
  3885  0727  0841               	movf	??_printf+1,w
  3886  0728  3DCB               	addwfc	printf@width+1,f
  3887  0729  3001               	movlw	1
  3888  072A  07F8               	addwf	printf@f,f
  3889  072B  3000               	movlw	0
  3890  072C  3DF9               	addwfc	printf@f+1,f
  3891                           
  3892                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3893  072D  0878               	movf	printf@f,w
  3894  072E  0084               	movwf	4
  3895  072F  0879               	movf	printf@f+1,w
  3896  0730  0085               	movwf	5
  3897  0731  0800               	movf	0,w	;code access
  3898  0732  3185  2554  3186   	fcall	_isdigit
  3899  0735  1803               	btfsc	3,0
  3900  0736  2F09               	goto	l1143
  3901  0737                     l1153:	
  3902                           ;doprnt.c: 822: }
  3903                           
  3904                           ;doprnt.c: 813: continue;
  3905                           
  3906                           ;doprnt.c: 802: default:
  3907                           
  3908                           ;doprnt.c: 723: break;
  3909                           
  3910                           ;doprnt.c: 718: case 'x':
  3911                           
  3912                           ;doprnt.c: 638: goto alldone;
  3913                           
  3914                           ;doprnt.c: 637: case 0:
  3915                           
  3916                           ;doprnt.c: 608: }
  3917                           ;doprnt.c: 635: switch(c = *f++) {
  3918                           
  3919  0737  0879               	movf	printf@f+1,w
  3920  0738  0020               	movlb	0	; select bank0
  3921  0739  00C1               	movwf	??_printf+1
  3922  073A  0878               	movf	printf@f,w
  3923  073B  00C0               	movwf	??_printf
  3924  073C  0AF8               	incf	printf@f,f
  3925  073D  1903               	skipnz
  3926  073E  0AF9               	incf	printf@f+1,f
  3927  073F  0840               	movf	??_printf,w
  3928  0740  0084               	movwf	4
  3929  0741  0841               	movf	??_printf+1,w
  3930  0742  0085               	movwf	5
  3931  0743  0800               	movf	0,w	;code access
  3932  0744  00CC               	movwf	printf@c
  3933                           
  3934                           ; Switch size 1, requested type "space"
  3935                           ; Number of cases is 2, Range of values is 0 to 120
  3936                           ; switch strategies available:
  3937                           ; Name         Instructions Cycles
  3938                           ; simple_byte            7     4 (average)
  3939                           ; direct_byte          248     6 (fixed)
  3940                           ; jumptable            260     6 (fixed)
  3941                           ;	Chosen strategy is simple_byte
  3942  0745  3A00               	xorlw	0	; case 0
  3943  0746  1903               	skipnz
  3944  0747  2FF5               	goto	l289
  3945  0748  3A78               	xorlw	120	; case 120
  3946  0749  1903               	skipnz
  3947  074A  2F4C               	goto	l1155
  3948  074B  2ECC               	goto	l1201
  3949  074C                     l1155:	
  3950                           
  3951                           ;doprnt.c: 1273: {
  3952                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3953  074C  0020               	movlb	0	; select bank0
  3954  074D  0845               	movf	printf@ap,w
  3955  074E  0086               	movwf	6
  3956  074F  0187               	clrf	7
  3957  0750  3F40               	moviw [0]fsr1
  3958  0751  00C7               	movwf	printf@val
  3959  0752  3F41               	moviw [1]fsr1
  3960  0753  00C8               	movwf	printf@val+1
  3961  0754  3002               	movlw	2
  3962  0755  00C0               	movwf	??_printf
  3963  0756  0840               	movf	??_printf,w
  3964  0757  07C5               	addwf	printf@ap,f
  3965                           
  3966                           ;doprnt.c: 1287: }
  3967                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3968  0758  01CC               	clrf	printf@c
  3969  0759  0ACC               	incf	printf@c,f
  3970  075A  3004               	movlw	4
  3971  075B  064C               	xorwf	printf@c,w
  3972  075C  1903               	btfsc	3,2
  3973  075D  2F7D               	goto	l1171
  3974  075E                     l1165:	
  3975                           
  3976                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3977  075E  084C               	movf	printf@c,w
  3978  075F  00C0               	movwf	??_printf
  3979  0760  01C1               	clrf	??_printf+1
  3980  0761  35C0               	lslf	??_printf,f
  3981  0762  0DC1               	rlf	??_printf+1,f
  3982  0763  3000               	movlw	low (_hexpowers| (0+32768))
  3983  0764  0740               	addwf	??_printf,w
  3984  0765  0084               	movwf	4
  3985  0766  3088               	movlw	high (_hexpowers| (0+32768))
  3986  0767  3D41               	addwfc	??_printf+1,w
  3987  0768  0085               	movwf	5
  3988  0769  3F00               	moviw [0]fsr0
  3989  076A  00C2               	movwf	??_printf+2
  3990  076B  3F01               	moviw [1]fsr0
  3991  076C  00C3               	movwf	??_printf+3
  3992  076D  0843               	movf	??_printf+3,w
  3993  076E  0248               	subwf	printf@val+1,w
  3994  076F  1D03               	skipz
  3995  0770  2F73               	goto	u625
  3996  0771  0842               	movf	??_printf+2,w
  3997  0772  0247               	subwf	printf@val,w
  3998  0773                     u625:	
  3999  0773  1C03               	btfss	3,0
  4000  0774  2F7D               	goto	l1171
  4001                           
  4002                           ;doprnt.c: 1318: break;
  4003  0775  3001               	movlw	1
  4004  0776  00C0               	movwf	??_printf
  4005  0777  0840               	movf	??_printf,w
  4006  0778  07CC               	addwf	printf@c,f
  4007  0779  3004               	movlw	4
  4008  077A  064C               	xorwf	printf@c,w
  4009  077B  1D03               	btfss	3,2
  4010  077C  2F5E               	goto	l1165
  4011  077D                     l1171:	
  4012                           
  4013                           ;doprnt.c: 1381: if(width > c)
  4014  077D  084C               	movf	printf@c,w
  4015  077E  00C0               	movwf	??_printf
  4016  077F  01C1               	clrf	??_printf+1
  4017  0780  1BC0               	btfsc	??_printf,7
  4018  0781  03C1               	decf	??_printf+1,f
  4019  0782  0841               	movf	??_printf+1,w
  4020  0783  3A80               	xorlw	128
  4021  0784  00C2               	movwf	??_printf+2
  4022  0785  084B               	movf	printf@width+1,w
  4023  0786  3A80               	xorlw	128
  4024  0787  0242               	subwf	??_printf+2,w
  4025  0788  1D03               	skipz
  4026  0789  2F8C               	goto	u645
  4027  078A  084A               	movf	printf@width,w
  4028  078B  0240               	subwf	??_printf,w
  4029  078C                     u645:	
  4030  078C  1803               	skipnc
  4031  078D  2F99               	goto	l1175
  4032                           
  4033                           ;doprnt.c: 1382: width -= c;
  4034  078E  0020               	movlb	0	; select bank0
  4035  078F  084C               	movf	printf@c,w
  4036  0790  00C0               	movwf	??_printf
  4037  0791  01C1               	clrf	??_printf+1
  4038  0792  1BC0               	btfsc	??_printf,7
  4039  0793  03C1               	decf	??_printf+1,f
  4040  0794  0840               	movf	??_printf,w
  4041  0795  02CA               	subwf	printf@width,f
  4042  0796  0841               	movf	??_printf+1,w
  4043  0797  3BCB               	subwfb	printf@width+1,f
  4044  0798  2F9C               	goto	l1177
  4045  0799                     l1175:	
  4046                           
  4047                           ;doprnt.c: 1383: else
  4048                           ;doprnt.c: 1384: width = 0;
  4049  0799  0020               	movlb	0	; select bank0
  4050  079A  01CA               	clrf	printf@width
  4051  079B  01CB               	clrf	printf@width+1
  4052  079C                     l1177:	
  4053                           
  4054                           ;doprnt.c: 1387: if(flag & 0x04) {
  4055  079C  1D46               	btfss	printf@flag,2
  4056  079D  2FAC               	goto	l1185
  4057  079E                     L2:	
  4058                           
  4059                           ;doprnt.c: 1415: if(width)
  4060  079E  084A               	movf	printf@width,w
  4061  079F  044B               	iorwf	printf@width+1,w
  4062  07A0  1903               	btfsc	3,2
  4063  07A1  2FBD               	goto	l1191
  4064                           
  4065                           ;doprnt.c: 1417: (putch('0') );
  4066                           
  4067                           ;doprnt.c: 1416: do
  4068  07A2  3030               	movlw	48
  4069  07A3  3184  24F1  3186   	fcall	_putch
  4070                           
  4071                           ;doprnt.c: 1418: while(--width);
  4072  07A6  30FF               	movlw	255
  4073  07A7  0020               	movlb	0	; select bank0
  4074  07A8  07CA               	addwf	printf@width,f
  4075  07A9  30FF               	movlw	255
  4076  07AA  3DCB               	addwfc	printf@width+1,f
  4077  07AB  2F9E               	goto	L2
  4078  07AC                     l1185:	
  4079                           ;doprnt.c: 1420: } else
  4080                           
  4081                           
  4082                           ;doprnt.c: 1422: {
  4083                           ;doprnt.c: 1424: if(width
  4084                           ;doprnt.c: 1428: )
  4085  07AC  084A               	movf	printf@width,w
  4086  07AD  044B               	iorwf	printf@width+1,w
  4087  07AE  1903               	btfsc	3,2
  4088  07AF  2FBD               	goto	l1191
  4089  07B0                     l1187:	
  4090                           ;doprnt.c: 1429: do
  4091                           
  4092                           
  4093                           ;doprnt.c: 1430: (putch(' ') );
  4094  07B0  3020               	movlw	32
  4095  07B1  3184  24F1  3186   	fcall	_putch
  4096                           
  4097                           ;doprnt.c: 1431: while(--width);
  4098  07B4  30FF               	movlw	255
  4099  07B5  0020               	movlb	0	; select bank0
  4100  07B6  07CA               	addwf	printf@width,f
  4101  07B7  30FF               	movlw	255
  4102  07B8  3DCB               	addwfc	printf@width+1,f
  4103  07B9  084A               	movf	printf@width,w
  4104  07BA  044B               	iorwf	printf@width+1,w
  4105  07BB  1D03               	btfss	3,2
  4106  07BC  2FB0               	goto	l1187
  4107  07BD                     l1191:	
  4108                           
  4109                           ;doprnt.c: 1469: }
  4110                           ;doprnt.c: 1472: prec = c;
  4111  07BD  084C               	movf	printf@c,w
  4112  07BE  00C0               	movwf	??_printf
  4113  07BF  0840               	movf	??_printf,w
  4114  07C0  00C9               	movwf	printf@prec
  4115  07C1                     l1199:	
  4116                           ;doprnt.c: 1474: while(prec--) {
  4117                           
  4118  07C1  30FF               	movlw	255
  4119  07C2  0020               	movlb	0	; select bank0
  4120  07C3  00C0               	movwf	??_printf
  4121  07C4  0840               	movf	??_printf,w
  4122  07C5  07C9               	addwf	printf@prec,f
  4123  07C6  0A49               	incf	printf@prec,w
  4124  07C7  1903               	btfsc	3,2
  4125  07C8  2ECC               	goto	l1201
  4126                           
  4127                           ;doprnt.c: 1478: {
  4128                           ;doprnt.c: 1499: {
  4129                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4130  07C9  0849               	movf	printf@prec,w
  4131  07CA  00C0               	movwf	??_printf
  4132  07CB  01C1               	clrf	??_printf+1
  4133  07CC  35C0               	lslf	??_printf,f
  4134  07CD  0DC1               	rlf	??_printf+1,f
  4135  07CE  3000               	movlw	low (_hexpowers| (0+32768))
  4136  07CF  0740               	addwf	??_printf,w
  4137  07D0  0084               	movwf	4
  4138  07D1  3088               	movlw	high (_hexpowers| (0+32768))
  4139  07D2  3D41               	addwfc	??_printf+1,w
  4140  07D3  0085               	movwf	5
  4141  07D4  3F00               	moviw [0]fsr0
  4142  07D5  00F0               	movwf	___lwdiv@divisor
  4143  07D6  3F01               	moviw [1]fsr0
  4144  07D7  00F1               	movwf	___lwdiv@divisor+1
  4145  07D8  0848               	movf	printf@val+1,w
  4146  07D9  00F3               	movwf	___lwdiv@dividend+1
  4147  07DA  0847               	movf	printf@val,w
  4148  07DB  00F2               	movwf	___lwdiv@dividend
  4149  07DC  3185  25E1  3186   	fcall	___lwdiv
  4150  07DF  0870               	movf	?___lwdiv,w
  4151  07E0  390F               	andlw	15
  4152  07E1  0020               	movlb	0	; select bank0
  4153  07E2  00C2               	movwf	??_printf+2
  4154  07E3  0842               	movf	??_printf+2,w
  4155  07E4  00C4               	movwf	printf@idx
  4156                           
  4157                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4158  07E5  0844               	movf	printf@idx,w
  4159  07E6  3E08               	addlw	low (STR_7| (0+32768))
  4160  07E7  0084               	movwf	4
  4161  07E8  3088               	movlw	high (STR_7| (0+32768))
  4162  07E9  1803               	skipnc
  4163  07EA  3E01               	addlw	1
  4164  07EB  0085               	movwf	5
  4165  07EC  0800               	movf	0,w	;code access
  4166  07ED  00C0               	movwf	??_printf
  4167  07EE  0840               	movf	??_printf,w
  4168  07EF  00CC               	movwf	printf@c
  4169                           
  4170                           ;doprnt.c: 1508: }
  4171                           ;doprnt.c: 1523: }
  4172                           ;doprnt.c: 1524: (putch(c) );
  4173  07F0  084C               	movf	printf@c,w
  4174  07F1  3184  24F1  3186   	fcall	_putch
  4175  07F4  2FC1               	goto	l1199
  4176  07F5                     l289:	
  4177                           ;doprnt.c: 1540: return 0;
  4178                           ;	Return value of _printf is never used
  4179                           
  4180                           ;doprnt.c: 1525: }
  4181                           ;doprnt.c: 1533: }
  4182                           ;doprnt.c: 1535: alldone:
  4183                           
  4184  07F5  0008               	return
  4185  07F6                     __end_of_printf:	
  4186                           
  4187                           	psect	text8
  4188  04F1                     __ptext8:	
  4189 ;; *************** function _putch *****************
  4190 ;; Defined at:
  4191 ;;		line 102 in file "mcc_generated_files/eusart.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  txData          1    wreg     unsigned char 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  txData          1    1[COMMON] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, pclath, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4209 ;;Total ram usage:        1 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    1
  4212 ;; This function calls:
  4213 ;;		_EUSART_Write
  4214 ;; This function is called by:
  4215 ;;		_printf
  4216 ;;		_puts
  4217 ;;		_cputs
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function _putch
  4223  04F1                     _putch:	
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4227                           ;putch@txData stored from wreg
  4228  04F1  00F1               	movwf	putch@txData
  4229                           
  4230                           ;eusart.c: 103: EUSART_Write(txData);
  4231  04F2  0871               	movf	putch@txData,w
  4232  04F3  3185  2502         	fcall	_EUSART_Write
  4233  04F5  0008               	return
  4234  04F6                     __end_of_putch:	
  4235                           
  4236                           	psect	text9
  4237  0502                     __ptext9:	
  4238 ;; *************** function _EUSART_Write *****************
  4239 ;; Defined at:
  4240 ;;		line 91 in file "mcc_generated_files/eusart.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  txData          1    wreg     unsigned char 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  txData          1    0[COMMON] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;Total ram usage:        1 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_putch
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function _EUSART_Write
  4269  0502                     _EUSART_Write:	
  4270                           
  4271                           ;incstack = 0
  4272                           ; Regs used in _EUSART_Write: [wreg]
  4273                           ;EUSART_Write@txData stored from wreg
  4274  0502  00F0               	movwf	EUSART_Write@txData
  4275  0503                     l85:	
  4276                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
  4277                           
  4278  0503  0020               	movlb	0	; select bank0
  4279  0504  1E10               	btfss	16,4	;volatile
  4280  0505  2D03               	goto	l85
  4281                           
  4282                           ;eusart.c: 93: }
  4283                           ;eusart.c: 95: TX1REG = txData;
  4284  0506  0870               	movf	EUSART_Write@txData,w
  4285  0507  0023               	movlb	3	; select bank3
  4286  0508  009A               	movwf	26	;volatile
  4287  0509  0008               	return
  4288  050A                     __end_of_EUSART_Write:	
  4289                           
  4290                           	psect	text10
  4291  0554                     __ptext10:	
  4292 ;; *************** function _isdigit *****************
  4293 ;; Defined at:
  4294 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  c               1    wreg     unsigned char 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  c               1    1[COMMON] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;		None               void
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;Total ram usage:        2 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_printf
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function _isdigit
  4323  0554                     _isdigit:	
  4324                           
  4325                           ;incstack = 0
  4326                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4327                           ;isdigit@c stored from wreg
  4328  0554  00F1               	movwf	isdigit@c
  4329  0555  01F0               	clrf	_isdigit$683
  4330  0556  303A               	movlw	58
  4331  0557  0271               	subwf	isdigit@c,w
  4332  0558  1803               	skipnc
  4333  0559  2D60               	goto	l1065
  4334  055A  3030               	movlw	48
  4335  055B  0271               	subwf	isdigit@c,w
  4336  055C  1C03               	skipc
  4337  055D  2D60               	goto	l1065
  4338  055E  01F0               	clrf	_isdigit$683
  4339  055F  0AF0               	incf	_isdigit$683,f
  4340  0560                     l1065:	
  4341  0560  0C70               	rrf	_isdigit$683,w
  4342  0561  0008               	return
  4343  0562                     __end_of_isdigit:	
  4344                           
  4345                           	psect	text11
  4346  059F                     __ptext11:	
  4347 ;; *************** function ___wmul *****************
  4348 ;; Defined at:
  4349 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  multiplier      2    0[COMMON] unsigned int 
  4352 ;;  multiplicand    2    2[COMMON] unsigned int 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  product         2    4[COMMON] unsigned int 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  2    0[COMMON] unsigned int 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4367 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4368 ;;Total ram usage:        6 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_printf
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           
  4378                           ;psect for function ___wmul
  4379  059F                     ___wmul:	
  4380                           
  4381                           ;incstack = 0
  4382                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4383  059F  01F4               	clrf	___wmul@product
  4384  05A0  01F5               	clrf	___wmul@product+1
  4385  05A1                     l1071:	
  4386  05A1  1C70               	btfss	___wmul@multiplier,0
  4387  05A2  2DA7               	goto	l293
  4388  05A3  0872               	movf	___wmul@multiplicand,w
  4389  05A4  07F4               	addwf	___wmul@product,f
  4390  05A5  0873               	movf	___wmul@multiplicand+1,w
  4391  05A6  3DF5               	addwfc	___wmul@product+1,f
  4392  05A7                     l293:	
  4393  05A7  3001               	movlw	1
  4394  05A8                     u475:	
  4395  05A8  35F2               	lslf	___wmul@multiplicand,f
  4396  05A9  0DF3               	rlf	___wmul@multiplicand+1,f
  4397  05AA  0B89               	decfsz	9,f
  4398  05AB  2DA8               	goto	u475
  4399  05AC  3001               	movlw	1
  4400  05AD                     u485:	
  4401  05AD  36F1               	lsrf	___wmul@multiplier+1,f
  4402  05AE  0CF0               	rrf	___wmul@multiplier,f
  4403  05AF  0B89               	decfsz	9,f
  4404  05B0  2DAD               	goto	u485
  4405  05B1  0870               	movf	___wmul@multiplier,w
  4406  05B2  0471               	iorwf	___wmul@multiplier+1,w
  4407  05B3  1D03               	btfss	3,2
  4408  05B4  2DA1               	goto	l1071
  4409  05B5  0875               	movf	___wmul@product+1,w
  4410  05B6  00F1               	movwf	?___wmul+1
  4411  05B7  0874               	movf	___wmul@product,w
  4412  05B8  00F0               	movwf	?___wmul
  4413  05B9  0008               	return
  4414  05BA                     __end_of___wmul:	
  4415                           
  4416                           	psect	text12
  4417  05E1                     __ptext12:	
  4418 ;; *************** function ___lwdiv *****************
  4419 ;; Defined at:
  4420 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  divisor         2    0[COMMON] unsigned int 
  4423 ;;  dividend        2    2[COMMON] unsigned int 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  quotient        2    5[COMMON] unsigned int 
  4426 ;;  counter         1    7[COMMON] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  2    0[COMMON] unsigned int 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;Total ram usage:        8 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_printf
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           
  4450                           ;psect for function ___lwdiv
  4451  05E1                     ___lwdiv:	
  4452                           
  4453                           ;incstack = 0
  4454                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4455  05E1  01F5               	clrf	___lwdiv@quotient
  4456  05E2  01F6               	clrf	___lwdiv@quotient+1
  4457  05E3  0870               	movf	___lwdiv@divisor,w
  4458  05E4  0471               	iorwf	___lwdiv@divisor+1,w
  4459  05E5  1903               	btfsc	3,2
  4460  05E6  2E10               	goto	l1105
  4461  05E7  01F7               	clrf	___lwdiv@counter
  4462  05E8  0AF7               	incf	___lwdiv@counter,f
  4463  05E9                     l1093:	
  4464  05E9  1BF1               	btfsc	___lwdiv@divisor+1,7
  4465  05EA  2DF5               	goto	l1095
  4466  05EB  3001               	movlw	1
  4467  05EC                     u515:	
  4468  05EC  35F0               	lslf	___lwdiv@divisor,f
  4469  05ED  0DF1               	rlf	___lwdiv@divisor+1,f
  4470  05EE  0B89               	decfsz	9,f
  4471  05EF  2DEC               	goto	u515
  4472  05F0  3001               	movlw	1
  4473  05F1  00F4               	movwf	??___lwdiv
  4474  05F2  0874               	movf	??___lwdiv,w
  4475  05F3  07F7               	addwf	___lwdiv@counter,f
  4476  05F4  2DE9               	goto	l1093
  4477  05F5                     l1095:	
  4478  05F5  3001               	movlw	1
  4479  05F6                     u535:	
  4480  05F6  35F5               	lslf	___lwdiv@quotient,f
  4481  05F7  0DF6               	rlf	___lwdiv@quotient+1,f
  4482  05F8  0B89               	decfsz	9,f
  4483  05F9  2DF6               	goto	u535
  4484  05FA  0871               	movf	___lwdiv@divisor+1,w
  4485  05FB  0273               	subwf	___lwdiv@dividend+1,w
  4486  05FC  1D03               	skipz
  4487  05FD  2E00               	goto	u545
  4488  05FE  0870               	movf	___lwdiv@divisor,w
  4489  05FF  0272               	subwf	___lwdiv@dividend,w
  4490  0600                     u545:	
  4491  0600  1C03               	skipc
  4492  0601  2E07               	goto	l1101
  4493  0602  0870               	movf	___lwdiv@divisor,w
  4494  0603  02F2               	subwf	___lwdiv@dividend,f
  4495  0604  0871               	movf	___lwdiv@divisor+1,w
  4496  0605  3BF3               	subwfb	___lwdiv@dividend+1,f
  4497  0606  1475               	bsf	___lwdiv@quotient,0
  4498  0607                     l1101:	
  4499  0607  3001               	movlw	1
  4500  0608                     u555:	
  4501  0608  36F1               	lsrf	___lwdiv@divisor+1,f
  4502  0609  0CF0               	rrf	___lwdiv@divisor,f
  4503  060A  0B89               	decfsz	9,f
  4504  060B  2E08               	goto	u555
  4505  060C  3001               	movlw	1
  4506  060D  02F7               	subwf	___lwdiv@counter,f
  4507  060E  1D03               	btfss	3,2
  4508  060F  2DF5               	goto	l1095
  4509  0610                     l1105:	
  4510  0610  0876               	movf	___lwdiv@quotient+1,w
  4511  0611  00F1               	movwf	?___lwdiv+1
  4512  0612  0875               	movf	___lwdiv@quotient,w
  4513  0613  00F0               	movwf	?___lwdiv
  4514  0614  0008               	return
  4515  0615                     __end_of___lwdiv:	
  4516                           
  4517                           	psect	text13
  4518  0513                     __ptext13:	
  4519 ;; *************** function _TMR2_HasOverflowOccured *****************
  4520 ;; Defined at:
  4521 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;		None
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  status          1    0[COMMON] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      unsigned char 
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4539 ;;Total ram usage:        1 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_main
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function _TMR2_HasOverflowOccured
  4550  0513                     _TMR2_HasOverflowOccured:	
  4551                           
  4552                           ;tmr2.c: 125: bool status = PIR1bits.TMR2IF;
  4553                           
  4554                           ;incstack = 0
  4555                           ; Regs used in _TMR2_HasOverflowOccured: [wreg+status,2+status,0]
  4556  0513  3000               	movlw	0
  4557  0514  0020               	movlb	0	; select bank0
  4558  0515  1890               	btfsc	16,1	;volatile
  4559  0516  3001               	movlw	1
  4560  0517  00F0               	movwf	TMR2_HasOverflowOccured@status
  4561                           
  4562                           ;tmr2.c: 126: if (status) {
  4563  0518  0870               	movf	TMR2_HasOverflowOccured@status,w
  4564  0519  1D03               	btfss	3,2
  4565                           
  4566                           ;tmr2.c: 128: PIR1bits.TMR2IF = 0;
  4567  051A  1090               	bcf	16,1	;volatile
  4568                           
  4569                           ;tmr2.c: 129: }
  4570                           ;tmr2.c: 130: return status;
  4571  051B  0870               	movf	TMR2_HasOverflowOccured@status,w
  4572  051C  0008               	return
  4573  051D                     __end_of_TMR2_HasOverflowOccured:	
  4574                           
  4575                           	psect	text14
  4576  0562                     __ptext14:	
  4577 ;; *************** function _SYSTEM_Initialize *****************
  4578 ;; Defined at:
  4579 ;;		line 77 in file "mcc_generated_files/mcc.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    2
  4600 ;; This function calls:
  4601 ;;		_ADC1_Initialize
  4602 ;;		_EUSART_Initialize
  4603 ;;		_OSCILLATOR_Initialize
  4604 ;;		_PIN_MANAGER_Initialize
  4605 ;;		_TMR2_Initialize
  4606 ;; This function is called by:
  4607 ;;		_main
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _SYSTEM_Initialize
  4613  0562                     _SYSTEM_Initialize:	
  4614                           
  4615                           ;mcc.c: 78: OSCILLATOR_Initialize();
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4619  0562  3184  24F6  3185   	fcall	_OSCILLATOR_Initialize
  4620                           
  4621                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  4622  0565  3186  2615  3185   	fcall	_PIN_MANAGER_Initialize
  4623                           
  4624                           ;mcc.c: 80: EUSART_Initialize();
  4625  0568  3185  2531  3185   	fcall	_EUSART_Initialize
  4626                           
  4627                           ;mcc.c: 81: TMR2_Initialize();
  4628  056B  3185  2547  3185   	fcall	_TMR2_Initialize
  4629                           
  4630                           ;mcc.c: 82: ADC1_Initialize();
  4631  056E  3185  250A         	fcall	_ADC1_Initialize
  4632  0570  0008               	return
  4633  0571                     __end_of_SYSTEM_Initialize:	
  4634                           
  4635                           	psect	text15
  4636  0547                     __ptext15:	
  4637 ;; *************** function _TMR2_Initialize *****************
  4638 ;; Defined at:
  4639 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;		None
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0, pclath, cstack
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;Total ram usage:        0 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; Hardware stack levels required when called:    1
  4660 ;; This function calls:
  4661 ;;		_TMR2_Start
  4662 ;; This function is called by:
  4663 ;;		_SYSTEM_Initialize
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           
  4668                           ;psect for function _TMR2_Initialize
  4669  0547                     _TMR2_Initialize:	
  4670                           
  4671                           ;tmr2.c: 62: T2CON = 0x60;
  4672                           
  4673                           ;incstack = 0
  4674                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4675  0547  3060               	movlw	96
  4676  0548  0020               	movlb	0	; select bank0
  4677  0549  009C               	movwf	28	;volatile
  4678                           
  4679                           ;tmr2.c: 65: T2CLKCON = 0x00;
  4680  054A  019E               	clrf	30	;volatile
  4681                           
  4682                           ;tmr2.c: 68: T2HLT = 0x00;
  4683  054B  019D               	clrf	29	;volatile
  4684                           
  4685                           ;tmr2.c: 71: T2RST = 0x00;
  4686  054C  019F               	clrf	31	;volatile
  4687                           
  4688                           ;tmr2.c: 74: T2PR = 0xFF;
  4689  054D  30FF               	movlw	255
  4690  054E  009B               	movwf	27	;volatile
  4691                           
  4692                           ;tmr2.c: 77: T2TMR = 0x00;
  4693  054F  019A               	clrf	26	;volatile
  4694                           
  4695                           ;tmr2.c: 80: PIR1bits.TMR2IF = 0;
  4696  0550  1090               	bcf	16,1	;volatile
  4697                           
  4698                           ;tmr2.c: 83: TMR2_Start();
  4699  0551  3184  24EB         	fcall	_TMR2_Start
  4700  0553  0008               	return
  4701  0554                     __end_of_TMR2_Initialize:	
  4702                           
  4703                           	psect	text16
  4704  04EB                     __ptext16:	
  4705 ;; *************** function _TMR2_Start *****************
  4706 ;; Defined at:
  4707 ;;		line 96 in file "mcc_generated_files/tmr2.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		None
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_TMR2_Initialize
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           
  4735                           ;psect for function _TMR2_Start
  4736  04EB                     _TMR2_Start:	
  4737                           
  4738                           ;tmr2.c: 98: T2CONbits.TMR2ON = 1;
  4739                           
  4740                           ;incstack = 0
  4741                           ; Regs used in _TMR2_Start: []
  4742  04EB  0020               	movlb	0	; select bank0
  4743  04EC  179C               	bsf	28,7	;volatile
  4744  04ED  0008               	return
  4745  04EE                     __end_of_TMR2_Start:	
  4746                           
  4747                           	psect	text17
  4748  0615                     __ptext17:	
  4749 ;; *************** function _PIN_MANAGER_Initialize *****************
  4750 ;; Defined at:
  4751 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  state           1    0[COMMON] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;Total ram usage:        1 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_SYSTEM_Initialize
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           
  4779                           ;psect for function _PIN_MANAGER_Initialize
  4780  0615                     _PIN_MANAGER_Initialize:	
  4781                           
  4782                           ;pin_manager.c: 52: LATA = 0x00;
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4786  0615  0022               	movlb	2	; select bank2
  4787  0616  018C               	clrf	12	;volatile
  4788                           
  4789                           ;pin_manager.c: 53: TRISA = 0x2B;
  4790  0617  302B               	movlw	43
  4791  0618  0021               	movlb	1	; select bank1
  4792  0619  008C               	movwf	12	;volatile
  4793                           
  4794                           ;pin_manager.c: 54: ANSELA = 0x03;
  4795  061A  3003               	movlw	3
  4796  061B  0023               	movlb	3	; select bank3
  4797  061C  008C               	movwf	12	;volatile
  4798                           
  4799                           ;pin_manager.c: 56: LATB = 0x00;
  4800  061D  0022               	movlb	2	; select bank2
  4801  061E  018D               	clrf	13	;volatile
  4802                           
  4803                           ;pin_manager.c: 57: TRISB = 0xF0;
  4804  061F  30F0               	movlw	240
  4805  0620  0021               	movlb	1	; select bank1
  4806  0621  008D               	movwf	13	;volatile
  4807                           
  4808                           ;pin_manager.c: 58: ANSELB = 0x10;
  4809  0622  3010               	movlw	16
  4810  0623  0023               	movlb	3	; select bank3
  4811  0624  008D               	movwf	13	;volatile
  4812                           
  4813                           ;pin_manager.c: 59: WPUB = 0x00;
  4814  0625  0024               	movlb	4	; select bank4
  4815  0626  018D               	clrf	13	;volatile
  4816                           
  4817                           ;pin_manager.c: 61: LATC = 0x20;
  4818  0627  3020               	movlw	32
  4819  0628  0022               	movlb	2	; select bank2
  4820  0629  008E               	movwf	14	;volatile
  4821                           
  4822                           ;pin_manager.c: 62: TRISC = 0xDF;
  4823  062A  30DF               	movlw	223
  4824  062B  0021               	movlb	1	; select bank1
  4825  062C  008E               	movwf	14	;volatile
  4826                           
  4827                           ;pin_manager.c: 63: ANSELC = 0xCB;
  4828  062D  30CB               	movlw	203
  4829  062E  0023               	movlb	3	; select bank3
  4830  062F  008E               	movwf	14	;volatile
  4831                           
  4832                           ;pin_manager.c: 64: WPUC = 0x00;
  4833  0630  0024               	movlb	4	; select bank4
  4834  0631  018E               	clrf	14	;volatile
  4835                           
  4836                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x01;
  4837  0632  0021               	movlb	1	; select bank1
  4838  0633  1795               	bsf	21,7	;volatile
  4839                           
  4840                           ;pin_manager.c: 69: bool state = GIE;
  4841  0634  3000               	movlw	0
  4842  0635  1B8B               	btfsc	11,7	;volatile
  4843  0636  3001               	movlw	1
  4844  0637  00F0               	movwf	PIN_MANAGER_Initialize@state
  4845                           
  4846                           ;pin_manager.c: 70: GIE = 0;
  4847  0638  138B               	bcf	11,7	;volatile
  4848                           
  4849                           ;pin_manager.c: 71: PPSLOCK = 0x55;
  4850  0639  3055               	movlw	85
  4851  063A  003C               	movlb	28	; select bank28
  4852  063B  008F               	movwf	15	;volatile
  4853                           
  4854                           ;pin_manager.c: 72: PPSLOCK = 0xAA;
  4855  063C  30AA               	movlw	170
  4856  063D  008F               	movwf	15	;volatile
  4857                           
  4858                           ;pin_manager.c: 73: PPSLOCKbits.PPSLOCKED = 0x00;
  4859  063E  100F               	bcf	15,0	;volatile
  4860                           
  4861                           ;pin_manager.c: 75: RXPPS = 0x0D;
  4862  063F  300D               	movlw	13
  4863  0640  00A4               	movwf	36	;volatile
  4864                           
  4865                           ;pin_manager.c: 76: RB7PPS = 0x12;
  4866  0641  3012               	movlw	18
  4867  0642  003D               	movlb	29	; select bank29
  4868  0643  009F               	movwf	31	;volatile
  4869                           
  4870                           ;pin_manager.c: 77: PPSLOCK = 0x55;
  4871  0644  3055               	movlw	85
  4872  0645  003C               	movlb	28	; select bank28
  4873  0646  008F               	movwf	15	;volatile
  4874                           
  4875                           ;pin_manager.c: 78: PPSLOCK = 0xAA;
  4876  0647  30AA               	movlw	170
  4877  0648  008F               	movwf	15	;volatile
  4878                           
  4879                           ;pin_manager.c: 79: PPSLOCKbits.PPSLOCKED = 0x01;
  4880  0649  140F               	bsf	15,0	;volatile
  4881                           
  4882                           ;pin_manager.c: 80: GIE = state;
  4883  064A  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  4884  064B  2E4E               	goto	u50
  4885  064C  178B               	bsf	11,7	;volatile
  4886  064D  0008               	return
  4887  064E                     u50:	
  4888  064E  138B               	bcf	11,7	;volatile
  4889  064F  0008               	return
  4890  0650                     __end_of_PIN_MANAGER_Initialize:	
  4891                           
  4892                           	psect	text18
  4893  04F6                     __ptext18:	
  4894 ;; *************** function _OSCILLATOR_Initialize *****************
  4895 ;; Defined at:
  4896 ;;		line 85 in file "mcc_generated_files/mcc.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;Total ram usage:        0 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_SYSTEM_Initialize
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           
  4924                           ;psect for function _OSCILLATOR_Initialize
  4925  04F6                     _OSCILLATOR_Initialize:	
  4926                           
  4927                           ;mcc.c: 87: OSCCON = 0x7A;
  4928                           
  4929                           ;incstack = 0
  4930                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4931  04F6  307A               	movlw	122
  4932  04F7  0021               	movlb	1	; select bank1
  4933  04F8  0099               	movwf	25	;volatile
  4934                           
  4935                           ;mcc.c: 89: OSCSTAT = 0x00;
  4936  04F9  019A               	clrf	26	;volatile
  4937                           
  4938                           ;mcc.c: 91: OSCTUNE = 0x00;
  4939  04FA  0198               	clrf	24	;volatile
  4940  04FB  0008               	return
  4941  04FC                     __end_of_OSCILLATOR_Initialize:	
  4942                           
  4943                           	psect	text19
  4944  0531                     __ptext19:	
  4945 ;; *************** function _EUSART_Initialize *****************
  4946 ;; Defined at:
  4947 ;;		line 56 in file "mcc_generated_files/eusart.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;Total ram usage:        0 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_SYSTEM_Initialize
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           
  4975                           ;psect for function _EUSART_Initialize
  4976  0531                     _EUSART_Initialize:	
  4977                           
  4978                           ;eusart.c: 60: BAUD1CON = 0x48;
  4979                           
  4980                           ;incstack = 0
  4981                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  4982  0531  3048               	movlw	72
  4983  0532  0023               	movlb	3	; select bank3
  4984  0533  009F               	movwf	31	;volatile
  4985                           
  4986                           ;eusart.c: 63: RC1STA = 0x90;
  4987  0534  3090               	movlw	144
  4988  0535  009D               	movwf	29	;volatile
  4989                           
  4990                           ;eusart.c: 66: TX1STA = 0x26;
  4991  0536  3026               	movlw	38
  4992  0537  009E               	movwf	30	;volatile
  4993                           
  4994                           ;eusart.c: 69: SPBRGL = 0x22;
  4995  0538  3022               	movlw	34
  4996  0539  009B               	movwf	27	;volatile
  4997                           
  4998                           ;eusart.c: 72: SPBRGH = 0x00;
  4999  053A  019C               	clrf	28	;volatile
  5000  053B  0008               	return
  5001  053C                     __end_of_EUSART_Initialize:	
  5002                           
  5003                           	psect	text20
  5004  050A                     __ptext20:	
  5005 ;; *************** function _ADC1_Initialize *****************
  5006 ;; Defined at:
  5007 ;;		line 65 in file "mcc_generated_files/adc1.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_SYSTEM_Initialize
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function _ADC1_Initialize
  5036  050A                     _ADC1_Initialize:	
  5037                           
  5038                           ;adc1.c: 69: ADCON0 = 0x01;
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  5042  050A  3001               	movlw	1
  5043  050B  0021               	movlb	1	; select bank1
  5044  050C  009D               	movwf	29	;volatile
  5045                           
  5046                           ;adc1.c: 72: ADCON1 = 0x50;
  5047  050D  3050               	movlw	80
  5048  050E  009E               	movwf	30	;volatile
  5049                           
  5050                           ;adc1.c: 75: ADCON2 = 0x00;
  5051  050F  019F               	clrf	31	;volatile
  5052                           
  5053                           ;adc1.c: 78: ADRESL = 0x00;
  5054  0510  019B               	clrf	27	;volatile
  5055                           
  5056                           ;adc1.c: 81: ADRESH = 0x00;
  5057  0511  019C               	clrf	28	;volatile
  5058  0512  0008               	return
  5059  0513                     __end_of_ADC1_Initialize:	
  5060                           
  5061                           	psect	text21
  5062  0585                     __ptext21:	
  5063 ;; *************** function _ADC1_GetConversion *****************
  5064 ;; Defined at:
  5065 ;;		line 109 in file "mcc_generated_files/adc1.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  channel         1    wreg     enum E11970
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  channel         1    3[COMMON] enum E11970
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  2    0[COMMON] unsigned int 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;Total ram usage:        4 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; This function calls:
  5086 ;;		Nothing
  5087 ;; This function is called by:
  5088 ;;		_main
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           
  5093                           ;psect for function _ADC1_GetConversion
  5094  0585                     _ADC1_GetConversion:	
  5095                           
  5096                           ;incstack = 0
  5097                           ; Regs used in _ADC1_GetConversion: [wreg+status,2+status,0]
  5098                           ;ADC1_GetConversion@channel stored from wreg
  5099  0585  00F3               	movwf	ADC1_GetConversion@channel
  5100                           
  5101                           ;adc1.c: 111: ADCON0bits.CHS = channel;
  5102  0586  0873               	movf	ADC1_GetConversion@channel,w
  5103  0587  00F2               	movwf	??_ADC1_GetConversion
  5104  0588  0DF2               	rlf	??_ADC1_GetConversion,f
  5105  0589  0DF2               	rlf	??_ADC1_GetConversion,f
  5106  058A  0021               	movlb	1	; select bank1
  5107  058B  081D               	movf	29,w	;volatile
  5108  058C  0672               	xorwf	??_ADC1_GetConversion,w
  5109  058D  3983               	andlw	-125
  5110  058E  0672               	xorwf	??_ADC1_GetConversion,w
  5111  058F  009D               	movwf	29	;volatile
  5112                           
  5113                           ;adc1.c: 114: ADCON0bits.ADON = 1;
  5114  0590  141D               	bsf	29,0	;volatile
  5115                           
  5116                           ;adc1.c: 117: _delay((unsigned long)((5)*(16000000/4000000.0)));
  5117  0591  3006               	movlw	6
  5118  0592  00F2               	movwf	??_ADC1_GetConversion
  5119  0593                     u777:	
  5120  0593  0BF2               	decfsz	??_ADC1_GetConversion,f
  5121  0594  2D93               	goto	u777
  5122  0595  0000               	nop
  5123                           
  5124                           ;adc1.c: 120: ADCON0bits.GO_nDONE = 1;
  5125  0596  0021               	movlb	1	; select bank1
  5126  0597  149D               	bsf	29,1	;volatile
  5127  0598                     l182:	
  5128                           ;adc1.c: 123: while (ADCON0bits.GO_nDONE) {
  5129                           
  5130  0598  189D               	btfsc	29,1	;volatile
  5131  0599  2D98               	goto	l182
  5132                           
  5133                           ;adc1.c: 124: }
  5134                           ;adc1.c: 127: return ((ADRESH << 8) + ADRESL);
  5135  059A  081C               	movf	28,w	;volatile
  5136  059B  00F1               	movwf	?_ADC1_GetConversion+1
  5137  059C  081B               	movf	27,w	;volatile
  5138  059D  00F0               	movwf	?_ADC1_GetConversion
  5139  059E  0008               	return
  5140  059F                     __end_of_ADC1_GetConversion:	
  5141  007E                     btemp	set	126	;btemp
  5142  007E                     wtemp	set	126
  5143  007E                     wtemp0	set	126
  5144  0080                     wtemp1	set	128
  5145  0082                     wtemp2	set	130
  5146  0084                     wtemp3	set	132
  5147  0086                     wtemp4	set	134
  5148  0088                     wtemp5	set	136
  5149  007F                     wtemp6	set	127
  5150  007E                     ttemp	set	126
  5151  007E                     ttemp0	set	126
  5152  0081                     ttemp1	set	129
  5153  0084                     ttemp2	set	132
  5154  0087                     ttemp3	set	135
  5155  007F                     ttemp4	set	127
  5156  007E                     ltemp	set	126
  5157  007E                     ltemp0	set	126
  5158  0082                     ltemp1	set	130
  5159  0086                     ltemp2	set	134
  5160  0080                     ltemp3	set	128


Data Sizes:
    Strings     79
    Constant    8
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      48
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    cputs@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[4]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[4]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[16]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sendCMD@cmd	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[4]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    mygets@p	PTR unsigned char  size(1) Largest target is 32
		 -> rxBuffer(BANK0[32]), 


Critical Paths under _main in COMMON

    _main->_printf
    _sendCMD->_puts
    _puts->_cputs
    _cputs->_putch
    _printf->___lwdiv
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2181
                                             12 COMMON     2     2      0
                                             13 BANK0      3     3      0
                 _ADC1_GetConversion
                  _SYSTEM_Initialize
            _TMR2_HasOverflowOccured
                             _mygets
                             _printf
                            _sendCMD
 ---------------------------------------------------------------------------------
 (1) _sendCMD                                              2     0      2     685
                                              7 COMMON     2     0      2
                             _mygets
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     283
                                              5 COMMON     2     0      2
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2     153
                                              2 COMMON     3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _mygets                                               4     4      0      60
                                              0 COMMON     4     4      0
                              _getch
 ---------------------------------------------------------------------------------
 (3) _getch                                                0     0      0       0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              25    21      4    1322
                                              8 COMMON     4     0      4
                                              0 BANK0     13    13      0
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR2_HasOverflowOccured                              1     1      0      30
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                    _ADC1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1_GetConversion
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_Start
   _TMR2_HasOverflowOccured
   _mygets
     _getch
       _EUSART_Read
   _printf
     ___lwdiv
     ___wmul
     _isdigit
     _putch
       _EUSART_Write
   _sendCMD
     _mygets
       _getch
         _EUSART_Read
     _puts
       _cputs
         _putch
           _EUSART_Write
       _putch
         _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Oct 01 11:34:53 2016

                     __CFG_CP$OFF 0000                                l85 0503                                l78 051D  
                              u50 064E               ___wmul@multiplicand 0072        __end_of_ADC1_GetConversion 059F  
                     __CFG_LVP$ON 0000                               l220 068D                               l182 0598  
                             l259 06ED                               l293 05A7                               l701 0525  
                             l289 07F5                               l803 05CB                               l807 05DC  
                             l799 05C0                               _GIE 005F                               _RC2 0072  
                             _PR2 001B                               u515 05EC                               u535 05F6  
                             u545 0600                               u625 0773                               u555 0608  
                             u475 05A8                               u485 05AD                               u645 078C  
                             u755 06AD                               u767 0686                               u777 0593  
                 _TMR2_Initialize 0547                      __CFG_BORV$LO 0000                               wreg 0009  
                    __CFG_IESO$ON 0000     TMR2_HasOverflowOccured@status 0070                      ?_EUSART_Read 0070  
                    __CFG_ZCD$OFF 0000                              l1101 0607                              l1105 0610  
                            l1201 06CC                              l1131 06E8                              l1051 0571  
                            l1071 05A1                              l1143 0709                              l1065 0560  
                            l1153 0737                              l1137 06F3                              l1225 0690  
                            l1171 077D                              l1155 074C                              l1139 06FC  
                            l1093 05E9                              l1165 075E                              l1229 069B  
                            l1095 05F5                              l1191 07BD                              l1175 0799  
                            l1185 07AC                              l1177 079C                              l1187 07B0  
                            l1199 07C1                              STR_1 084E                              STR_2 0842  
                            STR_3 0836                              STR_4 0829                              STR_5 0853  
                            STR_6 0819                              STR_7 0808                              _LATA 010C  
                            _LATB 010D                              _LATC 010E                              _T2PR 001B  
                            _TMR2 001A                              _WPUB 020D                              _WPUC 020E  
                    __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000                              _main 0650  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              _puts 053C                     __CFG_BOREN$ON 0000  
                            ltemp 007E                              start 0002                              ttemp 007E  
                            wtemp 007E                     __CFG_MCLRE$ON 0000                     __CFG_PLLEN$ON 0000  
                   ?_EUSART_Write 0070    __size_of_OSCILLATOR_Initialize 0006     __end_of_OSCILLATOR_Initialize 04FC  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                             ?_puts 0075  
                           _T2CON 001C                             _LATA2 0862                             _LATA4 0864  
                           _LATC5 0875                             _T2HLT 001D                   __end_of___lwdiv 0615  
                           _T2TMR 001A                             _T2RST 001F                             _TRISA 008C  
                           _TRISB 008D                             _TRISC 008E                             _RXPPS 0E24  
                           _getch 04EE                       ?_TMR2_Start 0070                             _cputs 0571  
                 __end_of_isdigit 0562                   __end_of_sendCMD 0531                             _putch 04F1  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             puts@s 0075  
                           ttemp4 007F                             status 0003                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
                 __initialization 07F6                      __end_of_main 06C7                      __end_of_puts 0547  
                  ??_EUSART_Write 0070           __end_of_TMR2_Initialize 0554                    __CFG_LPBOR$OFF 0000  
                          ??_main 004D                            ??_puts 0077                            ?_getch 0070  
                          _ADCON0 009D                            _ADCON1 009E                            _ADCON2 009F  
                          ?_cputs 0072                            _ADRESH 009C                            _ADRESL 009B  
                          _ANSELA 018C                            ?_putch 0070                            _ANSELB 018D  
                          _ANSELC 018E                            _RC1REG 0199                            _RC1STA 019D  
                          _RB7PPS 0E9F                            _OSCCON 0099                            _SPBRGH 019C  
                          _SPBRGL 019B                            _TX1REG 019A                            _TX1STA 019E  
                  __CFG_PWRTE$OFF 0000                            ___wmul 059F                    __CFG_STVREN$ON 0000  
                       ??___lwdiv 0074               __size_of_TMR2_Start 0003                            _mygets 05BA  
                          _printf 06C7          __size_of_ADC1_Initialize 0009                            cputs@s 0072  
        ?_TMR2_HasOverflowOccured 0070                         ??_isdigit 0070                         ??_sendCMD 0079  
            __size_of_EUSART_Read 000A                 _SYSTEM_Initialize 0562           __end_of__initialization 07FD  
              ?_SYSTEM_Initialize 0070                    __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0071  
                   __end_of_getch 04F1                     __end_of_cputs 0585                     __end_of_putch 04F6  
                ?_TMR2_Initialize 0070                    _OPTION_REGbits 0095                           ??_getch 0070  
                         ??_cputs 0074         __end_of_SYSTEM_Initialize 0571                           ??_putch 0071  
              _ADC1_GetConversion 0585                        __pbssBANK0 0020              __end_of_EUSART_Write 050A  
             ?_ADC1_GetConversion 0070                        __pmaintext 0650                           ?___wmul 0070  
                 __CFG_PPS1WAY$ON 0000   __end_of_TMR2_HasOverflowOccured 051D                           ?_mygets 0070  
                         ?_printf 0078              ??_ADC1_GetConversion 0072                   __CFG_WDTCCS$SWC 0000  
                         _OSCSTAT 009A                           _OSCTUNE 0098                           _PPSLOCK 0E0F  
               ??_ADC1_Initialize 0070                      ??_TMR2_Start 0070                   __size_of___wmul 001B  
                         ___lwdiv 05E1                __end_of_TMR2_Start 04EE                           __ptext1 0527  
                         __ptext2 053C                           __ptext3 0571                           __ptext4 05BA  
                         __ptext5 04EE                           __ptext6 051D                           __ptext7 06C7  
                         __ptext8 04F1                           __ptext9 0502                   __size_of_mygets 0027  
                 __size_of_printf 012F                 __end_of_hexpowers 0808             _OSCILLATOR_Initialize 04F6  
                       _T2CONbits 001C                           _isdigit 0554                           _sendCMD 0527  
        ??_PIN_MANAGER_Initialize 0070                         _T2HLTbits 001D        __size_of_SYSTEM_Initialize 000F  
                         clrloop0 04FD              end_of_initialization 07FD                         _T2RSTbits 001F  
               _EUSART_Initialize 0531                ?_EUSART_Initialize 0070                           mygets@c 0071  
                         mygets@i 0072                           mygets@p 0073                           printf@c 004C  
                         printf@f 0078                      __pstringtext 0800               ??_EUSART_Initialize 0070  
                __CFG_FOSC$INTOSC 0000             __size_of_EUSART_Write 0008         __end_of_EUSART_Initialize 053C  
__size_of_TMR2_HasOverflowOccured 000A                       printf@width 004A         ADC1_GetConversion@channel 0073  
                  __end_of___wmul 05BA                      _EUSART_Write 0502            ?_OSCILLATOR_Initialize 0070  
                  __end_of_mygets 05E1                    __end_of_printf 07F6               start_initialization 07F6  
 __size_of_PIN_MANAGER_Initialize 003B                     ??_EUSART_Read 0070                       putch@txData 0071  
                        ??___wmul 0074                   _ADC1_Initialize 050A                          ??_mygets 0070  
                        ??_printf 0040                        sendCMD@cmd 0077                         ___latbits 0002  
                   __pcstackBANK0 0040          __size_of_TMR2_Initialize 000D        __size_of_EUSART_Initialize 000B  
             __end_of_EUSART_Read 0527                  ___lwdiv@dividend 0072            _PIN_MANAGER_Initialize 0615  
                        ?___lwdiv 0070                          _BAUD1CON 019F                          ?_isdigit 0070  
                        ?_sendCMD 0077       __size_of_ADC1_GetConversion 001A                         _hexpowers 0800  
                ___lwdiv@quotient 0075                    __size_of_getch 0003                    __size_of_cputs 0014  
                        _T2CLKCON 001E                    __size_of_putch 0005           _TMR2_HasOverflowOccured 0513  
                  ___wmul@product 0074                         clear_ram0 04FC           __end_of_ADC1_Initialize 0513  
                        _PIR1bits 0010              __CFG_WDTCPS$WDTCPS1F 0000                        _ADCON0bits 009D  
               ___wmul@multiplier 0070                        printf@flag 0046                        printf@prec 0049  
                       main@value 007C                       _EUSART_Read 051D                 ??_TMR2_Initialize 0070  
         ??_OSCILLATOR_Initialize 0070                  __size_of___lwdiv 0034                       _isdigit$683 0070  
                __size_of_isdigit 000E                  __size_of_sendCMD 000A                   ___lwdiv@divisor 0070  
                 ___lwdiv@counter 0077         ??_TMR2_HasOverflowOccured 0070                          __ptext10 0554  
                        __ptext11 059F                          __ptext20 050A                          __ptext12 05E1  
                        __ptext21 0585                          __ptext13 0513                          __ptext14 0562  
                        __ptext15 0547                          __ptext16 04EB                          __ptext17 0615  
                        __ptext18 04F6                          __ptext19 0531                     __size_of_main 0077  
                   __size_of_puts 000B              __CFG_WDTCWS$WDTCWSSW 0000                          _rxBuffer 0020  
                      _RC1STAbits 019D                  ?_ADC1_Initialize 0070                         printf@idx 0044  
                       printf@val 0047                          main@time 007D       PIN_MANAGER_Initialize@state 0070  
                        isdigit@c 0071           ?_PIN_MANAGER_Initialize 0070                 __CFG_CLKOUTEN$OFF 0000  
                     _PPSLOCKbits 0E0F                          printf@ap 0045                        _TMR2_Start 04EB  
              EUSART_Write@txData 0070    __end_of_PIN_MANAGER_Initialize 0650  
