

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Sep 30 23:21:15 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  008E                     	;# 
    70  0090                     	;# 
    71  0091                     	;# 
    72  0092                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0113                     	;# 
    92  0114                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011C                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  018E                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0197                     	;# 
   111  0199                     	;# 
   112  0199                     	;# 
   113  0199                     	;# 
   114  019A                     	;# 
   115  019A                     	;# 
   116  019A                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019C                     	;# 
   125  019D                     	;# 
   126  019D                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019E                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  019F                     	;# 
   133  019F                     	;# 
   134  019F                     	;# 
   135  019F                     	;# 
   136  020C                     	;# 
   137  020D                     	;# 
   138  020E                     	;# 
   139  0211                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0212                     	;# 
   143  0213                     	;# 
   144  0213                     	;# 
   145  0214                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0216                     	;# 
   152  0216                     	;# 
   153  0217                     	;# 
   154  0217                     	;# 
   155  028C                     	;# 
   156  028D                     	;# 
   157  028E                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0298                     	;# 
   164  0298                     	;# 
   165  0299                     	;# 
   166  029A                     	;# 
   167  029B                     	;# 
   168  029E                     	;# 
   169  030C                     	;# 
   170  030D                     	;# 
   171  030E                     	;# 
   172  038C                     	;# 
   173  038D                     	;# 
   174  038E                     	;# 
   175  0391                     	;# 
   176  0392                     	;# 
   177  0393                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  0397                     	;# 
   182  0398                     	;# 
   183  0399                     	;# 
   184  040E                     	;# 
   185  0413                     	;# 
   186  0413                     	;# 
   187  0414                     	;# 
   188  0414                     	;# 
   189  0415                     	;# 
   190  0416                     	;# 
   191  0417                     	;# 
   192  0418                     	;# 
   193  041A                     	;# 
   194  041A                     	;# 
   195  041B                     	;# 
   196  041B                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  041F                     	;# 
   201  0493                     	;# 
   202  0494                     	;# 
   203  0495                     	;# 
   204  0496                     	;# 
   205  049A                     	;# 
   206  049B                     	;# 
   207  049C                     	;# 
   208  049D                     	;# 
   209  058C                     	;# 
   210  058C                     	;# 
   211  058D                     	;# 
   212  058E                     	;# 
   213  058E                     	;# 
   214  058F                     	;# 
   215  0590                     	;# 
   216  0590                     	;# 
   217  0591                     	;# 
   218  0592                     	;# 
   219  0592                     	;# 
   220  0593                     	;# 
   221  0594                     	;# 
   222  0594                     	;# 
   223  0595                     	;# 
   224  0596                     	;# 
   225  0596                     	;# 
   226  0597                     	;# 
   227  0598                     	;# 
   228  0599                     	;# 
   229  059A                     	;# 
   230  059B                     	;# 
   231  059B                     	;# 
   232  059C                     	;# 
   233  059D                     	;# 
   234  060C                     	;# 
   235  060C                     	;# 
   236  060D                     	;# 
   237  060E                     	;# 
   238  060F                     	;# 
   239  060F                     	;# 
   240  0610                     	;# 
   241  0611                     	;# 
   242  0612                     	;# 
   243  0613                     	;# 
   244  0614                     	;# 
   245  0617                     	;# 
   246  0618                     	;# 
   247  0619                     	;# 
   248  061A                     	;# 
   249  061B                     	;# 
   250  061C                     	;# 
   251  0691                     	;# 
   252  0692                     	;# 
   253  0693                     	;# 
   254  0694                     	;# 
   255  0695                     	;# 
   256  0696                     	;# 
   257  0697                     	;# 
   258  0699                     	;# 
   259  069A                     	;# 
   260  0711                     	;# 
   261  0712                     	;# 
   262  0713                     	;# 
   263  0714                     	;# 
   264  0715                     	;# 
   265  0718                     	;# 
   266  0718                     	;# 
   267  0719                     	;# 
   268  071A                     	;# 
   269  071A                     	;# 
   270  071B                     	;# 
   271  071C                     	;# 
   272  071D                     	;# 
   273  0791                     	;# 
   274  0791                     	;# 
   275  0792                     	;# 
   276  0793                     	;# 
   277  0793                     	;# 
   278  0794                     	;# 
   279  0795                     	;# 
   280  0795                     	;# 
   281  0796                     	;# 
   282  0797                     	;# 
   283  0797                     	;# 
   284  0798                     	;# 
   285  0799                     	;# 
   286  079A                     	;# 
   287  080C                     	;# 
   288  080C                     	;# 
   289  080D                     	;# 
   290  080E                     	;# 
   291  080E                     	;# 
   292  080F                     	;# 
   293  0810                     	;# 
   294  0810                     	;# 
   295  0811                     	;# 
   296  0812                     	;# 
   297  0812                     	;# 
   298  0813                     	;# 
   299  0814                     	;# 
   300  0815                     	;# 
   301  0816                     	;# 
   302  0817                     	;# 
   303  0818                     	;# 
   304  0819                     	;# 
   305  081A                     	;# 
   306  081A                     	;# 
   307  081B                     	;# 
   308  081C                     	;# 
   309  081C                     	;# 
   310  081D                     	;# 
   311  088C                     	;# 
   312  088D                     	;# 
   313  088E                     	;# 
   314  088F                     	;# 
   315  088F                     	;# 
   316  0890                     	;# 
   317  0891                     	;# 
   318  0892                     	;# 
   319  0893                     	;# 
   320  0893                     	;# 
   321  0894                     	;# 
   322  0895                     	;# 
   323  0896                     	;# 
   324  0897                     	;# 
   325  0897                     	;# 
   326  0898                     	;# 
   327  0899                     	;# 
   328  0D8C                     	;# 
   329  0D8C                     	;# 
   330  0D8D                     	;# 
   331  0D8E                     	;# 
   332  0D8F                     	;# 
   333  0D8F                     	;# 
   334  0D90                     	;# 
   335  0D91                     	;# 
   336  0D92                     	;# 
   337  0D92                     	;# 
   338  0D93                     	;# 
   339  0D94                     	;# 
   340  0D95                     	;# 
   341  0D95                     	;# 
   342  0D96                     	;# 
   343  0D97                     	;# 
   344  0D98                     	;# 
   345  0D99                     	;# 
   346  0D9A                     	;# 
   347  0D9B                     	;# 
   348  0D9C                     	;# 
   349  0D9D                     	;# 
   350  0D9E                     	;# 
   351  0D9E                     	;# 
   352  0D9F                     	;# 
   353  0DA0                     	;# 
   354  0DA1                     	;# 
   355  0DA1                     	;# 
   356  0DA2                     	;# 
   357  0DA3                     	;# 
   358  0DA4                     	;# 
   359  0DA4                     	;# 
   360  0DA5                     	;# 
   361  0DA6                     	;# 
   362  0DA7                     	;# 
   363  0DA7                     	;# 
   364  0DA8                     	;# 
   365  0DA9                     	;# 
   366  0DAA                     	;# 
   367  0DAB                     	;# 
   368  0DAC                     	;# 
   369  0DAD                     	;# 
   370  0DAE                     	;# 
   371  0DAF                     	;# 
   372  0E0F                     	;# 
   373  0E10                     	;# 
   374  0E11                     	;# 
   375  0E12                     	;# 
   376  0E13                     	;# 
   377  0E14                     	;# 
   378  0E15                     	;# 
   379  0E16                     	;# 
   380  0E17                     	;# 
   381  0E18                     	;# 
   382  0E19                     	;# 
   383  0E1A                     	;# 
   384  0E1B                     	;# 
   385  0E1C                     	;# 
   386  0E1D                     	;# 
   387  0E1E                     	;# 
   388  0E1F                     	;# 
   389  0E20                     	;# 
   390  0E21                     	;# 
   391  0E22                     	;# 
   392  0E23                     	;# 
   393  0E24                     	;# 
   394  0E25                     	;# 
   395  0E26                     	;# 
   396  0E27                     	;# 
   397  0E28                     	;# 
   398  0E29                     	;# 
   399  0E2A                     	;# 
   400  0E2B                     	;# 
   401  0E2C                     	;# 
   402  0E2D                     	;# 
   403  0E2E                     	;# 
   404  0E90                     	;# 
   405  0E91                     	;# 
   406  0E92                     	;# 
   407  0E94                     	;# 
   408  0E95                     	;# 
   409  0E9C                     	;# 
   410  0E9D                     	;# 
   411  0E9E                     	;# 
   412  0E9F                     	;# 
   413  0EA0                     	;# 
   414  0EA1                     	;# 
   415  0EA2                     	;# 
   416  0EA3                     	;# 
   417  0EA4                     	;# 
   418  0EA5                     	;# 
   419  0EA6                     	;# 
   420  0EA7                     	;# 
   421  0F0F                     	;# 
   422  0F10                     	;# 
   423  0F11                     	;# 
   424  0F12                     	;# 
   425  0F13                     	;# 
   426  0F14                     	;# 
   427  0F15                     	;# 
   428  0F16                     	;# 
   429  0F17                     	;# 
   430  0F18                     	;# 
   431  0F19                     	;# 
   432  0F1A                     	;# 
   433  0F1B                     	;# 
   434  0F1C                     	;# 
   435  0F1D                     	;# 
   436  0F1E                     	;# 
   437  0F1F                     	;# 
   438  0F20                     	;# 
   439  0F21                     	;# 
   440  0F22                     	;# 
   441  0F23                     	;# 
   442  0F24                     	;# 
   443  0F25                     	;# 
   444  0F26                     	;# 
   445  0F27                     	;# 
   446  0F28                     	;# 
   447  0F29                     	;# 
   448  0F2A                     	;# 
   449  0F2B                     	;# 
   450  0F2C                     	;# 
   451  0F2D                     	;# 
   452  0F2E                     	;# 
   453  0F2F                     	;# 
   454  0F30                     	;# 
   455  0F31                     	;# 
   456  0F32                     	;# 
   457  0F33                     	;# 
   458  0F34                     	;# 
   459  0F35                     	;# 
   460  0F36                     	;# 
   461  0F37                     	;# 
   462  0FE4                     	;# 
   463  0FE5                     	;# 
   464  0FE6                     	;# 
   465  0FE7                     	;# 
   466  0FE8                     	;# 
   467  0FE9                     	;# 
   468  0FEA                     	;# 
   469  0FEB                     	;# 
   470  0FED                     	;# 
   471  0FEE                     	;# 
   472  0FEF                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0008                     	;# 
   482  0009                     	;# 
   483  000A                     	;# 
   484  000B                     	;# 
   485  000C                     	;# 
   486  000D                     	;# 
   487  000E                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0016                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  001A                     	;# 
   500  001A                     	;# 
   501  001B                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001D                     	;# 
   505  001E                     	;# 
   506  001F                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  0090                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0095                     	;# 
   516  0096                     	;# 
   517  0098                     	;# 
   518  0099                     	;# 
   519  009A                     	;# 
   520  009B                     	;# 
   521  009B                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  010C                     	;# 
   527  010D                     	;# 
   528  010E                     	;# 
   529  0111                     	;# 
   530  0112                     	;# 
   531  0113                     	;# 
   532  0114                     	;# 
   533  0115                     	;# 
   534  0116                     	;# 
   535  0117                     	;# 
   536  0118                     	;# 
   537  0119                     	;# 
   538  011C                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  018E                     	;# 
   542  0191                     	;# 
   543  0191                     	;# 
   544  0192                     	;# 
   545  0193                     	;# 
   546  0193                     	;# 
   547  0194                     	;# 
   548  0195                     	;# 
   549  0196                     	;# 
   550  0197                     	;# 
   551  0199                     	;# 
   552  0199                     	;# 
   553  0199                     	;# 
   554  019A                     	;# 
   555  019A                     	;# 
   556  019A                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019B                     	;# 
   561  019B                     	;# 
   562  019C                     	;# 
   563  019C                     	;# 
   564  019C                     	;# 
   565  019D                     	;# 
   566  019D                     	;# 
   567  019D                     	;# 
   568  019E                     	;# 
   569  019E                     	;# 
   570  019E                     	;# 
   571  019F                     	;# 
   572  019F                     	;# 
   573  019F                     	;# 
   574  019F                     	;# 
   575  019F                     	;# 
   576  020C                     	;# 
   577  020D                     	;# 
   578  020E                     	;# 
   579  0211                     	;# 
   580  0211                     	;# 
   581  0212                     	;# 
   582  0212                     	;# 
   583  0213                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0214                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0216                     	;# 
   592  0216                     	;# 
   593  0217                     	;# 
   594  0217                     	;# 
   595  028C                     	;# 
   596  028D                     	;# 
   597  028E                     	;# 
   598  0291                     	;# 
   599  0291                     	;# 
   600  0292                     	;# 
   601  0293                     	;# 
   602  0294                     	;# 
   603  0298                     	;# 
   604  0298                     	;# 
   605  0299                     	;# 
   606  029A                     	;# 
   607  029B                     	;# 
   608  029E                     	;# 
   609  030C                     	;# 
   610  030D                     	;# 
   611  030E                     	;# 
   612  038C                     	;# 
   613  038D                     	;# 
   614  038E                     	;# 
   615  0391                     	;# 
   616  0392                     	;# 
   617  0393                     	;# 
   618  0394                     	;# 
   619  0395                     	;# 
   620  0396                     	;# 
   621  0397                     	;# 
   622  0398                     	;# 
   623  0399                     	;# 
   624  040E                     	;# 
   625  0413                     	;# 
   626  0413                     	;# 
   627  0414                     	;# 
   628  0414                     	;# 
   629  0415                     	;# 
   630  0416                     	;# 
   631  0417                     	;# 
   632  0418                     	;# 
   633  041A                     	;# 
   634  041A                     	;# 
   635  041B                     	;# 
   636  041B                     	;# 
   637  041C                     	;# 
   638  041D                     	;# 
   639  041E                     	;# 
   640  041F                     	;# 
   641  0493                     	;# 
   642  0494                     	;# 
   643  0495                     	;# 
   644  0496                     	;# 
   645  049A                     	;# 
   646  049B                     	;# 
   647  049C                     	;# 
   648  049D                     	;# 
   649  058C                     	;# 
   650  058C                     	;# 
   651  058D                     	;# 
   652  058E                     	;# 
   653  058E                     	;# 
   654  058F                     	;# 
   655  0590                     	;# 
   656  0590                     	;# 
   657  0591                     	;# 
   658  0592                     	;# 
   659  0592                     	;# 
   660  0593                     	;# 
   661  0594                     	;# 
   662  0594                     	;# 
   663  0595                     	;# 
   664  0596                     	;# 
   665  0596                     	;# 
   666  0597                     	;# 
   667  0598                     	;# 
   668  0599                     	;# 
   669  059A                     	;# 
   670  059B                     	;# 
   671  059B                     	;# 
   672  059C                     	;# 
   673  059D                     	;# 
   674  060C                     	;# 
   675  060C                     	;# 
   676  060D                     	;# 
   677  060E                     	;# 
   678  060F                     	;# 
   679  060F                     	;# 
   680  0610                     	;# 
   681  0611                     	;# 
   682  0612                     	;# 
   683  0613                     	;# 
   684  0614                     	;# 
   685  0617                     	;# 
   686  0618                     	;# 
   687  0619                     	;# 
   688  061A                     	;# 
   689  061B                     	;# 
   690  061C                     	;# 
   691  0691                     	;# 
   692  0692                     	;# 
   693  0693                     	;# 
   694  0694                     	;# 
   695  0695                     	;# 
   696  0696                     	;# 
   697  0697                     	;# 
   698  0699                     	;# 
   699  069A                     	;# 
   700  0711                     	;# 
   701  0712                     	;# 
   702  0713                     	;# 
   703  0714                     	;# 
   704  0715                     	;# 
   705  0718                     	;# 
   706  0718                     	;# 
   707  0719                     	;# 
   708  071A                     	;# 
   709  071A                     	;# 
   710  071B                     	;# 
   711  071C                     	;# 
   712  071D                     	;# 
   713  0791                     	;# 
   714  0791                     	;# 
   715  0792                     	;# 
   716  0793                     	;# 
   717  0793                     	;# 
   718  0794                     	;# 
   719  0795                     	;# 
   720  0795                     	;# 
   721  0796                     	;# 
   722  0797                     	;# 
   723  0797                     	;# 
   724  0798                     	;# 
   725  0799                     	;# 
   726  079A                     	;# 
   727  080C                     	;# 
   728  080C                     	;# 
   729  080D                     	;# 
   730  080E                     	;# 
   731  080E                     	;# 
   732  080F                     	;# 
   733  0810                     	;# 
   734  0810                     	;# 
   735  0811                     	;# 
   736  0812                     	;# 
   737  0812                     	;# 
   738  0813                     	;# 
   739  0814                     	;# 
   740  0815                     	;# 
   741  0816                     	;# 
   742  0817                     	;# 
   743  0818                     	;# 
   744  0819                     	;# 
   745  081A                     	;# 
   746  081A                     	;# 
   747  081B                     	;# 
   748  081C                     	;# 
   749  081C                     	;# 
   750  081D                     	;# 
   751  088C                     	;# 
   752  088D                     	;# 
   753  088E                     	;# 
   754  088F                     	;# 
   755  088F                     	;# 
   756  0890                     	;# 
   757  0891                     	;# 
   758  0892                     	;# 
   759  0893                     	;# 
   760  0893                     	;# 
   761  0894                     	;# 
   762  0895                     	;# 
   763  0896                     	;# 
   764  0897                     	;# 
   765  0897                     	;# 
   766  0898                     	;# 
   767  0899                     	;# 
   768  0D8C                     	;# 
   769  0D8C                     	;# 
   770  0D8D                     	;# 
   771  0D8E                     	;# 
   772  0D8F                     	;# 
   773  0D8F                     	;# 
   774  0D90                     	;# 
   775  0D91                     	;# 
   776  0D92                     	;# 
   777  0D92                     	;# 
   778  0D93                     	;# 
   779  0D94                     	;# 
   780  0D95                     	;# 
   781  0D95                     	;# 
   782  0D96                     	;# 
   783  0D97                     	;# 
   784  0D98                     	;# 
   785  0D99                     	;# 
   786  0D9A                     	;# 
   787  0D9B                     	;# 
   788  0D9C                     	;# 
   789  0D9D                     	;# 
   790  0D9E                     	;# 
   791  0D9E                     	;# 
   792  0D9F                     	;# 
   793  0DA0                     	;# 
   794  0DA1                     	;# 
   795  0DA1                     	;# 
   796  0DA2                     	;# 
   797  0DA3                     	;# 
   798  0DA4                     	;# 
   799  0DA4                     	;# 
   800  0DA5                     	;# 
   801  0DA6                     	;# 
   802  0DA7                     	;# 
   803  0DA7                     	;# 
   804  0DA8                     	;# 
   805  0DA9                     	;# 
   806  0DAA                     	;# 
   807  0DAB                     	;# 
   808  0DAC                     	;# 
   809  0DAD                     	;# 
   810  0DAE                     	;# 
   811  0DAF                     	;# 
   812  0E0F                     	;# 
   813  0E10                     	;# 
   814  0E11                     	;# 
   815  0E12                     	;# 
   816  0E13                     	;# 
   817  0E14                     	;# 
   818  0E15                     	;# 
   819  0E16                     	;# 
   820  0E17                     	;# 
   821  0E18                     	;# 
   822  0E19                     	;# 
   823  0E1A                     	;# 
   824  0E1B                     	;# 
   825  0E1C                     	;# 
   826  0E1D                     	;# 
   827  0E1E                     	;# 
   828  0E1F                     	;# 
   829  0E20                     	;# 
   830  0E21                     	;# 
   831  0E22                     	;# 
   832  0E23                     	;# 
   833  0E24                     	;# 
   834  0E25                     	;# 
   835  0E26                     	;# 
   836  0E27                     	;# 
   837  0E28                     	;# 
   838  0E29                     	;# 
   839  0E2A                     	;# 
   840  0E2B                     	;# 
   841  0E2C                     	;# 
   842  0E2D                     	;# 
   843  0E2E                     	;# 
   844  0E90                     	;# 
   845  0E91                     	;# 
   846  0E92                     	;# 
   847  0E94                     	;# 
   848  0E95                     	;# 
   849  0E9C                     	;# 
   850  0E9D                     	;# 
   851  0E9E                     	;# 
   852  0E9F                     	;# 
   853  0EA0                     	;# 
   854  0EA1                     	;# 
   855  0EA2                     	;# 
   856  0EA3                     	;# 
   857  0EA4                     	;# 
   858  0EA5                     	;# 
   859  0EA6                     	;# 
   860  0EA7                     	;# 
   861  0F0F                     	;# 
   862  0F10                     	;# 
   863  0F11                     	;# 
   864  0F12                     	;# 
   865  0F13                     	;# 
   866  0F14                     	;# 
   867  0F15                     	;# 
   868  0F16                     	;# 
   869  0F17                     	;# 
   870  0F18                     	;# 
   871  0F19                     	;# 
   872  0F1A                     	;# 
   873  0F1B                     	;# 
   874  0F1C                     	;# 
   875  0F1D                     	;# 
   876  0F1E                     	;# 
   877  0F1F                     	;# 
   878  0F20                     	;# 
   879  0F21                     	;# 
   880  0F22                     	;# 
   881  0F23                     	;# 
   882  0F24                     	;# 
   883  0F25                     	;# 
   884  0F26                     	;# 
   885  0F27                     	;# 
   886  0F28                     	;# 
   887  0F29                     	;# 
   888  0F2A                     	;# 
   889  0F2B                     	;# 
   890  0F2C                     	;# 
   891  0F2D                     	;# 
   892  0F2E                     	;# 
   893  0F2F                     	;# 
   894  0F30                     	;# 
   895  0F31                     	;# 
   896  0F32                     	;# 
   897  0F33                     	;# 
   898  0F34                     	;# 
   899  0F35                     	;# 
   900  0F36                     	;# 
   901  0F37                     	;# 
   902  0FE4                     	;# 
   903  0FE5                     	;# 
   904  0FE6                     	;# 
   905  0FE7                     	;# 
   906  0FE8                     	;# 
   907  0FE9                     	;# 
   908  0FEA                     	;# 
   909  0FEB                     	;# 
   910  0FED                     	;# 
   911  0FEE                     	;# 
   912  0FEF                     	;# 
   913  0000                     	;# 
   914  0001                     	;# 
   915  0002                     	;# 
   916  0003                     	;# 
   917  0004                     	;# 
   918  0005                     	;# 
   919  0006                     	;# 
   920  0007                     	;# 
   921  0008                     	;# 
   922  0009                     	;# 
   923  000A                     	;# 
   924  000B                     	;# 
   925  000C                     	;# 
   926  000D                     	;# 
   927  000E                     	;# 
   928  0010                     	;# 
   929  0011                     	;# 
   930  0012                     	;# 
   931  0013                     	;# 
   932  0014                     	;# 
   933  0015                     	;# 
   934  0016                     	;# 
   935  0016                     	;# 
   936  0017                     	;# 
   937  0018                     	;# 
   938  0019                     	;# 
   939  001A                     	;# 
   940  001A                     	;# 
   941  001B                     	;# 
   942  001B                     	;# 
   943  001C                     	;# 
   944  001D                     	;# 
   945  001E                     	;# 
   946  001F                     	;# 
   947  008C                     	;# 
   948  008D                     	;# 
   949  008E                     	;# 
   950  0090                     	;# 
   951  0091                     	;# 
   952  0092                     	;# 
   953  0093                     	;# 
   954  0094                     	;# 
   955  0095                     	;# 
   956  0096                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009A                     	;# 
   960  009B                     	;# 
   961  009B                     	;# 
   962  009C                     	;# 
   963  009D                     	;# 
   964  009E                     	;# 
   965  009F                     	;# 
   966  010C                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  0111                     	;# 
   970  0112                     	;# 
   971  0113                     	;# 
   972  0114                     	;# 
   973  0115                     	;# 
   974  0116                     	;# 
   975  0117                     	;# 
   976  0118                     	;# 
   977  0119                     	;# 
   978  011C                     	;# 
   979  018C                     	;# 
   980  018D                     	;# 
   981  018E                     	;# 
   982  0191                     	;# 
   983  0191                     	;# 
   984  0192                     	;# 
   985  0193                     	;# 
   986  0193                     	;# 
   987  0194                     	;# 
   988  0195                     	;# 
   989  0196                     	;# 
   990  0197                     	;# 
   991  0199                     	;# 
   992  0199                     	;# 
   993  0199                     	;# 
   994  019A                     	;# 
   995  019A                     	;# 
   996  019A                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019C                     	;# 
  1003  019C                     	;# 
  1004  019C                     	;# 
  1005  019D                     	;# 
  1006  019D                     	;# 
  1007  019D                     	;# 
  1008  019E                     	;# 
  1009  019E                     	;# 
  1010  019E                     	;# 
  1011  019F                     	;# 
  1012  019F                     	;# 
  1013  019F                     	;# 
  1014  019F                     	;# 
  1015  019F                     	;# 
  1016  020C                     	;# 
  1017  020D                     	;# 
  1018  020E                     	;# 
  1019  0211                     	;# 
  1020  0211                     	;# 
  1021  0212                     	;# 
  1022  0212                     	;# 
  1023  0213                     	;# 
  1024  0213                     	;# 
  1025  0214                     	;# 
  1026  0214                     	;# 
  1027  0215                     	;# 
  1028  0215                     	;# 
  1029  0215                     	;# 
  1030  0215                     	;# 
  1031  0216                     	;# 
  1032  0216                     	;# 
  1033  0217                     	;# 
  1034  0217                     	;# 
  1035  028C                     	;# 
  1036  028D                     	;# 
  1037  028E                     	;# 
  1038  0291                     	;# 
  1039  0291                     	;# 
  1040  0292                     	;# 
  1041  0293                     	;# 
  1042  0294                     	;# 
  1043  0298                     	;# 
  1044  0298                     	;# 
  1045  0299                     	;# 
  1046  029A                     	;# 
  1047  029B                     	;# 
  1048  029E                     	;# 
  1049  030C                     	;# 
  1050  030D                     	;# 
  1051  030E                     	;# 
  1052  038C                     	;# 
  1053  038D                     	;# 
  1054  038E                     	;# 
  1055  0391                     	;# 
  1056  0392                     	;# 
  1057  0393                     	;# 
  1058  0394                     	;# 
  1059  0395                     	;# 
  1060  0396                     	;# 
  1061  0397                     	;# 
  1062  0398                     	;# 
  1063  0399                     	;# 
  1064  040E                     	;# 
  1065  0413                     	;# 
  1066  0413                     	;# 
  1067  0414                     	;# 
  1068  0414                     	;# 
  1069  0415                     	;# 
  1070  0416                     	;# 
  1071  0417                     	;# 
  1072  0418                     	;# 
  1073  041A                     	;# 
  1074  041A                     	;# 
  1075  041B                     	;# 
  1076  041B                     	;# 
  1077  041C                     	;# 
  1078  041D                     	;# 
  1079  041E                     	;# 
  1080  041F                     	;# 
  1081  0493                     	;# 
  1082  0494                     	;# 
  1083  0495                     	;# 
  1084  0496                     	;# 
  1085  049A                     	;# 
  1086  049B                     	;# 
  1087  049C                     	;# 
  1088  049D                     	;# 
  1089  058C                     	;# 
  1090  058C                     	;# 
  1091  058D                     	;# 
  1092  058E                     	;# 
  1093  058E                     	;# 
  1094  058F                     	;# 
  1095  0590                     	;# 
  1096  0590                     	;# 
  1097  0591                     	;# 
  1098  0592                     	;# 
  1099  0592                     	;# 
  1100  0593                     	;# 
  1101  0594                     	;# 
  1102  0594                     	;# 
  1103  0595                     	;# 
  1104  0596                     	;# 
  1105  0596                     	;# 
  1106  0597                     	;# 
  1107  0598                     	;# 
  1108  0599                     	;# 
  1109  059A                     	;# 
  1110  059B                     	;# 
  1111  059B                     	;# 
  1112  059C                     	;# 
  1113  059D                     	;# 
  1114  060C                     	;# 
  1115  060C                     	;# 
  1116  060D                     	;# 
  1117  060E                     	;# 
  1118  060F                     	;# 
  1119  060F                     	;# 
  1120  0610                     	;# 
  1121  0611                     	;# 
  1122  0612                     	;# 
  1123  0613                     	;# 
  1124  0614                     	;# 
  1125  0617                     	;# 
  1126  0618                     	;# 
  1127  0619                     	;# 
  1128  061A                     	;# 
  1129  061B                     	;# 
  1130  061C                     	;# 
  1131  0691                     	;# 
  1132  0692                     	;# 
  1133  0693                     	;# 
  1134  0694                     	;# 
  1135  0695                     	;# 
  1136  0696                     	;# 
  1137  0697                     	;# 
  1138  0699                     	;# 
  1139  069A                     	;# 
  1140  0711                     	;# 
  1141  0712                     	;# 
  1142  0713                     	;# 
  1143  0714                     	;# 
  1144  0715                     	;# 
  1145  0718                     	;# 
  1146  0718                     	;# 
  1147  0719                     	;# 
  1148  071A                     	;# 
  1149  071A                     	;# 
  1150  071B                     	;# 
  1151  071C                     	;# 
  1152  071D                     	;# 
  1153  0791                     	;# 
  1154  0791                     	;# 
  1155  0792                     	;# 
  1156  0793                     	;# 
  1157  0793                     	;# 
  1158  0794                     	;# 
  1159  0795                     	;# 
  1160  0795                     	;# 
  1161  0796                     	;# 
  1162  0797                     	;# 
  1163  0797                     	;# 
  1164  0798                     	;# 
  1165  0799                     	;# 
  1166  079A                     	;# 
  1167  080C                     	;# 
  1168  080C                     	;# 
  1169  080D                     	;# 
  1170  080E                     	;# 
  1171  080E                     	;# 
  1172  080F                     	;# 
  1173  0810                     	;# 
  1174  0810                     	;# 
  1175  0811                     	;# 
  1176  0812                     	;# 
  1177  0812                     	;# 
  1178  0813                     	;# 
  1179  0814                     	;# 
  1180  0815                     	;# 
  1181  0816                     	;# 
  1182  0817                     	;# 
  1183  0818                     	;# 
  1184  0819                     	;# 
  1185  081A                     	;# 
  1186  081A                     	;# 
  1187  081B                     	;# 
  1188  081C                     	;# 
  1189  081C                     	;# 
  1190  081D                     	;# 
  1191  088C                     	;# 
  1192  088D                     	;# 
  1193  088E                     	;# 
  1194  088F                     	;# 
  1195  088F                     	;# 
  1196  0890                     	;# 
  1197  0891                     	;# 
  1198  0892                     	;# 
  1199  0893                     	;# 
  1200  0893                     	;# 
  1201  0894                     	;# 
  1202  0895                     	;# 
  1203  0896                     	;# 
  1204  0897                     	;# 
  1205  0897                     	;# 
  1206  0898                     	;# 
  1207  0899                     	;# 
  1208  0D8C                     	;# 
  1209  0D8C                     	;# 
  1210  0D8D                     	;# 
  1211  0D8E                     	;# 
  1212  0D8F                     	;# 
  1213  0D8F                     	;# 
  1214  0D90                     	;# 
  1215  0D91                     	;# 
  1216  0D92                     	;# 
  1217  0D92                     	;# 
  1218  0D93                     	;# 
  1219  0D94                     	;# 
  1220  0D95                     	;# 
  1221  0D95                     	;# 
  1222  0D96                     	;# 
  1223  0D97                     	;# 
  1224  0D98                     	;# 
  1225  0D99                     	;# 
  1226  0D9A                     	;# 
  1227  0D9B                     	;# 
  1228  0D9C                     	;# 
  1229  0D9D                     	;# 
  1230  0D9E                     	;# 
  1231  0D9E                     	;# 
  1232  0D9F                     	;# 
  1233  0DA0                     	;# 
  1234  0DA1                     	;# 
  1235  0DA1                     	;# 
  1236  0DA2                     	;# 
  1237  0DA3                     	;# 
  1238  0DA4                     	;# 
  1239  0DA4                     	;# 
  1240  0DA5                     	;# 
  1241  0DA6                     	;# 
  1242  0DA7                     	;# 
  1243  0DA7                     	;# 
  1244  0DA8                     	;# 
  1245  0DA9                     	;# 
  1246  0DAA                     	;# 
  1247  0DAB                     	;# 
  1248  0DAC                     	;# 
  1249  0DAD                     	;# 
  1250  0DAE                     	;# 
  1251  0DAF                     	;# 
  1252  0E0F                     	;# 
  1253  0E10                     	;# 
  1254  0E11                     	;# 
  1255  0E12                     	;# 
  1256  0E13                     	;# 
  1257  0E14                     	;# 
  1258  0E15                     	;# 
  1259  0E16                     	;# 
  1260  0E17                     	;# 
  1261  0E18                     	;# 
  1262  0E19                     	;# 
  1263  0E1A                     	;# 
  1264  0E1B                     	;# 
  1265  0E1C                     	;# 
  1266  0E1D                     	;# 
  1267  0E1E                     	;# 
  1268  0E1F                     	;# 
  1269  0E20                     	;# 
  1270  0E21                     	;# 
  1271  0E22                     	;# 
  1272  0E23                     	;# 
  1273  0E24                     	;# 
  1274  0E25                     	;# 
  1275  0E26                     	;# 
  1276  0E27                     	;# 
  1277  0E28                     	;# 
  1278  0E29                     	;# 
  1279  0E2A                     	;# 
  1280  0E2B                     	;# 
  1281  0E2C                     	;# 
  1282  0E2D                     	;# 
  1283  0E2E                     	;# 
  1284  0E90                     	;# 
  1285  0E91                     	;# 
  1286  0E92                     	;# 
  1287  0E94                     	;# 
  1288  0E95                     	;# 
  1289  0E9C                     	;# 
  1290  0E9D                     	;# 
  1291  0E9E                     	;# 
  1292  0E9F                     	;# 
  1293  0EA0                     	;# 
  1294  0EA1                     	;# 
  1295  0EA2                     	;# 
  1296  0EA3                     	;# 
  1297  0EA4                     	;# 
  1298  0EA5                     	;# 
  1299  0EA6                     	;# 
  1300  0EA7                     	;# 
  1301  0F0F                     	;# 
  1302  0F10                     	;# 
  1303  0F11                     	;# 
  1304  0F12                     	;# 
  1305  0F13                     	;# 
  1306  0F14                     	;# 
  1307  0F15                     	;# 
  1308  0F16                     	;# 
  1309  0F17                     	;# 
  1310  0F18                     	;# 
  1311  0F19                     	;# 
  1312  0F1A                     	;# 
  1313  0F1B                     	;# 
  1314  0F1C                     	;# 
  1315  0F1D                     	;# 
  1316  0F1E                     	;# 
  1317  0F1F                     	;# 
  1318  0F20                     	;# 
  1319  0F21                     	;# 
  1320  0F22                     	;# 
  1321  0F23                     	;# 
  1322  0F24                     	;# 
  1323  0F25                     	;# 
  1324  0F26                     	;# 
  1325  0F27                     	;# 
  1326  0F28                     	;# 
  1327  0F29                     	;# 
  1328  0F2A                     	;# 
  1329  0F2B                     	;# 
  1330  0F2C                     	;# 
  1331  0F2D                     	;# 
  1332  0F2E                     	;# 
  1333  0F2F                     	;# 
  1334  0F30                     	;# 
  1335  0F31                     	;# 
  1336  0F32                     	;# 
  1337  0F33                     	;# 
  1338  0F34                     	;# 
  1339  0F35                     	;# 
  1340  0F36                     	;# 
  1341  0F37                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000D                     	;# 
  1367  000E                     	;# 
  1368  0010                     	;# 
  1369  0011                     	;# 
  1370  0012                     	;# 
  1371  0013                     	;# 
  1372  0014                     	;# 
  1373  0015                     	;# 
  1374  0016                     	;# 
  1375  0016                     	;# 
  1376  0017                     	;# 
  1377  0018                     	;# 
  1378  0019                     	;# 
  1379  001A                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001B                     	;# 
  1383  001C                     	;# 
  1384  001D                     	;# 
  1385  001E                     	;# 
  1386  001F                     	;# 
  1387  008C                     	;# 
  1388  008D                     	;# 
  1389  008E                     	;# 
  1390  0090                     	;# 
  1391  0091                     	;# 
  1392  0092                     	;# 
  1393  0093                     	;# 
  1394  0094                     	;# 
  1395  0095                     	;# 
  1396  0096                     	;# 
  1397  0098                     	;# 
  1398  0099                     	;# 
  1399  009A                     	;# 
  1400  009B                     	;# 
  1401  009B                     	;# 
  1402  009C                     	;# 
  1403  009D                     	;# 
  1404  009E                     	;# 
  1405  009F                     	;# 
  1406  010C                     	;# 
  1407  010D                     	;# 
  1408  010E                     	;# 
  1409  0111                     	;# 
  1410  0112                     	;# 
  1411  0113                     	;# 
  1412  0114                     	;# 
  1413  0115                     	;# 
  1414  0116                     	;# 
  1415  0117                     	;# 
  1416  0118                     	;# 
  1417  0119                     	;# 
  1418  011C                     	;# 
  1419  018C                     	;# 
  1420  018D                     	;# 
  1421  018E                     	;# 
  1422  0191                     	;# 
  1423  0191                     	;# 
  1424  0192                     	;# 
  1425  0193                     	;# 
  1426  0193                     	;# 
  1427  0194                     	;# 
  1428  0195                     	;# 
  1429  0196                     	;# 
  1430  0197                     	;# 
  1431  0199                     	;# 
  1432  0199                     	;# 
  1433  0199                     	;# 
  1434  019A                     	;# 
  1435  019A                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019C                     	;# 
  1444  019C                     	;# 
  1445  019D                     	;# 
  1446  019D                     	;# 
  1447  019D                     	;# 
  1448  019E                     	;# 
  1449  019E                     	;# 
  1450  019E                     	;# 
  1451  019F                     	;# 
  1452  019F                     	;# 
  1453  019F                     	;# 
  1454  019F                     	;# 
  1455  019F                     	;# 
  1456  020C                     	;# 
  1457  020D                     	;# 
  1458  020E                     	;# 
  1459  0211                     	;# 
  1460  0211                     	;# 
  1461  0212                     	;# 
  1462  0212                     	;# 
  1463  0213                     	;# 
  1464  0213                     	;# 
  1465  0214                     	;# 
  1466  0214                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0216                     	;# 
  1472  0216                     	;# 
  1473  0217                     	;# 
  1474  0217                     	;# 
  1475  028C                     	;# 
  1476  028D                     	;# 
  1477  028E                     	;# 
  1478  0291                     	;# 
  1479  0291                     	;# 
  1480  0292                     	;# 
  1481  0293                     	;# 
  1482  0294                     	;# 
  1483  0298                     	;# 
  1484  0298                     	;# 
  1485  0299                     	;# 
  1486  029A                     	;# 
  1487  029B                     	;# 
  1488  029E                     	;# 
  1489  030C                     	;# 
  1490  030D                     	;# 
  1491  030E                     	;# 
  1492  038C                     	;# 
  1493  038D                     	;# 
  1494  038E                     	;# 
  1495  0391                     	;# 
  1496  0392                     	;# 
  1497  0393                     	;# 
  1498  0394                     	;# 
  1499  0395                     	;# 
  1500  0396                     	;# 
  1501  0397                     	;# 
  1502  0398                     	;# 
  1503  0399                     	;# 
  1504  040E                     	;# 
  1505  0413                     	;# 
  1506  0413                     	;# 
  1507  0414                     	;# 
  1508  0414                     	;# 
  1509  0415                     	;# 
  1510  0416                     	;# 
  1511  0417                     	;# 
  1512  0418                     	;# 
  1513  041A                     	;# 
  1514  041A                     	;# 
  1515  041B                     	;# 
  1516  041B                     	;# 
  1517  041C                     	;# 
  1518  041D                     	;# 
  1519  041E                     	;# 
  1520  041F                     	;# 
  1521  0493                     	;# 
  1522  0494                     	;# 
  1523  0495                     	;# 
  1524  0496                     	;# 
  1525  049A                     	;# 
  1526  049B                     	;# 
  1527  049C                     	;# 
  1528  049D                     	;# 
  1529  058C                     	;# 
  1530  058C                     	;# 
  1531  058D                     	;# 
  1532  058E                     	;# 
  1533  058E                     	;# 
  1534  058F                     	;# 
  1535  0590                     	;# 
  1536  0590                     	;# 
  1537  0591                     	;# 
  1538  0592                     	;# 
  1539  0592                     	;# 
  1540  0593                     	;# 
  1541  0594                     	;# 
  1542  0594                     	;# 
  1543  0595                     	;# 
  1544  0596                     	;# 
  1545  0596                     	;# 
  1546  0597                     	;# 
  1547  0598                     	;# 
  1548  0599                     	;# 
  1549  059A                     	;# 
  1550  059B                     	;# 
  1551  059B                     	;# 
  1552  059C                     	;# 
  1553  059D                     	;# 
  1554  060C                     	;# 
  1555  060C                     	;# 
  1556  060D                     	;# 
  1557  060E                     	;# 
  1558  060F                     	;# 
  1559  060F                     	;# 
  1560  0610                     	;# 
  1561  0611                     	;# 
  1562  0612                     	;# 
  1563  0613                     	;# 
  1564  0614                     	;# 
  1565  0617                     	;# 
  1566  0618                     	;# 
  1567  0619                     	;# 
  1568  061A                     	;# 
  1569  061B                     	;# 
  1570  061C                     	;# 
  1571  0691                     	;# 
  1572  0692                     	;# 
  1573  0693                     	;# 
  1574  0694                     	;# 
  1575  0695                     	;# 
  1576  0696                     	;# 
  1577  0697                     	;# 
  1578  0699                     	;# 
  1579  069A                     	;# 
  1580  0711                     	;# 
  1581  0712                     	;# 
  1582  0713                     	;# 
  1583  0714                     	;# 
  1584  0715                     	;# 
  1585  0718                     	;# 
  1586  0718                     	;# 
  1587  0719                     	;# 
  1588  071A                     	;# 
  1589  071A                     	;# 
  1590  071B                     	;# 
  1591  071C                     	;# 
  1592  071D                     	;# 
  1593  0791                     	;# 
  1594  0791                     	;# 
  1595  0792                     	;# 
  1596  0793                     	;# 
  1597  0793                     	;# 
  1598  0794                     	;# 
  1599  0795                     	;# 
  1600  0795                     	;# 
  1601  0796                     	;# 
  1602  0797                     	;# 
  1603  0797                     	;# 
  1604  0798                     	;# 
  1605  0799                     	;# 
  1606  079A                     	;# 
  1607  080C                     	;# 
  1608  080C                     	;# 
  1609  080D                     	;# 
  1610  080E                     	;# 
  1611  080E                     	;# 
  1612  080F                     	;# 
  1613  0810                     	;# 
  1614  0810                     	;# 
  1615  0811                     	;# 
  1616  0812                     	;# 
  1617  0812                     	;# 
  1618  0813                     	;# 
  1619  0814                     	;# 
  1620  0815                     	;# 
  1621  0816                     	;# 
  1622  0817                     	;# 
  1623  0818                     	;# 
  1624  0819                     	;# 
  1625  081A                     	;# 
  1626  081A                     	;# 
  1627  081B                     	;# 
  1628  081C                     	;# 
  1629  081C                     	;# 
  1630  081D                     	;# 
  1631  088C                     	;# 
  1632  088D                     	;# 
  1633  088E                     	;# 
  1634  088F                     	;# 
  1635  088F                     	;# 
  1636  0890                     	;# 
  1637  0891                     	;# 
  1638  0892                     	;# 
  1639  0893                     	;# 
  1640  0893                     	;# 
  1641  0894                     	;# 
  1642  0895                     	;# 
  1643  0896                     	;# 
  1644  0897                     	;# 
  1645  0897                     	;# 
  1646  0898                     	;# 
  1647  0899                     	;# 
  1648  0D8C                     	;# 
  1649  0D8C                     	;# 
  1650  0D8D                     	;# 
  1651  0D8E                     	;# 
  1652  0D8F                     	;# 
  1653  0D8F                     	;# 
  1654  0D90                     	;# 
  1655  0D91                     	;# 
  1656  0D92                     	;# 
  1657  0D92                     	;# 
  1658  0D93                     	;# 
  1659  0D94                     	;# 
  1660  0D95                     	;# 
  1661  0D95                     	;# 
  1662  0D96                     	;# 
  1663  0D97                     	;# 
  1664  0D98                     	;# 
  1665  0D99                     	;# 
  1666  0D9A                     	;# 
  1667  0D9B                     	;# 
  1668  0D9C                     	;# 
  1669  0D9D                     	;# 
  1670  0D9E                     	;# 
  1671  0D9E                     	;# 
  1672  0D9F                     	;# 
  1673  0DA0                     	;# 
  1674  0DA1                     	;# 
  1675  0DA1                     	;# 
  1676  0DA2                     	;# 
  1677  0DA3                     	;# 
  1678  0DA4                     	;# 
  1679  0DA4                     	;# 
  1680  0DA5                     	;# 
  1681  0DA6                     	;# 
  1682  0DA7                     	;# 
  1683  0DA7                     	;# 
  1684  0DA8                     	;# 
  1685  0DA9                     	;# 
  1686  0DAA                     	;# 
  1687  0DAB                     	;# 
  1688  0DAC                     	;# 
  1689  0DAD                     	;# 
  1690  0DAE                     	;# 
  1691  0DAF                     	;# 
  1692  0E0F                     	;# 
  1693  0E10                     	;# 
  1694  0E11                     	;# 
  1695  0E12                     	;# 
  1696  0E13                     	;# 
  1697  0E14                     	;# 
  1698  0E15                     	;# 
  1699  0E16                     	;# 
  1700  0E17                     	;# 
  1701  0E18                     	;# 
  1702  0E19                     	;# 
  1703  0E1A                     	;# 
  1704  0E1B                     	;# 
  1705  0E1C                     	;# 
  1706  0E1D                     	;# 
  1707  0E1E                     	;# 
  1708  0E1F                     	;# 
  1709  0E20                     	;# 
  1710  0E21                     	;# 
  1711  0E22                     	;# 
  1712  0E23                     	;# 
  1713  0E24                     	;# 
  1714  0E25                     	;# 
  1715  0E26                     	;# 
  1716  0E27                     	;# 
  1717  0E28                     	;# 
  1718  0E29                     	;# 
  1719  0E2A                     	;# 
  1720  0E2B                     	;# 
  1721  0E2C                     	;# 
  1722  0E2D                     	;# 
  1723  0E2E                     	;# 
  1724  0E90                     	;# 
  1725  0E91                     	;# 
  1726  0E92                     	;# 
  1727  0E94                     	;# 
  1728  0E95                     	;# 
  1729  0E9C                     	;# 
  1730  0E9D                     	;# 
  1731  0E9E                     	;# 
  1732  0E9F                     	;# 
  1733  0EA0                     	;# 
  1734  0EA1                     	;# 
  1735  0EA2                     	;# 
  1736  0EA3                     	;# 
  1737  0EA4                     	;# 
  1738  0EA5                     	;# 
  1739  0EA6                     	;# 
  1740  0EA7                     	;# 
  1741  0F0F                     	;# 
  1742  0F10                     	;# 
  1743  0F11                     	;# 
  1744  0F12                     	;# 
  1745  0F13                     	;# 
  1746  0F14                     	;# 
  1747  0F15                     	;# 
  1748  0F16                     	;# 
  1749  0F17                     	;# 
  1750  0F18                     	;# 
  1751  0F19                     	;# 
  1752  0F1A                     	;# 
  1753  0F1B                     	;# 
  1754  0F1C                     	;# 
  1755  0F1D                     	;# 
  1756  0F1E                     	;# 
  1757  0F1F                     	;# 
  1758  0F20                     	;# 
  1759  0F21                     	;# 
  1760  0F22                     	;# 
  1761  0F23                     	;# 
  1762  0F24                     	;# 
  1763  0F25                     	;# 
  1764  0F26                     	;# 
  1765  0F27                     	;# 
  1766  0F28                     	;# 
  1767  0F29                     	;# 
  1768  0F2A                     	;# 
  1769  0F2B                     	;# 
  1770  0F2C                     	;# 
  1771  0F2D                     	;# 
  1772  0F2E                     	;# 
  1773  0F2F                     	;# 
  1774  0F30                     	;# 
  1775  0F31                     	;# 
  1776  0F32                     	;# 
  1777  0F33                     	;# 
  1778  0F34                     	;# 
  1779  0F35                     	;# 
  1780  0F36                     	;# 
  1781  0F37                     	;# 
  1782  0FE4                     	;# 
  1783  0FE5                     	;# 
  1784  0FE6                     	;# 
  1785  0FE7                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEB                     	;# 
  1790  0FED                     	;# 
  1791  0FEE                     	;# 
  1792  0FEF                     	;# 
  1793  0000                     	;# 
  1794  0001                     	;# 
  1795  0002                     	;# 
  1796  0003                     	;# 
  1797  0004                     	;# 
  1798  0005                     	;# 
  1799  0006                     	;# 
  1800  0007                     	;# 
  1801  0008                     	;# 
  1802  0009                     	;# 
  1803  000A                     	;# 
  1804  000B                     	;# 
  1805  000C                     	;# 
  1806  000D                     	;# 
  1807  000E                     	;# 
  1808  0010                     	;# 
  1809  0011                     	;# 
  1810  0012                     	;# 
  1811  0013                     	;# 
  1812  0014                     	;# 
  1813  0015                     	;# 
  1814  0016                     	;# 
  1815  0016                     	;# 
  1816  0017                     	;# 
  1817  0018                     	;# 
  1818  0019                     	;# 
  1819  001A                     	;# 
  1820  001A                     	;# 
  1821  001B                     	;# 
  1822  001B                     	;# 
  1823  001C                     	;# 
  1824  001D                     	;# 
  1825  001E                     	;# 
  1826  001F                     	;# 
  1827  008C                     	;# 
  1828  008D                     	;# 
  1829  008E                     	;# 
  1830  0090                     	;# 
  1831  0091                     	;# 
  1832  0092                     	;# 
  1833  0093                     	;# 
  1834  0094                     	;# 
  1835  0095                     	;# 
  1836  0096                     	;# 
  1837  0098                     	;# 
  1838  0099                     	;# 
  1839  009A                     	;# 
  1840  009B                     	;# 
  1841  009B                     	;# 
  1842  009C                     	;# 
  1843  009D                     	;# 
  1844  009E                     	;# 
  1845  009F                     	;# 
  1846  010C                     	;# 
  1847  010D                     	;# 
  1848  010E                     	;# 
  1849  0111                     	;# 
  1850  0112                     	;# 
  1851  0113                     	;# 
  1852  0114                     	;# 
  1853  0115                     	;# 
  1854  0116                     	;# 
  1855  0117                     	;# 
  1856  0118                     	;# 
  1857  0119                     	;# 
  1858  011C                     	;# 
  1859  018C                     	;# 
  1860  018D                     	;# 
  1861  018E                     	;# 
  1862  0191                     	;# 
  1863  0191                     	;# 
  1864  0192                     	;# 
  1865  0193                     	;# 
  1866  0193                     	;# 
  1867  0194                     	;# 
  1868  0195                     	;# 
  1869  0196                     	;# 
  1870  0197                     	;# 
  1871  0199                     	;# 
  1872  0199                     	;# 
  1873  0199                     	;# 
  1874  019A                     	;# 
  1875  019A                     	;# 
  1876  019A                     	;# 
  1877  019B                     	;# 
  1878  019B                     	;# 
  1879  019B                     	;# 
  1880  019B                     	;# 
  1881  019B                     	;# 
  1882  019C                     	;# 
  1883  019C                     	;# 
  1884  019C                     	;# 
  1885  019D                     	;# 
  1886  019D                     	;# 
  1887  019D                     	;# 
  1888  019E                     	;# 
  1889  019E                     	;# 
  1890  019E                     	;# 
  1891  019F                     	;# 
  1892  019F                     	;# 
  1893  019F                     	;# 
  1894  019F                     	;# 
  1895  019F                     	;# 
  1896  020C                     	;# 
  1897  020D                     	;# 
  1898  020E                     	;# 
  1899  0211                     	;# 
  1900  0211                     	;# 
  1901  0212                     	;# 
  1902  0212                     	;# 
  1903  0213                     	;# 
  1904  0213                     	;# 
  1905  0214                     	;# 
  1906  0214                     	;# 
  1907  0215                     	;# 
  1908  0215                     	;# 
  1909  0215                     	;# 
  1910  0215                     	;# 
  1911  0216                     	;# 
  1912  0216                     	;# 
  1913  0217                     	;# 
  1914  0217                     	;# 
  1915  028C                     	;# 
  1916  028D                     	;# 
  1917  028E                     	;# 
  1918  0291                     	;# 
  1919  0291                     	;# 
  1920  0292                     	;# 
  1921  0293                     	;# 
  1922  0294                     	;# 
  1923  0298                     	;# 
  1924  0298                     	;# 
  1925  0299                     	;# 
  1926  029A                     	;# 
  1927  029B                     	;# 
  1928  029E                     	;# 
  1929  030C                     	;# 
  1930  030D                     	;# 
  1931  030E                     	;# 
  1932  038C                     	;# 
  1933  038D                     	;# 
  1934  038E                     	;# 
  1935  0391                     	;# 
  1936  0392                     	;# 
  1937  0393                     	;# 
  1938  0394                     	;# 
  1939  0395                     	;# 
  1940  0396                     	;# 
  1941  0397                     	;# 
  1942  0398                     	;# 
  1943  0399                     	;# 
  1944  040E                     	;# 
  1945  0413                     	;# 
  1946  0413                     	;# 
  1947  0414                     	;# 
  1948  0414                     	;# 
  1949  0415                     	;# 
  1950  0416                     	;# 
  1951  0417                     	;# 
  1952  0418                     	;# 
  1953  041A                     	;# 
  1954  041A                     	;# 
  1955  041B                     	;# 
  1956  041B                     	;# 
  1957  041C                     	;# 
  1958  041D                     	;# 
  1959  041E                     	;# 
  1960  041F                     	;# 
  1961  0493                     	;# 
  1962  0494                     	;# 
  1963  0495                     	;# 
  1964  0496                     	;# 
  1965  049A                     	;# 
  1966  049B                     	;# 
  1967  049C                     	;# 
  1968  049D                     	;# 
  1969  058C                     	;# 
  1970  058C                     	;# 
  1971  058D                     	;# 
  1972  058E                     	;# 
  1973  058E                     	;# 
  1974  058F                     	;# 
  1975  0590                     	;# 
  1976  0590                     	;# 
  1977  0591                     	;# 
  1978  0592                     	;# 
  1979  0592                     	;# 
  1980  0593                     	;# 
  1981  0594                     	;# 
  1982  0594                     	;# 
  1983  0595                     	;# 
  1984  0596                     	;# 
  1985  0596                     	;# 
  1986  0597                     	;# 
  1987  0598                     	;# 
  1988  0599                     	;# 
  1989  059A                     	;# 
  1990  059B                     	;# 
  1991  059B                     	;# 
  1992  059C                     	;# 
  1993  059D                     	;# 
  1994  060C                     	;# 
  1995  060C                     	;# 
  1996  060D                     	;# 
  1997  060E                     	;# 
  1998  060F                     	;# 
  1999  060F                     	;# 
  2000  0610                     	;# 
  2001  0611                     	;# 
  2002  0612                     	;# 
  2003  0613                     	;# 
  2004  0614                     	;# 
  2005  0617                     	;# 
  2006  0618                     	;# 
  2007  0619                     	;# 
  2008  061A                     	;# 
  2009  061B                     	;# 
  2010  061C                     	;# 
  2011  0691                     	;# 
  2012  0692                     	;# 
  2013  0693                     	;# 
  2014  0694                     	;# 
  2015  0695                     	;# 
  2016  0696                     	;# 
  2017  0697                     	;# 
  2018  0699                     	;# 
  2019  069A                     	;# 
  2020  0711                     	;# 
  2021  0712                     	;# 
  2022  0713                     	;# 
  2023  0714                     	;# 
  2024  0715                     	;# 
  2025  0718                     	;# 
  2026  0718                     	;# 
  2027  0719                     	;# 
  2028  071A                     	;# 
  2029  071A                     	;# 
  2030  071B                     	;# 
  2031  071C                     	;# 
  2032  071D                     	;# 
  2033  0791                     	;# 
  2034  0791                     	;# 
  2035  0792                     	;# 
  2036  0793                     	;# 
  2037  0793                     	;# 
  2038  0794                     	;# 
  2039  0795                     	;# 
  2040  0795                     	;# 
  2041  0796                     	;# 
  2042  0797                     	;# 
  2043  0797                     	;# 
  2044  0798                     	;# 
  2045  0799                     	;# 
  2046  079A                     	;# 
  2047  080C                     	;# 
  2048  080C                     	;# 
  2049  080D                     	;# 
  2050  080E                     	;# 
  2051  080E                     	;# 
  2052  080F                     	;# 
  2053  0810                     	;# 
  2054  0810                     	;# 
  2055  0811                     	;# 
  2056  0812                     	;# 
  2057  0812                     	;# 
  2058  0813                     	;# 
  2059  0814                     	;# 
  2060  0815                     	;# 
  2061  0816                     	;# 
  2062  0817                     	;# 
  2063  0818                     	;# 
  2064  0819                     	;# 
  2065  081A                     	;# 
  2066  081A                     	;# 
  2067  081B                     	;# 
  2068  081C                     	;# 
  2069  081C                     	;# 
  2070  081D                     	;# 
  2071  088C                     	;# 
  2072  088D                     	;# 
  2073  088E                     	;# 
  2074  088F                     	;# 
  2075  088F                     	;# 
  2076  0890                     	;# 
  2077  0891                     	;# 
  2078  0892                     	;# 
  2079  0893                     	;# 
  2080  0893                     	;# 
  2081  0894                     	;# 
  2082  0895                     	;# 
  2083  0896                     	;# 
  2084  0897                     	;# 
  2085  0897                     	;# 
  2086  0898                     	;# 
  2087  0899                     	;# 
  2088  0D8C                     	;# 
  2089  0D8C                     	;# 
  2090  0D8D                     	;# 
  2091  0D8E                     	;# 
  2092  0D8F                     	;# 
  2093  0D8F                     	;# 
  2094  0D90                     	;# 
  2095  0D91                     	;# 
  2096  0D92                     	;# 
  2097  0D92                     	;# 
  2098  0D93                     	;# 
  2099  0D94                     	;# 
  2100  0D95                     	;# 
  2101  0D95                     	;# 
  2102  0D96                     	;# 
  2103  0D97                     	;# 
  2104  0D98                     	;# 
  2105  0D99                     	;# 
  2106  0D9A                     	;# 
  2107  0D9B                     	;# 
  2108  0D9C                     	;# 
  2109  0D9D                     	;# 
  2110  0D9E                     	;# 
  2111  0D9E                     	;# 
  2112  0D9F                     	;# 
  2113  0DA0                     	;# 
  2114  0DA1                     	;# 
  2115  0DA1                     	;# 
  2116  0DA2                     	;# 
  2117  0DA3                     	;# 
  2118  0DA4                     	;# 
  2119  0DA4                     	;# 
  2120  0DA5                     	;# 
  2121  0DA6                     	;# 
  2122  0DA7                     	;# 
  2123  0DA7                     	;# 
  2124  0DA8                     	;# 
  2125  0DA9                     	;# 
  2126  0DAA                     	;# 
  2127  0DAB                     	;# 
  2128  0DAC                     	;# 
  2129  0DAD                     	;# 
  2130  0DAE                     	;# 
  2131  0DAF                     	;# 
  2132  0E0F                     	;# 
  2133  0E10                     	;# 
  2134  0E11                     	;# 
  2135  0E12                     	;# 
  2136  0E13                     	;# 
  2137  0E14                     	;# 
  2138  0E15                     	;# 
  2139  0E16                     	;# 
  2140  0E17                     	;# 
  2141  0E18                     	;# 
  2142  0E19                     	;# 
  2143  0E1A                     	;# 
  2144  0E1B                     	;# 
  2145  0E1C                     	;# 
  2146  0E1D                     	;# 
  2147  0E1E                     	;# 
  2148  0E1F                     	;# 
  2149  0E20                     	;# 
  2150  0E21                     	;# 
  2151  0E22                     	;# 
  2152  0E23                     	;# 
  2153  0E24                     	;# 
  2154  0E25                     	;# 
  2155  0E26                     	;# 
  2156  0E27                     	;# 
  2157  0E28                     	;# 
  2158  0E29                     	;# 
  2159  0E2A                     	;# 
  2160  0E2B                     	;# 
  2161  0E2C                     	;# 
  2162  0E2D                     	;# 
  2163  0E2E                     	;# 
  2164  0E90                     	;# 
  2165  0E91                     	;# 
  2166  0E92                     	;# 
  2167  0E94                     	;# 
  2168  0E95                     	;# 
  2169  0E9C                     	;# 
  2170  0E9D                     	;# 
  2171  0E9E                     	;# 
  2172  0E9F                     	;# 
  2173  0EA0                     	;# 
  2174  0EA1                     	;# 
  2175  0EA2                     	;# 
  2176  0EA3                     	;# 
  2177  0EA4                     	;# 
  2178  0EA5                     	;# 
  2179  0EA6                     	;# 
  2180  0EA7                     	;# 
  2181  0F0F                     	;# 
  2182  0F10                     	;# 
  2183  0F11                     	;# 
  2184  0F12                     	;# 
  2185  0F13                     	;# 
  2186  0F14                     	;# 
  2187  0F15                     	;# 
  2188  0F16                     	;# 
  2189  0F17                     	;# 
  2190  0F18                     	;# 
  2191  0F19                     	;# 
  2192  0F1A                     	;# 
  2193  0F1B                     	;# 
  2194  0F1C                     	;# 
  2195  0F1D                     	;# 
  2196  0F1E                     	;# 
  2197  0F1F                     	;# 
  2198  0F20                     	;# 
  2199  0F21                     	;# 
  2200  0F22                     	;# 
  2201  0F23                     	;# 
  2202  0F24                     	;# 
  2203  0F25                     	;# 
  2204  0F26                     	;# 
  2205  0F27                     	;# 
  2206  0F28                     	;# 
  2207  0F29                     	;# 
  2208  0F2A                     	;# 
  2209  0F2B                     	;# 
  2210  0F2C                     	;# 
  2211  0F2D                     	;# 
  2212  0F2E                     	;# 
  2213  0F2F                     	;# 
  2214  0F30                     	;# 
  2215  0F31                     	;# 
  2216  0F32                     	;# 
  2217  0F33                     	;# 
  2218  0F34                     	;# 
  2219  0F35                     	;# 
  2220  0F36                     	;# 
  2221  0F37                     	;# 
  2222  0FE4                     	;# 
  2223  0FE5                     	;# 
  2224  0FE6                     	;# 
  2225  0FE7                     	;# 
  2226  0FE8                     	;# 
  2227  0FE9                     	;# 
  2228  0FEA                     	;# 
  2229  0FEB                     	;# 
  2230  0FED                     	;# 
  2231  0FEE                     	;# 
  2232  0FEF                     	;# 
  2233  0000                     	;# 
  2234  0001                     	;# 
  2235  0002                     	;# 
  2236  0003                     	;# 
  2237  0004                     	;# 
  2238  0005                     	;# 
  2239  0006                     	;# 
  2240  0007                     	;# 
  2241  0008                     	;# 
  2242  0009                     	;# 
  2243  000A                     	;# 
  2244  000B                     	;# 
  2245  000C                     	;# 
  2246  000D                     	;# 
  2247  000E                     	;# 
  2248  0010                     	;# 
  2249  0011                     	;# 
  2250  0012                     	;# 
  2251  0013                     	;# 
  2252  0014                     	;# 
  2253  0015                     	;# 
  2254  0016                     	;# 
  2255  0016                     	;# 
  2256  0017                     	;# 
  2257  0018                     	;# 
  2258  0019                     	;# 
  2259  001A                     	;# 
  2260  001A                     	;# 
  2261  001B                     	;# 
  2262  001B                     	;# 
  2263  001C                     	;# 
  2264  001D                     	;# 
  2265  001E                     	;# 
  2266  001F                     	;# 
  2267  008C                     	;# 
  2268  008D                     	;# 
  2269  008E                     	;# 
  2270  0090                     	;# 
  2271  0091                     	;# 
  2272  0092                     	;# 
  2273  0093                     	;# 
  2274  0094                     	;# 
  2275  0095                     	;# 
  2276  0096                     	;# 
  2277  0098                     	;# 
  2278  0099                     	;# 
  2279  009A                     	;# 
  2280  009B                     	;# 
  2281  009B                     	;# 
  2282  009C                     	;# 
  2283  009D                     	;# 
  2284  009E                     	;# 
  2285  009F                     	;# 
  2286  010C                     	;# 
  2287  010D                     	;# 
  2288  010E                     	;# 
  2289  0111                     	;# 
  2290  0112                     	;# 
  2291  0113                     	;# 
  2292  0114                     	;# 
  2293  0115                     	;# 
  2294  0116                     	;# 
  2295  0117                     	;# 
  2296  0118                     	;# 
  2297  0119                     	;# 
  2298  011C                     	;# 
  2299  018C                     	;# 
  2300  018D                     	;# 
  2301  018E                     	;# 
  2302  0191                     	;# 
  2303  0191                     	;# 
  2304  0192                     	;# 
  2305  0193                     	;# 
  2306  0193                     	;# 
  2307  0194                     	;# 
  2308  0195                     	;# 
  2309  0196                     	;# 
  2310  0197                     	;# 
  2311  0199                     	;# 
  2312  0199                     	;# 
  2313  0199                     	;# 
  2314  019A                     	;# 
  2315  019A                     	;# 
  2316  019A                     	;# 
  2317  019B                     	;# 
  2318  019B                     	;# 
  2319  019B                     	;# 
  2320  019B                     	;# 
  2321  019B                     	;# 
  2322  019C                     	;# 
  2323  019C                     	;# 
  2324  019C                     	;# 
  2325  019D                     	;# 
  2326  019D                     	;# 
  2327  019D                     	;# 
  2328  019E                     	;# 
  2329  019E                     	;# 
  2330  019E                     	;# 
  2331  019F                     	;# 
  2332  019F                     	;# 
  2333  019F                     	;# 
  2334  019F                     	;# 
  2335  019F                     	;# 
  2336  020C                     	;# 
  2337  020D                     	;# 
  2338  020E                     	;# 
  2339  0211                     	;# 
  2340  0211                     	;# 
  2341  0212                     	;# 
  2342  0212                     	;# 
  2343  0213                     	;# 
  2344  0213                     	;# 
  2345  0214                     	;# 
  2346  0214                     	;# 
  2347  0215                     	;# 
  2348  0215                     	;# 
  2349  0215                     	;# 
  2350  0215                     	;# 
  2351  0216                     	;# 
  2352  0216                     	;# 
  2353  0217                     	;# 
  2354  0217                     	;# 
  2355  028C                     	;# 
  2356  028D                     	;# 
  2357  028E                     	;# 
  2358  0291                     	;# 
  2359  0291                     	;# 
  2360  0292                     	;# 
  2361  0293                     	;# 
  2362  0294                     	;# 
  2363  0298                     	;# 
  2364  0298                     	;# 
  2365  0299                     	;# 
  2366  029A                     	;# 
  2367  029B                     	;# 
  2368  029E                     	;# 
  2369  030C                     	;# 
  2370  030D                     	;# 
  2371  030E                     	;# 
  2372  038C                     	;# 
  2373  038D                     	;# 
  2374  038E                     	;# 
  2375  0391                     	;# 
  2376  0392                     	;# 
  2377  0393                     	;# 
  2378  0394                     	;# 
  2379  0395                     	;# 
  2380  0396                     	;# 
  2381  0397                     	;# 
  2382  0398                     	;# 
  2383  0399                     	;# 
  2384  040E                     	;# 
  2385  0413                     	;# 
  2386  0413                     	;# 
  2387  0414                     	;# 
  2388  0414                     	;# 
  2389  0415                     	;# 
  2390  0416                     	;# 
  2391  0417                     	;# 
  2392  0418                     	;# 
  2393  041A                     	;# 
  2394  041A                     	;# 
  2395  041B                     	;# 
  2396  041B                     	;# 
  2397  041C                     	;# 
  2398  041D                     	;# 
  2399  041E                     	;# 
  2400  041F                     	;# 
  2401  0493                     	;# 
  2402  0494                     	;# 
  2403  0495                     	;# 
  2404  0496                     	;# 
  2405  049A                     	;# 
  2406  049B                     	;# 
  2407  049C                     	;# 
  2408  049D                     	;# 
  2409  058C                     	;# 
  2410  058C                     	;# 
  2411  058D                     	;# 
  2412  058E                     	;# 
  2413  058E                     	;# 
  2414  058F                     	;# 
  2415  0590                     	;# 
  2416  0590                     	;# 
  2417  0591                     	;# 
  2418  0592                     	;# 
  2419  0592                     	;# 
  2420  0593                     	;# 
  2421  0594                     	;# 
  2422  0594                     	;# 
  2423  0595                     	;# 
  2424  0596                     	;# 
  2425  0596                     	;# 
  2426  0597                     	;# 
  2427  0598                     	;# 
  2428  0599                     	;# 
  2429  059A                     	;# 
  2430  059B                     	;# 
  2431  059B                     	;# 
  2432  059C                     	;# 
  2433  059D                     	;# 
  2434  060C                     	;# 
  2435  060C                     	;# 
  2436  060D                     	;# 
  2437  060E                     	;# 
  2438  060F                     	;# 
  2439  060F                     	;# 
  2440  0610                     	;# 
  2441  0611                     	;# 
  2442  0612                     	;# 
  2443  0613                     	;# 
  2444  0614                     	;# 
  2445  0617                     	;# 
  2446  0618                     	;# 
  2447  0619                     	;# 
  2448  061A                     	;# 
  2449  061B                     	;# 
  2450  061C                     	;# 
  2451  0691                     	;# 
  2452  0692                     	;# 
  2453  0693                     	;# 
  2454  0694                     	;# 
  2455  0695                     	;# 
  2456  0696                     	;# 
  2457  0697                     	;# 
  2458  0699                     	;# 
  2459  069A                     	;# 
  2460  0711                     	;# 
  2461  0712                     	;# 
  2462  0713                     	;# 
  2463  0714                     	;# 
  2464  0715                     	;# 
  2465  0718                     	;# 
  2466  0718                     	;# 
  2467  0719                     	;# 
  2468  071A                     	;# 
  2469  071A                     	;# 
  2470  071B                     	;# 
  2471  071C                     	;# 
  2472  071D                     	;# 
  2473  0791                     	;# 
  2474  0791                     	;# 
  2475  0792                     	;# 
  2476  0793                     	;# 
  2477  0793                     	;# 
  2478  0794                     	;# 
  2479  0795                     	;# 
  2480  0795                     	;# 
  2481  0796                     	;# 
  2482  0797                     	;# 
  2483  0797                     	;# 
  2484  0798                     	;# 
  2485  0799                     	;# 
  2486  079A                     	;# 
  2487  080C                     	;# 
  2488  080C                     	;# 
  2489  080D                     	;# 
  2490  080E                     	;# 
  2491  080E                     	;# 
  2492  080F                     	;# 
  2493  0810                     	;# 
  2494  0810                     	;# 
  2495  0811                     	;# 
  2496  0812                     	;# 
  2497  0812                     	;# 
  2498  0813                     	;# 
  2499  0814                     	;# 
  2500  0815                     	;# 
  2501  0816                     	;# 
  2502  0817                     	;# 
  2503  0818                     	;# 
  2504  0819                     	;# 
  2505  081A                     	;# 
  2506  081A                     	;# 
  2507  081B                     	;# 
  2508  081C                     	;# 
  2509  081C                     	;# 
  2510  081D                     	;# 
  2511  088C                     	;# 
  2512  088D                     	;# 
  2513  088E                     	;# 
  2514  088F                     	;# 
  2515  088F                     	;# 
  2516  0890                     	;# 
  2517  0891                     	;# 
  2518  0892                     	;# 
  2519  0893                     	;# 
  2520  0893                     	;# 
  2521  0894                     	;# 
  2522  0895                     	;# 
  2523  0896                     	;# 
  2524  0897                     	;# 
  2525  0897                     	;# 
  2526  0898                     	;# 
  2527  0899                     	;# 
  2528  0D8C                     	;# 
  2529  0D8C                     	;# 
  2530  0D8D                     	;# 
  2531  0D8E                     	;# 
  2532  0D8F                     	;# 
  2533  0D8F                     	;# 
  2534  0D90                     	;# 
  2535  0D91                     	;# 
  2536  0D92                     	;# 
  2537  0D92                     	;# 
  2538  0D93                     	;# 
  2539  0D94                     	;# 
  2540  0D95                     	;# 
  2541  0D95                     	;# 
  2542  0D96                     	;# 
  2543  0D97                     	;# 
  2544  0D98                     	;# 
  2545  0D99                     	;# 
  2546  0D9A                     	;# 
  2547  0D9B                     	;# 
  2548  0D9C                     	;# 
  2549  0D9D                     	;# 
  2550  0D9E                     	;# 
  2551  0D9E                     	;# 
  2552  0D9F                     	;# 
  2553  0DA0                     	;# 
  2554  0DA1                     	;# 
  2555  0DA1                     	;# 
  2556  0DA2                     	;# 
  2557  0DA3                     	;# 
  2558  0DA4                     	;# 
  2559  0DA4                     	;# 
  2560  0DA5                     	;# 
  2561  0DA6                     	;# 
  2562  0DA7                     	;# 
  2563  0DA7                     	;# 
  2564  0DA8                     	;# 
  2565  0DA9                     	;# 
  2566  0DAA                     	;# 
  2567  0DAB                     	;# 
  2568  0DAC                     	;# 
  2569  0DAD                     	;# 
  2570  0DAE                     	;# 
  2571  0DAF                     	;# 
  2572  0E0F                     	;# 
  2573  0E10                     	;# 
  2574  0E11                     	;# 
  2575  0E12                     	;# 
  2576  0E13                     	;# 
  2577  0E14                     	;# 
  2578  0E15                     	;# 
  2579  0E16                     	;# 
  2580  0E17                     	;# 
  2581  0E18                     	;# 
  2582  0E19                     	;# 
  2583  0E1A                     	;# 
  2584  0E1B                     	;# 
  2585  0E1C                     	;# 
  2586  0E1D                     	;# 
  2587  0E1E                     	;# 
  2588  0E1F                     	;# 
  2589  0E20                     	;# 
  2590  0E21                     	;# 
  2591  0E22                     	;# 
  2592  0E23                     	;# 
  2593  0E24                     	;# 
  2594  0E25                     	;# 
  2595  0E26                     	;# 
  2596  0E27                     	;# 
  2597  0E28                     	;# 
  2598  0E29                     	;# 
  2599  0E2A                     	;# 
  2600  0E2B                     	;# 
  2601  0E2C                     	;# 
  2602  0E2D                     	;# 
  2603  0E2E                     	;# 
  2604  0E90                     	;# 
  2605  0E91                     	;# 
  2606  0E92                     	;# 
  2607  0E94                     	;# 
  2608  0E95                     	;# 
  2609  0E9C                     	;# 
  2610  0E9D                     	;# 
  2611  0E9E                     	;# 
  2612  0E9F                     	;# 
  2613  0EA0                     	;# 
  2614  0EA1                     	;# 
  2615  0EA2                     	;# 
  2616  0EA3                     	;# 
  2617  0EA4                     	;# 
  2618  0EA5                     	;# 
  2619  0EA6                     	;# 
  2620  0EA7                     	;# 
  2621  0F0F                     	;# 
  2622  0F10                     	;# 
  2623  0F11                     	;# 
  2624  0F12                     	;# 
  2625  0F13                     	;# 
  2626  0F14                     	;# 
  2627  0F15                     	;# 
  2628  0F16                     	;# 
  2629  0F17                     	;# 
  2630  0F18                     	;# 
  2631  0F19                     	;# 
  2632  0F1A                     	;# 
  2633  0F1B                     	;# 
  2634  0F1C                     	;# 
  2635  0F1D                     	;# 
  2636  0F1E                     	;# 
  2637  0F1F                     	;# 
  2638  0F20                     	;# 
  2639  0F21                     	;# 
  2640  0F22                     	;# 
  2641  0F23                     	;# 
  2642  0F24                     	;# 
  2643  0F25                     	;# 
  2644  0F26                     	;# 
  2645  0F27                     	;# 
  2646  0F28                     	;# 
  2647  0F29                     	;# 
  2648  0F2A                     	;# 
  2649  0F2B                     	;# 
  2650  0F2C                     	;# 
  2651  0F2D                     	;# 
  2652  0F2E                     	;# 
  2653  0F2F                     	;# 
  2654  0F30                     	;# 
  2655  0F31                     	;# 
  2656  0F32                     	;# 
  2657  0F33                     	;# 
  2658  0F34                     	;# 
  2659  0F35                     	;# 
  2660  0F36                     	;# 
  2661  0F37                     	;# 
  2662  0FE4                     	;# 
  2663  0FE5                     	;# 
  2664  0FE6                     	;# 
  2665  0FE7                     	;# 
  2666  0FE8                     	;# 
  2667  0FE9                     	;# 
  2668  0FEA                     	;# 
  2669  0FEB                     	;# 
  2670  0FED                     	;# 
  2671  0FEE                     	;# 
  2672  0FEF                     	;# 
  2673                           
  2674                           	psect	stringtext
  2675  0800                     __pstringtext:	
  2676  0800                     _hexpowers:	
  2677  0800  3401               	retlw	1
  2678  0801  3400               	retlw	0
  2679  0802  3410               	retlw	16
  2680  0803  3400               	retlw	0
  2681  0804  3400               	retlw	0
  2682  0805  3401               	retlw	1
  2683  0806  3400               	retlw	0
  2684  0807  3410               	retlw	16
  2685  0808                     __end_of_hexpowers:	
  2686  0010                     _PIR1bits	set	16
  2687  001B                     _PR2	set	27
  2688  001E                     _T2CLKCON	set	30
  2689  001C                     _T2CON	set	28
  2690  001C                     _T2CONbits	set	28
  2691  001D                     _T2HLT	set	29
  2692  001D                     _T2HLTbits	set	29
  2693  001B                     _T2PR	set	27
  2694  001F                     _T2RST	set	31
  2695  001F                     _T2RSTbits	set	31
  2696  001A                     _T2TMR	set	26
  2697  001A                     _TMR2	set	26
  2698  005F                     _GIE	set	95
  2699  0072                     _RC2	set	114
  2700  009D                     _ADCON0	set	157
  2701  009D                     _ADCON0bits	set	157
  2702  009E                     _ADCON1	set	158
  2703  009F                     _ADCON2	set	159
  2704  009C                     _ADRESH	set	156
  2705  009B                     _ADRESL	set	155
  2706  0095                     _OPTION_REGbits	set	149
  2707  0099                     _OSCCON	set	153
  2708  009A                     _OSCSTAT	set	154
  2709  0098                     _OSCTUNE	set	152
  2710  008C                     _TRISA	set	140
  2711  008D                     _TRISB	set	141
  2712  008E                     _TRISC	set	142
  2713  010C                     _LATA	set	268
  2714  010D                     _LATB	set	269
  2715  010E                     _LATC	set	270
  2716  0862                     _LATA2	set	2146
  2717  0864                     _LATA4	set	2148
  2718  0875                     _LATC5	set	2165
  2719  018C                     _ANSELA	set	396
  2720  018D                     _ANSELB	set	397
  2721  018E                     _ANSELC	set	398
  2722  019F                     _BAUD1CON	set	415
  2723  0199                     _RC1REG	set	409
  2724  019D                     _RC1STA	set	413
  2725  019D                     _RC1STAbits	set	413
  2726  019C                     _SPBRGH	set	412
  2727  019B                     _SPBRGL	set	411
  2728  019A                     _TX1REG	set	410
  2729  019E                     _TX1STA	set	414
  2730  020D                     _WPUB	set	525
  2731  020E                     _WPUC	set	526
  2732  0E0F                     _PPSLOCK	set	3599
  2733  0E0F                     _PPSLOCKbits	set	3599
  2734  0E24                     _RXPPS	set	3620
  2735  0E9F                     _RB7PPS	set	3743
  2736  0808                     STR_6:	
  2737  0808  3453               	retlw	83	;'S'
  2738  0809  3455               	retlw	85	;'U'
  2739  080A  3457               	retlw	87	;'W'
  2740  080B  342C               	retlw	44	;','
  2741  080C  3432               	retlw	50	;'2'
  2742  080D  3441               	retlw	65	;'A'
  2743  080E  3433               	retlw	51	;'3'
  2744  080F  3437               	retlw	55	;'7'
  2745  0810  342C               	retlw	44	;','
  2746  0811  3431               	retlw	49	;'1'
  2747  0812  3446               	retlw	70	;'F'
  2748  0813  3425               	retlw	37	;'%'
  2749  0814  3430               	retlw	48	;'0'
  2750  0815  3432               	retlw	50	;'2'
  2751  0816  3478               	retlw	120	;'x'
  2752  0817  3430               	retlw	48	;'0'
  2753  0818  3430               	retlw	48	;'0'
  2754  0819  3425               	retlw	37	;'%'
  2755  081A  3430               	retlw	48	;'0'
  2756  081B  3432               	retlw	50	;'2'
  2757  081C  3478               	retlw	120	;'x'
  2758  081D  3430               	retlw	48	;'0'
  2759  081E  3430               	retlw	48	;'0'
  2760  081F  3425               	retlw	37	;'%'
  2761  0820  3430               	retlw	48	;'0'
  2762  0821  3432               	retlw	50	;'2'
  2763  0822  3478               	retlw	120	;'x'
  2764  0823  3430               	retlw	48	;'0'
  2765  0824  3430               	retlw	48	;'0'
  2766  0825  340A               	retlw	10
  2767  0826  3400               	retlw	0
  2768  0827                     STR_8:	
  2769  0827  3430               	retlw	48	;'0'
  2770  0828  3431               	retlw	49	;'1'
  2771  0829  3432               	retlw	50	;'2'
  2772  082A  3433               	retlw	51	;'3'
  2773  082B  3434               	retlw	52	;'4'
  2774  082C  3435               	retlw	53	;'5'
  2775  082D  3436               	retlw	54	;'6'
  2776  082E  3437               	retlw	55	;'7'
  2777  082F  3438               	retlw	56	;'8'
  2778  0830  3439               	retlw	57	;'9'
  2779  0831  3461               	retlw	97	;'a'
  2780  0832  3462               	retlw	98	;'b'
  2781  0833  3463               	retlw	99	;'c'
  2782  0834  3464               	retlw	100	;'d'
  2783  0835  3465               	retlw	101	;'e'
  2784  0836  3466               	retlw	102	;'f'
  2785  0837  3400               	retlw	0
  2786  0838                     STR_7:	
  2787  0838  3453               	retlw	83	;'S'
  2788  0839  3455               	retlw	85	;'U'
  2789  083A  3457               	retlw	87	;'W'
  2790  083B  342C               	retlw	44	;','
  2791  083C  3432               	retlw	50	;'2'
  2792  083D  3441               	retlw	65	;'A'
  2793  083E  3433               	retlw	51	;'3'
  2794  083F  3438               	retlw	56	;'8'
  2795  0840  342C               	retlw	44	;','
  2796  0841  3425               	retlw	37	;'%'
  2797  0842  3430               	retlw	48	;'0'
  2798  0843  3432               	retlw	50	;'2'
  2799  0844  3478               	retlw	120	;'x'
  2800  0845  340A               	retlw	10
  2801  0846  3400               	retlw	0
  2802  0847                     STR_4:	
  2803  0847  3453               	retlw	83	;'S'
  2804  0848  342D               	retlw	45	;'-'
  2805  0849  342C               	retlw	44	;','
  2806  084A  344D               	retlw	77	;'M'
  2807  084B  3461               	retlw	97	;'a'
  2808  084C  3473               	retlw	115	;'s'
  2809  084D  3474               	retlw	116	;'t'
  2810  084E  3465               	retlw	101	;'e'
  2811  084F  3472               	retlw	114	;'r'
  2812  0850  3473               	retlw	115	;'s'
  2813  0851  3431               	retlw	49	;'1'
  2814  0852  3436               	retlw	54	;'6'
  2815  0853  3400               	retlw	0
  2816  0854                     STR_3:	
  2817  0854  3453               	retlw	83	;'S'
  2818  0855  3452               	retlw	82	;'R'
  2819  0856  342C               	retlw	44	;','
  2820  0857  3432               	retlw	50	;'2'
  2821  0858  3430               	retlw	48	;'0'
  2822  0859  3430               	retlw	48	;'0'
  2823  085A  3430               	retlw	48	;'0'
  2824  085B  3430               	retlw	48	;'0'
  2825  085C  3430               	retlw	48	;'0'
  2826  085D  3430               	retlw	48	;'0'
  2827  085E  3430               	retlw	48	;'0'
  2828  085F  3400               	retlw	0
  2829  0860                     STR_2:	
  2830  0860  3453               	retlw	83	;'S'
  2831  0861  3453               	retlw	83	;'S'
  2832  0862  342C               	retlw	44	;','
  2833  0863  3432               	retlw	50	;'2'
  2834  0864  3430               	retlw	48	;'0'
  2835  0865  3430               	retlw	48	;'0'
  2836  0866  3430               	retlw	48	;'0'
  2837  0867  3430               	retlw	48	;'0'
  2838  0868  3430               	retlw	48	;'0'
  2839  0869  3430               	retlw	48	;'0'
  2840  086A  3430               	retlw	48	;'0'
  2841  086B  3400               	retlw	0
  2842  086C                     STR_1:	
  2843  086C  3453               	retlw	83	;'S'
  2844  086D  3446               	retlw	70	;'F'
  2845  086E  342C               	retlw	44	;','
  2846  086F  3432               	retlw	50	;'2'
  2847  0870  3400               	retlw	0
  2848  0871                     STR_5:	
  2849  0871  3452               	retlw	82	;'R'
  2850  0872  342C               	retlw	44	;','
  2851  0873  3431               	retlw	49	;'1'
  2852  0874  3400               	retlw	0
  2853                           
  2854                           ; #config settings
  2855  0000                     
  2856                           	psect	cinit
  2857  07F6                     start_initialization:	
  2858  07F6                     __initialization:	
  2859                           
  2860                           ; Clear objects allocated to BANK0
  2861  07F6  3020               	movlw	low __pbssBANK0
  2862  07F7  0084               	movwf	4
  2863  07F8  3000               	movlw	high __pbssBANK0
  2864  07F9  0085               	movwf	5
  2865  07FA  3020               	movlw	32
  2866  07FB  3184  24E6         	fcall	clear_ram0
  2867  07FD                     end_of_initialization:	
  2868                           ;End of C runtime variable initialization code
  2869                           
  2870  07FD                     __end_of__initialization:	
  2871  07FD  0020               	movlb	0
  2872  07FE  3186  2E3A         	ljmp	_main	;jump to C main() function
  2873                           
  2874                           	psect	bssBANK0
  2875  0020                     __pbssBANK0:	
  2876  0020                     _rxBuffer:	
  2877  0020                     	ds	32
  2878                           
  2879                           	psect	clrtext
  2880  04E6                     clear_ram0:	
  2881                           ;	Called with FSR0 containing the base address, and
  2882                           ;	WREG with the size to clear
  2883                           
  2884  04E6  0064               	clrwdt	;clear the watchdog before getting into this loop
  2885  04E7                     clrloop0:	
  2886  04E7  0180               	clrf	0	;clear RAM location pointed to by FSR
  2887  04E8  3101               	addfsr 0,1
  2888  04E9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2889  04EA  2CE7               	goto	clrloop0	;have we reached the end yet?
  2890  04EB  3400               	retlw	0	;all done for this memory range, return
  2891                           
  2892                           	psect	cstackCOMMON
  2893  0070                     __pcstackCOMMON:	
  2894  0070                     ?_isdigit:	
  2895  0070                     ?_TMR2_Start:	
  2896                           ; 1 bit 
  2897                           
  2898  0070                     ??_TMR2_Start:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ?_OSCILLATOR_Initialize:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ??_OSCILLATOR_Initialize:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ?_ADC1_Initialize:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ??_ADC1_Initialize:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ?_mygets:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ??_mygets:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ??_isdigit:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ?_TMR2_Initialize:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ??_TMR2_Initialize:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ?_TMR2_HasOverflowOccured:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ??_TMR2_HasOverflowOccured:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?_EUSART_Initialize:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ??_EUSART_Initialize:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?_EUSART_Read:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ??_EUSART_Read:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ?_EUSART_Write:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ??_EUSART_Write:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     ?_getch:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     ??_getch:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?_putch:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ?_PIN_MANAGER_Initialize:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ??_PIN_MANAGER_Initialize:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     ?_SYSTEM_Initialize:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     ?_main:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0070                     ?_ADC1_GetConversion:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     ?___wmul:	
  2977                           ; 2 bytes @ 0x0
  2978                           
  2979  0070                     ?___lwdiv:	
  2980                           ; 2 bytes @ 0x0
  2981                           
  2982  0070                     TMR2_HasOverflowOccured@status:	
  2983                           ; 2 bytes @ 0x0
  2984                           
  2985  0070                     EUSART_Write@txData:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     PIN_MANAGER_Initialize@state:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     _isdigit$684:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     ___wmul@multiplier:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     ___lwdiv@divisor:	
  2998                           ; 2 bytes @ 0x0
  2999                           
  3000                           
  3001                           ; 2 bytes @ 0x0
  3002  0070                     	ds	1
  3003  0071                     ??_putch:	
  3004  0071                     ??_SYSTEM_Initialize:	
  3005                           ; 1 bytes @ 0x1
  3006                           
  3007  0071                     putch@txData:	
  3008                           ; 1 bytes @ 0x1
  3009                           
  3010  0071                     mygets@c:	
  3011                           ; 1 bytes @ 0x1
  3012                           
  3013  0071                     isdigit@c:	
  3014                           ; 1 bytes @ 0x1
  3015                           
  3016                           
  3017                           ; 1 bytes @ 0x1
  3018  0071                     	ds	1
  3019  0072                     ?_cputs:	
  3020  0072                     ??_ADC1_GetConversion:	
  3021                           ; 1 bytes @ 0x2
  3022                           
  3023  0072                     mygets@i:	
  3024                           ; 1 bytes @ 0x2
  3025                           
  3026  0072                     ___wmul@multiplicand:	
  3027                           ; 1 bytes @ 0x2
  3028                           
  3029  0072                     ___lwdiv@dividend:	
  3030                           ; 2 bytes @ 0x2
  3031                           
  3032  0072                     cputs@s:	
  3033                           ; 2 bytes @ 0x2
  3034                           
  3035                           
  3036                           ; 2 bytes @ 0x2
  3037  0072                     	ds	1
  3038  0073                     ADC1_GetConversion@channel:	
  3039  0073                     mygets@p:	
  3040                           ; 1 bytes @ 0x3
  3041                           
  3042                           
  3043                           ; 1 bytes @ 0x3
  3044  0073                     	ds	1
  3045  0074                     ??_cputs:	
  3046  0074                     ??___wmul:	
  3047                           ; 1 bytes @ 0x4
  3048                           
  3049  0074                     ??___lwdiv:	
  3050                           ; 1 bytes @ 0x4
  3051                           
  3052  0074                     ___wmul@product:	
  3053                           ; 1 bytes @ 0x4
  3054                           
  3055                           
  3056                           ; 2 bytes @ 0x4
  3057  0074                     	ds	1
  3058  0075                     ?_puts:	
  3059  0075                     ___lwdiv@quotient:	
  3060                           ; 2 bytes @ 0x5
  3061                           
  3062  0075                     puts@s:	
  3063                           ; 2 bytes @ 0x5
  3064                           
  3065                           
  3066                           ; 2 bytes @ 0x5
  3067  0075                     	ds	2
  3068  0077                     ?_sendCMD:	
  3069  0077                     ??_puts:	
  3070                           ; 1 bytes @ 0x7
  3071                           
  3072  0077                     ___lwdiv@counter:	
  3073                           ; 1 bytes @ 0x7
  3074                           
  3075  0077                     sendCMD@cmd:	
  3076                           ; 1 bytes @ 0x7
  3077                           
  3078                           
  3079                           ; 2 bytes @ 0x7
  3080  0077                     	ds	1
  3081  0078                     ??_printf:	
  3082                           
  3083                           ; 1 bytes @ 0x8
  3084  0078                     	ds	1
  3085  0079                     ??_sendCMD:	
  3086                           
  3087                           ; 1 bytes @ 0x9
  3088  0079                     	ds	3
  3089  007C                     main@value:	
  3090                           
  3091                           ; 1 bytes @ 0xC
  3092  007C                     	ds	1
  3093  007D                     main@time:	
  3094                           
  3095                           ; 1 bytes @ 0xD
  3096  007D                     	ds	1
  3097                           
  3098                           	psect	cstackBANK0
  3099  0040                     __pcstackBANK0:	
  3100  0040                     ?_printf:	
  3101  0040                     printf@f:	
  3102                           ; 2 bytes @ 0x0
  3103                           
  3104                           
  3105                           ; 2 bytes @ 0x0
  3106  0040                     	ds	8
  3107  0048                     printf@idx:	
  3108                           
  3109                           ; 1 bytes @ 0x8
  3110  0048                     	ds	1
  3111  0049                     printf@ap:	
  3112                           
  3113                           ; 1 bytes @ 0x9
  3114  0049                     	ds	1
  3115  004A                     printf@flag:	
  3116                           
  3117                           ; 1 bytes @ 0xA
  3118  004A                     	ds	1
  3119  004B                     printf@val:	
  3120                           
  3121                           ; 2 bytes @ 0xB
  3122  004B                     	ds	2
  3123  004D                     printf@prec:	
  3124                           
  3125                           ; 1 bytes @ 0xD
  3126  004D                     	ds	1
  3127  004E                     printf@width:	
  3128                           
  3129                           ; 2 bytes @ 0xE
  3130  004E                     	ds	2
  3131  0050                     printf@c:	
  3132                           
  3133                           ; 1 bytes @ 0x10
  3134  0050                     	ds	1
  3135  0051                     ??_main:	
  3136                           
  3137                           ; 1 bytes @ 0x11
  3138  0051                     	ds	3
  3139                           
  3140                           	psect	maintext
  3141  063A                     __pmaintext:	
  3142 ;;
  3143 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3144 ;;
  3145 ;; *************** function _main *****************
  3146 ;; Defined at:
  3147 ;;		line 58 in file "main.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  value           1   12[COMMON] unsigned char 
  3152 ;;  time            1   13[COMMON] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : B1F/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;Total ram usage:        5 bytes
  3167 ;; Hardware stack levels required when called:    5
  3168 ;; This function calls:
  3169 ;;		_ADC1_GetConversion
  3170 ;;		_SYSTEM_Initialize
  3171 ;;		_TMR2_HasOverflowOccured
  3172 ;;		_mygets
  3173 ;;		_printf
  3174 ;;		_sendCMD
  3175 ;; This function is called by:
  3176 ;;		Startup code after reset
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function _main
  3182  063A                     _main:	
  3183                           
  3184                           ;main.c: 61: SYSTEM_Initialize();
  3185                           
  3186                           ;incstack = 0
  3187                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3188  063A  3185  254C  3186   	fcall	_SYSTEM_Initialize
  3189                           
  3190                           ;main.c: 64: do { LATC5 = 1; } while(0);
  3191  063D  0022               	movlb	2	; select bank2
  3192  063E  168E               	bsf	14,5	;volatile
  3193                           
  3194                           ;main.c: 65: do { LATA4 = 1; } while(0);
  3195  063F  160C               	bsf	12,4	;volatile
  3196                           
  3197                           ;main.c: 66: mygets();
  3198  0640  3185  25A4  3186   	fcall	_mygets
  3199                           
  3200                           ;main.c: 67: sendCMD( "SF,2");
  3201  0643  306C               	movlw	low (STR_1| (0+32768))
  3202  0644  00F7               	movwf	sendCMD@cmd
  3203  0645  3088               	movlw	high (STR_1| (0+32768))
  3204  0646  00F8               	movwf	sendCMD@cmd+1
  3205  0647  3185  2511  3186   	fcall	_sendCMD
  3206                           
  3207                           ;main.c: 68: sendCMD( "SS,20000000");
  3208  064A  3060               	movlw	low (STR_2| (0+32768))
  3209  064B  00F7               	movwf	sendCMD@cmd
  3210  064C  3088               	movlw	high (STR_2| (0+32768))
  3211  064D  00F8               	movwf	sendCMD@cmd+1
  3212  064E  3185  2511  3186   	fcall	_sendCMD
  3213                           
  3214                           ;main.c: 69: sendCMD( "SR,20000000");
  3215  0651  3054               	movlw	low (STR_3| (0+32768))
  3216  0652  00F7               	movwf	sendCMD@cmd
  3217  0653  3088               	movlw	high (STR_3| (0+32768))
  3218  0654  00F8               	movwf	sendCMD@cmd+1
  3219  0655  3185  2511  3186   	fcall	_sendCMD
  3220                           
  3221                           ;main.c: 70: sendCMD( "S-,Masters16");
  3222  0658  3047               	movlw	low (STR_4| (0+32768))
  3223  0659  00F7               	movwf	sendCMD@cmd
  3224  065A  3088               	movlw	high (STR_4| (0+32768))
  3225  065B  00F8               	movwf	sendCMD@cmd+1
  3226  065C  3185  2511  3186   	fcall	_sendCMD
  3227                           
  3228                           ;main.c: 71: sendCMD( "R,1");
  3229  065F  3071               	movlw	low (STR_5| (0+32768))
  3230  0660  00F7               	movwf	sendCMD@cmd
  3231  0661  3088               	movlw	high (STR_5| (0+32768))
  3232  0662  00F8               	movwf	sendCMD@cmd+1
  3233  0663  3185  2511  3186   	fcall	_sendCMD
  3234                           
  3235                           ;main.c: 72: mygets();
  3236  0666  3185  25A4  3186   	fcall	_mygets
  3237                           
  3238                           ;main.c: 73: _delay((unsigned long)((640)*(16000000/4000.0)));
  3239  0669  300D               	movlw	13
  3240  066A  0020               	movlb	0	; select bank0
  3241  066B  00D3               	movwf	??_main+2
  3242  066C  30FD               	movlw	253
  3243  066D  00D2               	movwf	??_main+1
  3244  066E  30AD               	movlw	173
  3245  066F  00D1               	movwf	??_main
  3246  0670                     u767:	
  3247  0670  0BD1               	decfsz	??_main,f
  3248  0671  2E70               	goto	u767
  3249  0672  0BD2               	decfsz	??_main+1,f
  3250  0673  2E70               	goto	u767
  3251  0674  0BD3               	decfsz	??_main+2,f
  3252  0675  2E70               	goto	u767
  3253  0676  0000               	nop
  3254  0677                     l220:	
  3255                           ;main.c: 74: while( !RC2);
  3256                           
  3257  0677  0020               	movlb	0	; select bank0
  3258  0678  1D0E               	btfss	14,2	;volatile
  3259  0679  2E77               	goto	l220
  3260  067A                     l1229:	
  3261                           ;main.c: 76: while (1)
  3262                           
  3263                           
  3264                           ;main.c: 77: {
  3265                           ;main.c: 78: uint8_t time;
  3266                           ;main.c: 80: if ( TMR2_HasOverflowOccured()) {
  3267  067A  3184  24FD  3186   	fcall	_TMR2_HasOverflowOccured
  3268  067D  3A00               	xorlw	0
  3269  067E  1903               	skipnz
  3270  067F  2E85               	goto	l1233
  3271                           
  3272                           ;main.c: 81: time++;
  3273  0680  3001               	movlw	1
  3274  0681  0020               	movlb	0	; select bank0
  3275  0682  00D1               	movwf	??_main
  3276  0683  0851               	movf	??_main,w
  3277  0684  07FD               	addwf	main@time,f
  3278  0685                     l1233:	
  3279                           
  3280                           ;main.c: 82: }
  3281                           ;main.c: 84: if ( time >= 50)
  3282  0685  3032               	movlw	50
  3283  0686  027D               	subwf	main@time,w
  3284  0687  1C03               	skipc
  3285  0688  2E7A               	goto	l1229
  3286                           
  3287                           ;main.c: 85: {
  3288                           ;main.c: 86: uint8_t value;
  3289                           ;main.c: 87: time = 0;
  3290  0689  01FD               	clrf	main@time
  3291                           
  3292                           ;main.c: 88: do { LATA2 = ~LATA2; } while(0);
  3293  068A  3004               	movlw	4
  3294  068B  0022               	movlb	2	; select bank2
  3295  068C  068C               	xorwf	12,f
  3296                           
  3297                           ;main.c: 90: value = ADC1_GetConversion(POT)>>9;
  3298  068D  3004               	movlw	4
  3299  068E  3185  256F  3186   	fcall	_ADC1_GetConversion
  3300  0691  0870               	movf	?_ADC1_GetConversion,w
  3301  0692  0020               	movlb	0	; select bank0
  3302  0693  00D1               	movwf	??_main
  3303  0694  0871               	movf	?_ADC1_GetConversion+1,w
  3304  0695  00D2               	movwf	??_main+1
  3305  0696  3009               	movlw	9
  3306  0697                     u755:	
  3307  0697  36D2               	lsrf	??_main+1,f
  3308  0698  0CD1               	rrf	??_main,f
  3309  0699  0B89               	decfsz	9,f
  3310  069A  2E97               	goto	u755
  3311  069B  0851               	movf	??_main,w
  3312  069C  00D3               	movwf	??_main+2
  3313  069D  0853               	movf	??_main+2,w
  3314  069E  00FC               	movwf	main@value
  3315                           
  3316                           ;main.c: 93: printf( "SUW,2A37,1F%02x00%02x00%02x00\n", value,180,10);
  3317  069F  3008               	movlw	low (STR_6| (0+32768))
  3318  06A0  00C0               	movwf	printf@f
  3319  06A1  3088               	movlw	high (STR_6| (0+32768))
  3320  06A2  00C1               	movwf	printf@f+1
  3321  06A3  087C               	movf	main@value,w
  3322  06A4  00D1               	movwf	??_main
  3323  06A5  01D2               	clrf	??_main+1
  3324  06A6  0851               	movf	??_main,w
  3325  06A7  00C2               	movwf	?_printf+2
  3326  06A8  0852               	movf	??_main+1,w
  3327  06A9  00C3               	movwf	?_printf+3
  3328  06AA  30B4               	movlw	180
  3329  06AB  00C4               	movwf	?_printf+4
  3330  06AC  3000               	movlw	0
  3331  06AD  00C5               	movwf	?_printf+5
  3332  06AE  300A               	movlw	10
  3333  06AF  00C6               	movwf	?_printf+6
  3334  06B0  3000               	movlw	0
  3335  06B1  00C7               	movwf	?_printf+7
  3336  06B2  3186  26C8  3186   	fcall	_printf
  3337                           
  3338                           ;main.c: 94: mygets();
  3339  06B5  3185  25A4  3186   	fcall	_mygets
  3340                           
  3341                           ;main.c: 97: printf( "SUW,2A38,%02x\n",1);
  3342  06B8  3038               	movlw	low (STR_7| (0+32768))
  3343  06B9  0020               	movlb	0	; select bank0
  3344  06BA  00C0               	movwf	printf@f
  3345  06BB  3088               	movlw	high (STR_7| (0+32768))
  3346  06BC  00C1               	movwf	printf@f+1
  3347  06BD  3001               	movlw	1
  3348  06BE  00C2               	movwf	?_printf+2
  3349  06BF  3000               	movlw	0
  3350  06C0  00C3               	movwf	?_printf+3
  3351  06C1  3186  26C8  3186   	fcall	_printf
  3352                           
  3353                           ;main.c: 98: mygets();
  3354  06C4  3185  25A4  3186   	fcall	_mygets
  3355  06C7  2E7A               	goto	l1229
  3356  06C8                     __end_of_main:	
  3357                           
  3358                           	psect	text1
  3359  0511                     __ptext1:	
  3360 ;; *************** function _sendCMD *****************
  3361 ;; Defined at:
  3362 ;;		line 115 in file "main.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  cmd             2    7[COMMON] PTR const unsigned char 
  3365 ;;		 -> STR_5(4), STR_4(13), STR_3(12), STR_2(12), 
  3366 ;;		 -> STR_1(5), 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;Total ram usage:        2 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    4
  3385 ;; This function calls:
  3386 ;;		_mygets
  3387 ;;		_puts
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _sendCMD
  3395  0511                     _sendCMD:	
  3396                           
  3397                           ;main.c: 117: puts( cmd);
  3398                           
  3399                           ;incstack = 0
  3400                           ; Regs used in _sendCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3401  0511  0878               	movf	sendCMD@cmd+1,w
  3402  0512  00F6               	movwf	puts@s+1
  3403  0513  0877               	movf	sendCMD@cmd,w
  3404  0514  00F5               	movwf	puts@s
  3405  0515  3185  2526  3185   	fcall	_puts
  3406                           
  3407                           ;main.c: 118: mygets();
  3408  0518  3185  25A4         	fcall	_mygets
  3409  051A  0008               	return
  3410  051B                     __end_of_sendCMD:	
  3411                           
  3412                           	psect	text2
  3413  0526                     __ptext2:	
  3414 ;; *************** function _puts *****************
  3415 ;; Defined at:
  3416 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\puts.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  s               2    5[COMMON] PTR const unsigned char 
  3419 ;;		 -> STR_5(4), STR_4(13), STR_3(12), STR_2(12), 
  3420 ;;		 -> STR_1(5), 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2    5[COMMON] int 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;Total ram usage:        2 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    3
  3439 ;; This function calls:
  3440 ;;		_cputs
  3441 ;;		_putch
  3442 ;; This function is called by:
  3443 ;;		_sendCMD
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _puts
  3449  0526                     _puts:	
  3450                           
  3451                           ;incstack = 0
  3452                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3453  0526  0876               	movf	puts@s+1,w
  3454  0527  00F3               	movwf	cputs@s+1
  3455  0528  0875               	movf	puts@s,w
  3456  0529  00F2               	movwf	cputs@s
  3457  052A  3185  255B  3185   	fcall	_cputs
  3458  052D  300A               	movlw	10
  3459  052E  3184  24DB         	fcall	_putch
  3460  0530  0008               	return
  3461  0531                     __end_of_puts:	
  3462                           
  3463                           	psect	text3
  3464  055B                     __ptext3:	
  3465 ;; *************** function _cputs *****************
  3466 ;; Defined at:
  3467 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\cputs.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  s               2    2[COMMON] PTR const unsigned char 
  3470 ;;		 -> STR_5(4), STR_4(13), STR_3(12), STR_2(12), 
  3471 ;;		 -> STR_1(5), 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3486 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3487 ;;Total ram usage:        3 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    2
  3490 ;; This function calls:
  3491 ;;		_putch
  3492 ;; This function is called by:
  3493 ;;		_puts
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           
  3498                           ;psect for function _cputs
  3499  055B                     _cputs:	
  3500  055B                     l1055:	
  3501                           ;incstack = 0
  3502                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3503                           
  3504  055B  0872               	movf	cputs@s,w
  3505  055C  0084               	movwf	4
  3506  055D  0873               	movf	cputs@s+1,w
  3507  055E  0085               	movwf	5
  3508  055F  0012               	moviw fsr0++
  3509  0560  1903               	btfsc	3,2
  3510  0561  0008               	return
  3511  0562  0872               	movf	cputs@s,w
  3512  0563  0084               	movwf	4
  3513  0564  0873               	movf	cputs@s+1,w
  3514  0565  0085               	movwf	5
  3515  0566  0800               	movf	0,w	;code access
  3516  0567  3184  24DB  3185   	fcall	_putch
  3517  056A  3001               	movlw	1
  3518  056B  07F2               	addwf	cputs@s,f
  3519  056C  3000               	movlw	0
  3520  056D  3DF3               	addwfc	cputs@s+1,f
  3521  056E  2D5B               	goto	l1055
  3522  056F                     __end_of_cputs:	
  3523                           
  3524                           	psect	text4
  3525  05A4                     __ptext4:	
  3526 ;; *************** function _mygets *****************
  3527 ;; Defined at:
  3528 ;;		line 105 in file "main.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  p               1    3[COMMON] PTR unsigned char 
  3533 ;;		 -> rxBuffer(32), 
  3534 ;;  i               1    2[COMMON] unsigned char 
  3535 ;;  c               1    1[COMMON] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;Total ram usage:        4 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    2
  3552 ;; This function calls:
  3553 ;;		_getch
  3554 ;; This function is called by:
  3555 ;;		_main
  3556 ;;		_sendCMD
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           
  3561                           ;psect for function _mygets
  3562  05A4                     _mygets:	
  3563                           
  3564                           ;main.c: 107: char c, i=0;
  3565                           
  3566                           ;incstack = 0
  3567                           ; Regs used in _mygets: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3568  05A4  01F2               	clrf	mygets@i
  3569                           
  3570                           ;main.c: 108: char *p = rxBuffer;
  3571  05A5  3020               	movlw	(low (_rxBuffer| 0))& (0+255)
  3572  05A6  00F0               	movwf	??_mygets
  3573  05A7  0870               	movf	??_mygets,w
  3574  05A8  00F3               	movwf	mygets@p
  3575                           
  3576                           ;main.c: 109: while ( (i++ < sizeof(rxBuffer)) && (( c = getch()) != '\n')) {
  3577  05A9  2DB5               	goto	l803
  3578  05AA                     l799:	
  3579                           
  3580                           ;main.c: 110: *p++ = c;
  3581  05AA  0871               	movf	mygets@c,w
  3582  05AB  00F0               	movwf	??_mygets
  3583  05AC  0873               	movf	mygets@p,w
  3584  05AD  0086               	movwf	6
  3585  05AE  0187               	clrf	7
  3586  05AF  0870               	movf	??_mygets,w
  3587  05B0  0081               	movwf	1
  3588  05B1  3001               	movlw	1
  3589  05B2  00F0               	movwf	??_mygets
  3590  05B3  0870               	movf	??_mygets,w
  3591  05B4  07F3               	addwf	mygets@p,f
  3592  05B5                     l803:	
  3593  05B5  0872               	movf	mygets@i,w
  3594  05B6  0AF2               	incf	mygets@i,f
  3595  05B7  00F0               	movwf	??_mygets
  3596  05B8  3020               	movlw	32
  3597  05B9  0270               	subwf	??_mygets,w
  3598  05BA  1803               	skipnc
  3599  05BB  2DC6               	goto	l807
  3600  05BC  3184  24D8  3185   	fcall	_getch
  3601  05BF  00F0               	movwf	??_mygets
  3602  05C0  0870               	movf	??_mygets,w
  3603  05C1  00F1               	movwf	mygets@c
  3604  05C2  300A               	movlw	10
  3605  05C3  0671               	xorwf	mygets@c,w
  3606  05C4  1D03               	btfss	3,2
  3607  05C5  2DAA               	goto	l799
  3608  05C6                     l807:	
  3609                           
  3610                           ;main.c: 111: }
  3611                           ;main.c: 112: *p = '\0';
  3612  05C6  0873               	movf	mygets@p,w
  3613  05C7  0086               	movwf	6
  3614  05C8  0187               	clrf	7
  3615  05C9  0181               	clrf	1
  3616  05CA  0008               	return
  3617  05CB                     __end_of_mygets:	
  3618                           
  3619                           	psect	text5
  3620  04D8                     __ptext5:	
  3621 ;; *************** function _getch *****************
  3622 ;; Defined at:
  3623 ;;		line 98 in file "mcc_generated_files/eusart.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;		None
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      unsigned char 
  3630 ;; Registers used:
  3631 ;;		wreg, pclath, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3641 ;;Total ram usage:        0 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    1
  3644 ;; This function calls:
  3645 ;;		_EUSART_Read
  3646 ;; This function is called by:
  3647 ;;		_mygets
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           
  3652                           ;psect for function _getch
  3653  04D8                     _getch:	
  3654                           
  3655                           ;eusart.c: 99: return EUSART_Read();
  3656                           
  3657                           ;incstack = 0
  3658                           ; Regs used in _getch: [wreg+pclath+cstack]
  3659  04D8  3185  2507         	fcall	_EUSART_Read
  3660  04DA  0008               	return
  3661  04DB                     __end_of_getch:	
  3662                           
  3663                           	psect	text6
  3664  0507                     __ptext6:	
  3665 ;; *************** function _EUSART_Read *****************
  3666 ;; Defined at:
  3667 ;;		line 76 in file "mcc_generated_files/eusart.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      unsigned char 
  3674 ;; Registers used:
  3675 ;;		wreg
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_getch
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           
  3695                           ;psect for function _EUSART_Read
  3696  0507                     _EUSART_Read:	
  3697  0507                     l78:	
  3698                           ;eusart.c: 78: while (!PIR1bits.RCIF) {
  3699                           
  3700                           ;incstack = 0
  3701                           ; Regs used in _EUSART_Read: [wreg]
  3702                           
  3703  0507  0020               	movlb	0	; select bank0
  3704  0508  1E90               	btfss	16,5	;volatile
  3705  0509  2D07               	goto	l78
  3706                           
  3707                           ;eusart.c: 79: }
  3708                           ;eusart.c: 81: if (1 == RC1STAbits.OERR) {
  3709  050A  0023               	movlb	3	; select bank3
  3710  050B  1C9D               	btfss	29,1	;volatile
  3711  050C  2D0F               	goto	l701
  3712                           
  3713                           ;eusart.c: 84: RC1STAbits.CREN = 0;
  3714  050D  121D               	bcf	29,4	;volatile
  3715                           
  3716                           ;eusart.c: 85: RC1STAbits.CREN = 1;
  3717  050E  161D               	bsf	29,4	;volatile
  3718  050F                     l701:	
  3719                           
  3720                           ;eusart.c: 86: }
  3721                           ;eusart.c: 88: return RC1REG;
  3722  050F  0819               	movf	25,w	;volatile
  3723  0510  0008               	return
  3724  0511                     __end_of_EUSART_Read:	
  3725                           
  3726                           	psect	text7
  3727  06C8                     __ptext7:	
  3728 ;; *************** function _printf *****************
  3729 ;; Defined at:
  3730 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  3733 ;;		 -> STR_7(15), STR_6(31), 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  idx             1    8[BANK0 ] unsigned char 
  3736 ;;  tmpval          4    0        struct .
  3737 ;;  width           2   14[BANK0 ] int 
  3738 ;;  val             2   11[BANK0 ] unsigned int 
  3739 ;;  cp              2    0        PTR const unsigned char 
  3740 ;;  len             2    0        unsigned int 
  3741 ;;  c               1   16[BANK0 ] char 
  3742 ;;  prec            1   13[BANK0 ] char 
  3743 ;;  flag            1   10[BANK0 ] unsigned char 
  3744 ;;  ap              1    9[BANK0 ] PTR void [1]
  3745 ;;		 -> ?_printf(2), 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  2    0[BANK0 ] int 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3755 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3757 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3758 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;Total ram usage:       21 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    2
  3762 ;; This function calls:
  3763 ;;		___lwdiv
  3764 ;;		___wmul
  3765 ;;		_isdigit
  3766 ;;		_putch
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           
  3773                           ;psect for function _printf
  3774  06C8                     _printf:	
  3775                           
  3776                           ;doprnt.c: 466: va_list ap;
  3777                           ;doprnt.c: 499: signed char c;
  3778                           ;doprnt.c: 501: int width;
  3779                           ;doprnt.c: 506: signed char prec;
  3780                           ;doprnt.c: 508: unsigned char flag;
  3781                           ;doprnt.c: 523: union {
  3782                           ;doprnt.c: 524: unsigned long vd;
  3783                           ;doprnt.c: 525: double integ;
  3784                           ;doprnt.c: 526: } tmpval;
  3785                           ;doprnt.c: 528: unsigned int val;
  3786                           ;doprnt.c: 529: unsigned len;
  3787                           ;doprnt.c: 530: const char * cp;
  3788                           ;doprnt.c: 533: *ap = __va_start();
  3789                           
  3790                           ;incstack = 0
  3791                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3792  06C8  3042               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3793  06C9  00F8               	movwf	??_printf
  3794  06CA  0878               	movf	??_printf,w
  3795  06CB  0020               	movlb	0	; select bank0
  3796  06CC  00C9               	movwf	printf@ap
  3797  06CD                     l1205:	
  3798                           ;doprnt.c: 536: while(c = *f++) {
  3799                           
  3800  06CD  0020               	movlb	0	; select bank0
  3801  06CE  0841               	movf	printf@f+1,w
  3802  06CF  00F9               	movwf	??_printf+1
  3803  06D0  0840               	movf	printf@f,w
  3804  06D1  00F8               	movwf	??_printf
  3805  06D2  0AC0               	incf	printf@f,f
  3806  06D3  1903               	skipnz
  3807  06D4  0AC1               	incf	printf@f+1,f
  3808  06D5  0878               	movf	??_printf,w
  3809  06D6  0084               	movwf	4
  3810  06D7  0879               	movf	??_printf+1,w
  3811  06D8  0085               	movwf	5
  3812  06D9  0800               	movf	0,w	;code access
  3813  06DA  00FA               	movwf	??_printf+2
  3814  06DB  087A               	movf	??_printf+2,w
  3815  06DC  00D0               	movwf	printf@c
  3816  06DD  0850               	movf	printf@c,w
  3817  06DE  1903               	btfsc	3,2
  3818  06DF  0008               	return
  3819                           
  3820                           ;doprnt.c: 538: if(c != '%')
  3821  06E0  3025               	movlw	37
  3822  06E1  0650               	xorwf	printf@c,w
  3823  06E2  1903               	btfsc	3,2
  3824  06E3  2EE9               	goto	l1135
  3825                           
  3826                           ;doprnt.c: 540: {
  3827                           ;doprnt.c: 541: (putch(c) );
  3828  06E4  0850               	movf	printf@c,w
  3829  06E5  3184  24DB  3186   	fcall	_putch
  3830                           
  3831                           ;doprnt.c: 542: continue;
  3832  06E8  2ECD               	goto	l1205
  3833  06E9                     l1135:	
  3834                           
  3835                           ;doprnt.c: 543: }
  3836                           ;doprnt.c: 546: width = 0;
  3837  06E9  0020               	movlb	0	; select bank0
  3838  06EA  01CE               	clrf	printf@width
  3839  06EB  01CF               	clrf	printf@width+1
  3840                           
  3841                           ;doprnt.c: 548: flag = 0;
  3842  06EC  01CA               	clrf	printf@flag
  3843                           
  3844                           ;doprnt.c: 551: switch(*f) {
  3845                           
  3846                           ;doprnt.c: 550: for(;;) {
  3847  06ED  2EF3               	goto	l1141
  3848  06EE                     l259:	
  3849                           ;doprnt.c: 579: case '0':
  3850                           
  3851                           
  3852                           ;doprnt.c: 580: flag |= 0x04;
  3853  06EE  154A               	bsf	printf@flag,2
  3854                           
  3855                           ;doprnt.c: 581: f++;
  3856  06EF  3001               	movlw	1
  3857  06F0  07C0               	addwf	printf@f,f
  3858  06F1  3000               	movlw	0
  3859  06F2  3DC1               	addwfc	printf@f+1,f
  3860  06F3                     l1141:	
  3861                           ;doprnt.c: 584: }
  3862                           
  3863                           ;doprnt.c: 582: continue;
  3864                           
  3865  06F3  0840               	movf	printf@f,w
  3866  06F4  0084               	movwf	4
  3867  06F5  0841               	movf	printf@f+1,w
  3868  06F6  0085               	movwf	5
  3869  06F7  0800               	movf	0,w	;code access
  3870                           
  3871                           ; Switch size 1, requested type "space"
  3872                           ; Number of cases is 1, Range of values is 48 to 48
  3873                           ; switch strategies available:
  3874                           ; Name         Instructions Cycles
  3875                           ; simple_byte            4     3 (average)
  3876                           ; direct_byte           11     9 (fixed)
  3877                           ; jumptable            263     9 (fixed)
  3878                           ;	Chosen strategy is simple_byte
  3879  06F8  3A30               	xorlw	48	; case 48
  3880  06F9  1903               	skipnz
  3881  06FA  2EEE               	goto	l259
  3882  06FB  2EFC               	goto	l1143
  3883  06FC                     l1143:	
  3884                           ;doprnt.c: 586: }
  3885                           
  3886                           ;doprnt.c: 585: break;
  3887                           
  3888                           
  3889                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3890  06FC  0840               	movf	printf@f,w
  3891  06FD  0084               	movwf	4
  3892  06FE  0841               	movf	printf@f+1,w
  3893  06FF  0085               	movwf	5
  3894  0700  0800               	movf	0,w	;code access
  3895  0701  3185  253E  3186   	fcall	_isdigit
  3896  0704  1C03               	btfss	3,0
  3897  0705  2F37               	goto	l1157
  3898                           
  3899                           ;doprnt.c: 598: width = 0;
  3900  0706  0020               	movlb	0	; select bank0
  3901  0707  01CE               	clrf	printf@width
  3902  0708  01CF               	clrf	printf@width+1
  3903  0709                     l1147:	
  3904                           ;doprnt.c: 599: do {
  3905                           
  3906                           
  3907                           ;doprnt.c: 600: width *= 10;
  3908  0709  300A               	movlw	10
  3909  070A  00F0               	movwf	___wmul@multiplier
  3910  070B  3000               	movlw	0
  3911  070C  00F1               	movwf	___wmul@multiplier+1
  3912  070D  0020               	movlb	0	; select bank0
  3913  070E  084F               	movf	printf@width+1,w
  3914  070F  00F3               	movwf	___wmul@multiplicand+1
  3915  0710  084E               	movf	printf@width,w
  3916  0711  00F2               	movwf	___wmul@multiplicand
  3917  0712  3185  2589  3186   	fcall	___wmul
  3918  0715  0871               	movf	?___wmul+1,w
  3919  0716  0020               	movlb	0	; select bank0
  3920  0717  00CF               	movwf	printf@width+1
  3921  0718  0870               	movf	?___wmul,w
  3922  0719  00CE               	movwf	printf@width
  3923                           
  3924                           ;doprnt.c: 601: width += *f++ - '0';
  3925  071A  0840               	movf	printf@f,w
  3926  071B  0084               	movwf	4
  3927  071C  0841               	movf	printf@f+1,w
  3928  071D  0085               	movwf	5
  3929  071E  0800               	movf	0,w	;code access
  3930  071F  3ED0               	addlw	208
  3931  0720  00F8               	movwf	??_printf
  3932  0721  30FF               	movlw	255
  3933  0722  1803               	skipnc
  3934  0723  3000               	movlw	0
  3935  0724  00F9               	movwf	??_printf+1
  3936  0725  0878               	movf	??_printf,w
  3937  0726  07CE               	addwf	printf@width,f
  3938  0727  0879               	movf	??_printf+1,w
  3939  0728  3DCF               	addwfc	printf@width+1,f
  3940  0729  3001               	movlw	1
  3941  072A  07C0               	addwf	printf@f,f
  3942  072B  3000               	movlw	0
  3943  072C  3DC1               	addwfc	printf@f+1,f
  3944                           
  3945                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3946  072D  0840               	movf	printf@f,w
  3947  072E  0084               	movwf	4
  3948  072F  0841               	movf	printf@f+1,w
  3949  0730  0085               	movwf	5
  3950  0731  0800               	movf	0,w	;code access
  3951  0732  3185  253E  3186   	fcall	_isdigit
  3952  0735  1803               	btfsc	3,0
  3953  0736  2F09               	goto	l1147
  3954  0737                     l1157:	
  3955                           ;doprnt.c: 822: }
  3956                           
  3957                           ;doprnt.c: 813: continue;
  3958                           
  3959                           ;doprnt.c: 802: default:
  3960                           
  3961                           ;doprnt.c: 723: break;
  3962                           
  3963                           ;doprnt.c: 718: case 'x':
  3964                           
  3965                           ;doprnt.c: 638: goto alldone;
  3966                           
  3967                           ;doprnt.c: 637: case 0:
  3968                           
  3969                           ;doprnt.c: 608: }
  3970                           ;doprnt.c: 635: switch(c = *f++) {
  3971                           
  3972  0737  0020               	movlb	0	; select bank0
  3973  0738  0841               	movf	printf@f+1,w
  3974  0739  00F9               	movwf	??_printf+1
  3975  073A  0840               	movf	printf@f,w
  3976  073B  00F8               	movwf	??_printf
  3977  073C  0AC0               	incf	printf@f,f
  3978  073D  1903               	skipnz
  3979  073E  0AC1               	incf	printf@f+1,f
  3980  073F  0878               	movf	??_printf,w
  3981  0740  0084               	movwf	4
  3982  0741  0879               	movf	??_printf+1,w
  3983  0742  0085               	movwf	5
  3984  0743  0800               	movf	0,w	;code access
  3985  0744  00D0               	movwf	printf@c
  3986                           
  3987                           ; Switch size 1, requested type "space"
  3988                           ; Number of cases is 2, Range of values is 0 to 120
  3989                           ; switch strategies available:
  3990                           ; Name         Instructions Cycles
  3991                           ; simple_byte            7     4 (average)
  3992                           ; direct_byte          248     6 (fixed)
  3993                           ; jumptable            260     6 (fixed)
  3994                           ;	Chosen strategy is simple_byte
  3995  0745  3A00               	xorlw	0	; case 0
  3996  0746  1903               	skipnz
  3997  0747  2FF5               	goto	l289
  3998  0748  3A78               	xorlw	120	; case 120
  3999  0749  1903               	skipnz
  4000  074A  2F4C               	goto	l1159
  4001  074B  2ECD               	goto	l1205
  4002  074C                     l1159:	
  4003                           
  4004                           ;doprnt.c: 1273: {
  4005                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4006  074C  0020               	movlb	0	; select bank0
  4007  074D  0849               	movf	printf@ap,w
  4008  074E  0086               	movwf	6
  4009  074F  0187               	clrf	7
  4010  0750  3F40               	moviw [0]fsr1
  4011  0751  00CB               	movwf	printf@val
  4012  0752  3F41               	moviw [1]fsr1
  4013  0753  00CC               	movwf	printf@val+1
  4014  0754  3002               	movlw	2
  4015  0755  00F8               	movwf	??_printf
  4016  0756  0878               	movf	??_printf,w
  4017  0757  07C9               	addwf	printf@ap,f
  4018                           
  4019                           ;doprnt.c: 1287: }
  4020                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4021  0758  01D0               	clrf	printf@c
  4022  0759  0AD0               	incf	printf@c,f
  4023  075A  3004               	movlw	4
  4024  075B  0650               	xorwf	printf@c,w
  4025  075C  1903               	btfsc	3,2
  4026  075D  2F7D               	goto	l1175
  4027  075E                     l1169:	
  4028                           
  4029                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4030  075E  0850               	movf	printf@c,w
  4031  075F  00F8               	movwf	??_printf
  4032  0760  01F9               	clrf	??_printf+1
  4033  0761  35F8               	lslf	??_printf,f
  4034  0762  0DF9               	rlf	??_printf+1,f
  4035  0763  3000               	movlw	low (_hexpowers| (0+32768))
  4036  0764  0778               	addwf	??_printf,w
  4037  0765  0084               	movwf	4
  4038  0766  3088               	movlw	high (_hexpowers| (0+32768))
  4039  0767  3D79               	addwfc	??_printf+1,w
  4040  0768  0085               	movwf	5
  4041  0769  3F00               	moviw [0]fsr0
  4042  076A  00FA               	movwf	??_printf+2
  4043  076B  3F01               	moviw [1]fsr0
  4044  076C  00FB               	movwf	??_printf+3
  4045  076D  087B               	movf	??_printf+3,w
  4046  076E  024C               	subwf	printf@val+1,w
  4047  076F  1D03               	skipz
  4048  0770  2F73               	goto	u625
  4049  0771  087A               	movf	??_printf+2,w
  4050  0772  024B               	subwf	printf@val,w
  4051  0773                     u625:	
  4052  0773  1C03               	btfss	3,0
  4053  0774  2F7D               	goto	l1175
  4054                           
  4055                           ;doprnt.c: 1318: break;
  4056  0775  3001               	movlw	1
  4057  0776  00F8               	movwf	??_printf
  4058  0777  0878               	movf	??_printf,w
  4059  0778  07D0               	addwf	printf@c,f
  4060  0779  3004               	movlw	4
  4061  077A  0650               	xorwf	printf@c,w
  4062  077B  1D03               	btfss	3,2
  4063  077C  2F5E               	goto	l1169
  4064  077D                     l1175:	
  4065                           
  4066                           ;doprnt.c: 1381: if(width > c)
  4067  077D  0850               	movf	printf@c,w
  4068  077E  00F8               	movwf	??_printf
  4069  077F  01F9               	clrf	??_printf+1
  4070  0780  1BF8               	btfsc	??_printf,7
  4071  0781  03F9               	decf	??_printf+1,f
  4072  0782  0879               	movf	??_printf+1,w
  4073  0783  3A80               	xorlw	128
  4074  0784  00FA               	movwf	??_printf+2
  4075  0785  084F               	movf	printf@width+1,w
  4076  0786  3A80               	xorlw	128
  4077  0787  027A               	subwf	??_printf+2,w
  4078  0788  1D03               	skipz
  4079  0789  2F8C               	goto	u645
  4080  078A  084E               	movf	printf@width,w
  4081  078B  0278               	subwf	??_printf,w
  4082  078C                     u645:	
  4083  078C  1803               	skipnc
  4084  078D  2F99               	goto	l1179
  4085                           
  4086                           ;doprnt.c: 1382: width -= c;
  4087  078E  0020               	movlb	0	; select bank0
  4088  078F  0850               	movf	printf@c,w
  4089  0790  00F8               	movwf	??_printf
  4090  0791  01F9               	clrf	??_printf+1
  4091  0792  1BF8               	btfsc	??_printf,7
  4092  0793  03F9               	decf	??_printf+1,f
  4093  0794  0878               	movf	??_printf,w
  4094  0795  02CE               	subwf	printf@width,f
  4095  0796  0879               	movf	??_printf+1,w
  4096  0797  3BCF               	subwfb	printf@width+1,f
  4097  0798  2F9C               	goto	l1181
  4098  0799                     l1179:	
  4099                           
  4100                           ;doprnt.c: 1383: else
  4101                           ;doprnt.c: 1384: width = 0;
  4102  0799  0020               	movlb	0	; select bank0
  4103  079A  01CE               	clrf	printf@width
  4104  079B  01CF               	clrf	printf@width+1
  4105  079C                     l1181:	
  4106                           
  4107                           ;doprnt.c: 1387: if(flag & 0x04) {
  4108  079C  1D4A               	btfss	printf@flag,2
  4109  079D  2FAC               	goto	l1189
  4110  079E                     L2:	
  4111                           
  4112                           ;doprnt.c: 1415: if(width)
  4113  079E  084E               	movf	printf@width,w
  4114  079F  044F               	iorwf	printf@width+1,w
  4115  07A0  1903               	btfsc	3,2
  4116  07A1  2FBD               	goto	l1195
  4117                           
  4118                           ;doprnt.c: 1417: (putch('0') );
  4119                           
  4120                           ;doprnt.c: 1416: do
  4121  07A2  3030               	movlw	48
  4122  07A3  3184  24DB  3186   	fcall	_putch
  4123                           
  4124                           ;doprnt.c: 1418: while(--width);
  4125  07A6  30FF               	movlw	255
  4126  07A7  0020               	movlb	0	; select bank0
  4127  07A8  07CE               	addwf	printf@width,f
  4128  07A9  30FF               	movlw	255
  4129  07AA  3DCF               	addwfc	printf@width+1,f
  4130  07AB  2F9E               	goto	L2
  4131  07AC                     l1189:	
  4132                           ;doprnt.c: 1420: } else
  4133                           
  4134                           
  4135                           ;doprnt.c: 1422: {
  4136                           ;doprnt.c: 1424: if(width
  4137                           ;doprnt.c: 1428: )
  4138  07AC  084E               	movf	printf@width,w
  4139  07AD  044F               	iorwf	printf@width+1,w
  4140  07AE  1903               	btfsc	3,2
  4141  07AF  2FBD               	goto	l1195
  4142  07B0                     l1191:	
  4143                           ;doprnt.c: 1429: do
  4144                           
  4145                           
  4146                           ;doprnt.c: 1430: (putch(' ') );
  4147  07B0  3020               	movlw	32
  4148  07B1  3184  24DB  3186   	fcall	_putch
  4149                           
  4150                           ;doprnt.c: 1431: while(--width);
  4151  07B4  30FF               	movlw	255
  4152  07B5  0020               	movlb	0	; select bank0
  4153  07B6  07CE               	addwf	printf@width,f
  4154  07B7  30FF               	movlw	255
  4155  07B8  3DCF               	addwfc	printf@width+1,f
  4156  07B9  084E               	movf	printf@width,w
  4157  07BA  044F               	iorwf	printf@width+1,w
  4158  07BB  1D03               	btfss	3,2
  4159  07BC  2FB0               	goto	l1191
  4160  07BD                     l1195:	
  4161                           
  4162                           ;doprnt.c: 1469: }
  4163                           ;doprnt.c: 1472: prec = c;
  4164  07BD  0850               	movf	printf@c,w
  4165  07BE  00F8               	movwf	??_printf
  4166  07BF  0878               	movf	??_printf,w
  4167  07C0  00CD               	movwf	printf@prec
  4168  07C1                     l1203:	
  4169                           ;doprnt.c: 1474: while(prec--) {
  4170                           
  4171  07C1  30FF               	movlw	255
  4172  07C2  00F8               	movwf	??_printf
  4173  07C3  0878               	movf	??_printf,w
  4174  07C4  0020               	movlb	0	; select bank0
  4175  07C5  07CD               	addwf	printf@prec,f
  4176  07C6  0A4D               	incf	printf@prec,w
  4177  07C7  1903               	btfsc	3,2
  4178  07C8  2ECD               	goto	l1205
  4179                           
  4180                           ;doprnt.c: 1478: {
  4181                           ;doprnt.c: 1499: {
  4182                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4183  07C9  084D               	movf	printf@prec,w
  4184  07CA  00F8               	movwf	??_printf
  4185  07CB  01F9               	clrf	??_printf+1
  4186  07CC  35F8               	lslf	??_printf,f
  4187  07CD  0DF9               	rlf	??_printf+1,f
  4188  07CE  3000               	movlw	low (_hexpowers| (0+32768))
  4189  07CF  0778               	addwf	??_printf,w
  4190  07D0  0084               	movwf	4
  4191  07D1  3088               	movlw	high (_hexpowers| (0+32768))
  4192  07D2  3D79               	addwfc	??_printf+1,w
  4193  07D3  0085               	movwf	5
  4194  07D4  3F00               	moviw [0]fsr0
  4195  07D5  00F0               	movwf	___lwdiv@divisor
  4196  07D6  3F01               	moviw [1]fsr0
  4197  07D7  00F1               	movwf	___lwdiv@divisor+1
  4198  07D8  084C               	movf	printf@val+1,w
  4199  07D9  00F3               	movwf	___lwdiv@dividend+1
  4200  07DA  084B               	movf	printf@val,w
  4201  07DB  00F2               	movwf	___lwdiv@dividend
  4202  07DC  3185  25CB  3186   	fcall	___lwdiv
  4203  07DF  0870               	movf	?___lwdiv,w
  4204  07E0  390F               	andlw	15
  4205  07E1  00FA               	movwf	??_printf+2
  4206  07E2  087A               	movf	??_printf+2,w
  4207  07E3  0020               	movlb	0	; select bank0
  4208  07E4  00C8               	movwf	printf@idx
  4209                           
  4210                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4211  07E5  0848               	movf	printf@idx,w
  4212  07E6  3E27               	addlw	low (STR_8| (0+32768))
  4213  07E7  0084               	movwf	4
  4214  07E8  3088               	movlw	high (STR_8| (0+32768))
  4215  07E9  1803               	skipnc
  4216  07EA  3E01               	addlw	1
  4217  07EB  0085               	movwf	5
  4218  07EC  0800               	movf	0,w	;code access
  4219  07ED  00F8               	movwf	??_printf
  4220  07EE  0878               	movf	??_printf,w
  4221  07EF  00D0               	movwf	printf@c
  4222                           
  4223                           ;doprnt.c: 1508: }
  4224                           ;doprnt.c: 1523: }
  4225                           ;doprnt.c: 1524: (putch(c) );
  4226  07F0  0850               	movf	printf@c,w
  4227  07F1  3184  24DB  3186   	fcall	_putch
  4228  07F4  2FC1               	goto	l1203
  4229  07F5                     l289:	
  4230                           ;doprnt.c: 1540: return 0;
  4231                           ;	Return value of _printf is never used
  4232                           
  4233                           ;doprnt.c: 1525: }
  4234                           ;doprnt.c: 1533: }
  4235                           ;doprnt.c: 1535: alldone:
  4236                           
  4237  07F5  0008               	return
  4238  07F6                     __end_of_printf:	
  4239                           
  4240                           	psect	text8
  4241  04DB                     __ptext8:	
  4242 ;; *************** function _putch *****************
  4243 ;; Defined at:
  4244 ;;		line 102 in file "mcc_generated_files/eusart.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  txData          1    wreg     unsigned char 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  txData          1    1[COMMON] unsigned char 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0, pclath, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;Total ram usage:        1 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    1
  4265 ;; This function calls:
  4266 ;;		_EUSART_Write
  4267 ;; This function is called by:
  4268 ;;		_printf
  4269 ;;		_puts
  4270 ;;		_cputs
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _putch
  4276  04DB                     _putch:	
  4277                           
  4278                           ;incstack = 0
  4279                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4280                           ;putch@txData stored from wreg
  4281  04DB  00F1               	movwf	putch@txData
  4282                           
  4283                           ;eusart.c: 103: EUSART_Write(txData);
  4284  04DC  0871               	movf	putch@txData,w
  4285  04DD  3184  24EC         	fcall	_EUSART_Write
  4286  04DF  0008               	return
  4287  04E0                     __end_of_putch:	
  4288                           
  4289                           	psect	text9
  4290  04EC                     __ptext9:	
  4291 ;; *************** function _EUSART_Write *****************
  4292 ;; Defined at:
  4293 ;;		line 91 in file "mcc_generated_files/eusart.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  txData          1    wreg     unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  txData          1    0[COMMON] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;Total ram usage:        1 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_putch
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           
  4321                           ;psect for function _EUSART_Write
  4322  04EC                     _EUSART_Write:	
  4323                           
  4324                           ;incstack = 0
  4325                           ; Regs used in _EUSART_Write: [wreg]
  4326                           ;EUSART_Write@txData stored from wreg
  4327  04EC  00F0               	movwf	EUSART_Write@txData
  4328  04ED                     l85:	
  4329                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
  4330                           
  4331  04ED  0020               	movlb	0	; select bank0
  4332  04EE  1E10               	btfss	16,4	;volatile
  4333  04EF  2CED               	goto	l85
  4334                           
  4335                           ;eusart.c: 93: }
  4336                           ;eusart.c: 95: TX1REG = txData;
  4337  04F0  0870               	movf	EUSART_Write@txData,w
  4338  04F1  0023               	movlb	3	; select bank3
  4339  04F2  009A               	movwf	26	;volatile
  4340  04F3  0008               	return
  4341  04F4                     __end_of_EUSART_Write:	
  4342                           
  4343                           	psect	text10
  4344  053E                     __ptext10:	
  4345 ;; *************** function _isdigit *****************
  4346 ;; Defined at:
  4347 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  c               1    wreg     unsigned char 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  c               1    1[COMMON] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;		None               void
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;Total ram usage:        2 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_printf
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           
  4375                           ;psect for function _isdigit
  4376  053E                     _isdigit:	
  4377                           
  4378                           ;incstack = 0
  4379                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4380                           ;isdigit@c stored from wreg
  4381  053E  00F1               	movwf	isdigit@c
  4382  053F  01F0               	clrf	_isdigit$684
  4383  0540  303A               	movlw	58
  4384  0541  0271               	subwf	isdigit@c,w
  4385  0542  1803               	skipnc
  4386  0543  2D4A               	goto	l1069
  4387  0544  3030               	movlw	48
  4388  0545  0271               	subwf	isdigit@c,w
  4389  0546  1C03               	skipc
  4390  0547  2D4A               	goto	l1069
  4391  0548  01F0               	clrf	_isdigit$684
  4392  0549  0AF0               	incf	_isdigit$684,f
  4393  054A                     l1069:	
  4394  054A  0C70               	rrf	_isdigit$684,w
  4395  054B  0008               	return
  4396  054C                     __end_of_isdigit:	
  4397                           
  4398                           	psect	text11
  4399  0589                     __ptext11:	
  4400 ;; *************** function ___wmul *****************
  4401 ;; Defined at:
  4402 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  multiplier      2    0[COMMON] unsigned int 
  4405 ;;  multiplicand    2    2[COMMON] unsigned int 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  product         2    4[COMMON] unsigned int 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  2    0[COMMON] unsigned int 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;Total ram usage:        6 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_printf
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function ___wmul
  4432  0589                     ___wmul:	
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4436  0589  01F4               	clrf	___wmul@product
  4437  058A  01F5               	clrf	___wmul@product+1
  4438  058B                     l1075:	
  4439  058B  1C70               	btfss	___wmul@multiplier,0
  4440  058C  2D91               	goto	l293
  4441  058D  0872               	movf	___wmul@multiplicand,w
  4442  058E  07F4               	addwf	___wmul@product,f
  4443  058F  0873               	movf	___wmul@multiplicand+1,w
  4444  0590  3DF5               	addwfc	___wmul@product+1,f
  4445  0591                     l293:	
  4446  0591  3001               	movlw	1
  4447  0592                     u475:	
  4448  0592  35F2               	lslf	___wmul@multiplicand,f
  4449  0593  0DF3               	rlf	___wmul@multiplicand+1,f
  4450  0594  0B89               	decfsz	9,f
  4451  0595  2D92               	goto	u475
  4452  0596  3001               	movlw	1
  4453  0597                     u485:	
  4454  0597  36F1               	lsrf	___wmul@multiplier+1,f
  4455  0598  0CF0               	rrf	___wmul@multiplier,f
  4456  0599  0B89               	decfsz	9,f
  4457  059A  2D97               	goto	u485
  4458  059B  0870               	movf	___wmul@multiplier,w
  4459  059C  0471               	iorwf	___wmul@multiplier+1,w
  4460  059D  1D03               	btfss	3,2
  4461  059E  2D8B               	goto	l1075
  4462  059F  0875               	movf	___wmul@product+1,w
  4463  05A0  00F1               	movwf	?___wmul+1
  4464  05A1  0874               	movf	___wmul@product,w
  4465  05A2  00F0               	movwf	?___wmul
  4466  05A3  0008               	return
  4467  05A4                     __end_of___wmul:	
  4468                           
  4469                           	psect	text12
  4470  05CB                     __ptext12:	
  4471 ;; *************** function ___lwdiv *****************
  4472 ;; Defined at:
  4473 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  divisor         2    0[COMMON] unsigned int 
  4476 ;;  dividend        2    2[COMMON] unsigned int 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  quotient        2    5[COMMON] unsigned int 
  4479 ;;  counter         1    7[COMMON] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  2    0[COMMON] unsigned int 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;Total ram usage:        8 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_printf
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           
  4503                           ;psect for function ___lwdiv
  4504  05CB                     ___lwdiv:	
  4505                           
  4506                           ;incstack = 0
  4507                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4508  05CB  01F5               	clrf	___lwdiv@quotient
  4509  05CC  01F6               	clrf	___lwdiv@quotient+1
  4510  05CD  0870               	movf	___lwdiv@divisor,w
  4511  05CE  0471               	iorwf	___lwdiv@divisor+1,w
  4512  05CF  1903               	btfsc	3,2
  4513  05D0  2DFA               	goto	l1109
  4514  05D1  01F7               	clrf	___lwdiv@counter
  4515  05D2  0AF7               	incf	___lwdiv@counter,f
  4516  05D3                     l1097:	
  4517  05D3  1BF1               	btfsc	___lwdiv@divisor+1,7
  4518  05D4  2DDF               	goto	l1099
  4519  05D5  3001               	movlw	1
  4520  05D6                     u515:	
  4521  05D6  35F0               	lslf	___lwdiv@divisor,f
  4522  05D7  0DF1               	rlf	___lwdiv@divisor+1,f
  4523  05D8  0B89               	decfsz	9,f
  4524  05D9  2DD6               	goto	u515
  4525  05DA  3001               	movlw	1
  4526  05DB  00F4               	movwf	??___lwdiv
  4527  05DC  0874               	movf	??___lwdiv,w
  4528  05DD  07F7               	addwf	___lwdiv@counter,f
  4529  05DE  2DD3               	goto	l1097
  4530  05DF                     l1099:	
  4531  05DF  3001               	movlw	1
  4532  05E0                     u535:	
  4533  05E0  35F5               	lslf	___lwdiv@quotient,f
  4534  05E1  0DF6               	rlf	___lwdiv@quotient+1,f
  4535  05E2  0B89               	decfsz	9,f
  4536  05E3  2DE0               	goto	u535
  4537  05E4  0871               	movf	___lwdiv@divisor+1,w
  4538  05E5  0273               	subwf	___lwdiv@dividend+1,w
  4539  05E6  1D03               	skipz
  4540  05E7  2DEA               	goto	u545
  4541  05E8  0870               	movf	___lwdiv@divisor,w
  4542  05E9  0272               	subwf	___lwdiv@dividend,w
  4543  05EA                     u545:	
  4544  05EA  1C03               	skipc
  4545  05EB  2DF1               	goto	l1105
  4546  05EC  0870               	movf	___lwdiv@divisor,w
  4547  05ED  02F2               	subwf	___lwdiv@dividend,f
  4548  05EE  0871               	movf	___lwdiv@divisor+1,w
  4549  05EF  3BF3               	subwfb	___lwdiv@dividend+1,f
  4550  05F0  1475               	bsf	___lwdiv@quotient,0
  4551  05F1                     l1105:	
  4552  05F1  3001               	movlw	1
  4553  05F2                     u555:	
  4554  05F2  36F1               	lsrf	___lwdiv@divisor+1,f
  4555  05F3  0CF0               	rrf	___lwdiv@divisor,f
  4556  05F4  0B89               	decfsz	9,f
  4557  05F5  2DF2               	goto	u555
  4558  05F6  3001               	movlw	1
  4559  05F7  02F7               	subwf	___lwdiv@counter,f
  4560  05F8  1D03               	btfss	3,2
  4561  05F9  2DDF               	goto	l1099
  4562  05FA                     l1109:	
  4563  05FA  0876               	movf	___lwdiv@quotient+1,w
  4564  05FB  00F1               	movwf	?___lwdiv+1
  4565  05FC  0875               	movf	___lwdiv@quotient,w
  4566  05FD  00F0               	movwf	?___lwdiv
  4567  05FE  0008               	return
  4568  05FF                     __end_of___lwdiv:	
  4569                           
  4570                           	psect	text13
  4571  04FD                     __ptext13:	
  4572 ;; *************** function _TMR2_HasOverflowOccured *****************
  4573 ;; Defined at:
  4574 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  status          1    0[COMMON] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      unsigned char 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;Total ram usage:        1 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_main
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _TMR2_HasOverflowOccured
  4603  04FD                     _TMR2_HasOverflowOccured:	
  4604                           
  4605                           ;tmr2.c: 125: bool status = PIR1bits.TMR2IF;
  4606                           
  4607                           ;incstack = 0
  4608                           ; Regs used in _TMR2_HasOverflowOccured: [wreg+status,2+status,0]
  4609  04FD  3000               	movlw	0
  4610  04FE  0020               	movlb	0	; select bank0
  4611  04FF  1890               	btfsc	16,1	;volatile
  4612  0500  3001               	movlw	1
  4613  0501  00F0               	movwf	TMR2_HasOverflowOccured@status
  4614                           
  4615                           ;tmr2.c: 126: if (status) {
  4616  0502  0870               	movf	TMR2_HasOverflowOccured@status,w
  4617  0503  1D03               	btfss	3,2
  4618                           
  4619                           ;tmr2.c: 128: PIR1bits.TMR2IF = 0;
  4620  0504  1090               	bcf	16,1	;volatile
  4621                           
  4622                           ;tmr2.c: 129: }
  4623                           ;tmr2.c: 130: return status;
  4624  0505  0870               	movf	TMR2_HasOverflowOccured@status,w
  4625  0506  0008               	return
  4626  0507                     __end_of_TMR2_HasOverflowOccured:	
  4627                           
  4628                           	psect	text14
  4629  054C                     __ptext14:	
  4630 ;; *************** function _SYSTEM_Initialize *****************
  4631 ;; Defined at:
  4632 ;;		line 77 in file "mcc_generated_files/mcc.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0, pclath, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    2
  4653 ;; This function calls:
  4654 ;;		_ADC1_Initialize
  4655 ;;		_EUSART_Initialize
  4656 ;;		_OSCILLATOR_Initialize
  4657 ;;		_PIN_MANAGER_Initialize
  4658 ;;		_TMR2_Initialize
  4659 ;; This function is called by:
  4660 ;;		_main
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function _SYSTEM_Initialize
  4666  054C                     _SYSTEM_Initialize:	
  4667                           
  4668                           ;mcc.c: 78: OSCILLATOR_Initialize();
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4672  054C  3184  24E0  3185   	fcall	_OSCILLATOR_Initialize
  4673                           
  4674                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  4675  054F  3185  25FF  3185   	fcall	_PIN_MANAGER_Initialize
  4676                           
  4677                           ;mcc.c: 80: EUSART_Initialize();
  4678  0552  3185  251B  3185   	fcall	_EUSART_Initialize
  4679                           
  4680                           ;mcc.c: 81: TMR2_Initialize();
  4681  0555  3185  2531  3185   	fcall	_TMR2_Initialize
  4682                           
  4683                           ;mcc.c: 82: ADC1_Initialize();
  4684  0558  3184  24F4         	fcall	_ADC1_Initialize
  4685  055A  0008               	return
  4686  055B                     __end_of_SYSTEM_Initialize:	
  4687                           
  4688                           	psect	text15
  4689  0531                     __ptext15:	
  4690 ;; *************** function _TMR2_Initialize *****************
  4691 ;; Defined at:
  4692 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;Total ram usage:        0 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    1
  4713 ;; This function calls:
  4714 ;;		_TMR2_Start
  4715 ;; This function is called by:
  4716 ;;		_SYSTEM_Initialize
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _TMR2_Initialize
  4722  0531                     _TMR2_Initialize:	
  4723                           
  4724                           ;tmr2.c: 62: T2CON = 0x60;
  4725                           
  4726                           ;incstack = 0
  4727                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4728  0531  3060               	movlw	96
  4729  0532  0020               	movlb	0	; select bank0
  4730  0533  009C               	movwf	28	;volatile
  4731                           
  4732                           ;tmr2.c: 65: T2CLKCON = 0x00;
  4733  0534  019E               	clrf	30	;volatile
  4734                           
  4735                           ;tmr2.c: 68: T2HLT = 0x00;
  4736  0535  019D               	clrf	29	;volatile
  4737                           
  4738                           ;tmr2.c: 71: T2RST = 0x00;
  4739  0536  019F               	clrf	31	;volatile
  4740                           
  4741                           ;tmr2.c: 74: T2PR = 0xFF;
  4742  0537  30FF               	movlw	255
  4743  0538  009B               	movwf	27	;volatile
  4744                           
  4745                           ;tmr2.c: 77: T2TMR = 0x00;
  4746  0539  019A               	clrf	26	;volatile
  4747                           
  4748                           ;tmr2.c: 80: PIR1bits.TMR2IF = 0;
  4749  053A  1090               	bcf	16,1	;volatile
  4750                           
  4751                           ;tmr2.c: 83: TMR2_Start();
  4752  053B  3184  24D5         	fcall	_TMR2_Start
  4753  053D  0008               	return
  4754  053E                     __end_of_TMR2_Initialize:	
  4755                           
  4756                           	psect	text16
  4757  04D5                     __ptext16:	
  4758 ;; *************** function _TMR2_Start *****************
  4759 ;; Defined at:
  4760 ;;		line 96 in file "mcc_generated_files/tmr2.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		None
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;Total ram usage:        0 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_TMR2_Initialize
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           
  4788                           ;psect for function _TMR2_Start
  4789  04D5                     _TMR2_Start:	
  4790                           
  4791                           ;tmr2.c: 98: T2CONbits.TMR2ON = 1;
  4792                           
  4793                           ;incstack = 0
  4794                           ; Regs used in _TMR2_Start: []
  4795  04D5  0020               	movlb	0	; select bank0
  4796  04D6  179C               	bsf	28,7	;volatile
  4797  04D7  0008               	return
  4798  04D8                     __end_of_TMR2_Start:	
  4799                           
  4800                           	psect	text17
  4801  05FF                     __ptext17:	
  4802 ;; *************** function _PIN_MANAGER_Initialize *****************
  4803 ;; Defined at:
  4804 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  state           1    0[COMMON] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4822 ;;Total ram usage:        1 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_SYSTEM_Initialize
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           
  4832                           ;psect for function _PIN_MANAGER_Initialize
  4833  05FF                     _PIN_MANAGER_Initialize:	
  4834                           
  4835                           ;pin_manager.c: 52: LATA = 0x00;
  4836                           
  4837                           ;incstack = 0
  4838                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4839  05FF  0022               	movlb	2	; select bank2
  4840  0600  018C               	clrf	12	;volatile
  4841                           
  4842                           ;pin_manager.c: 53: TRISA = 0x2B;
  4843  0601  302B               	movlw	43
  4844  0602  0021               	movlb	1	; select bank1
  4845  0603  008C               	movwf	12	;volatile
  4846                           
  4847                           ;pin_manager.c: 54: ANSELA = 0x03;
  4848  0604  3003               	movlw	3
  4849  0605  0023               	movlb	3	; select bank3
  4850  0606  008C               	movwf	12	;volatile
  4851                           
  4852                           ;pin_manager.c: 56: LATB = 0x00;
  4853  0607  0022               	movlb	2	; select bank2
  4854  0608  018D               	clrf	13	;volatile
  4855                           
  4856                           ;pin_manager.c: 57: TRISB = 0xF0;
  4857  0609  30F0               	movlw	240
  4858  060A  0021               	movlb	1	; select bank1
  4859  060B  008D               	movwf	13	;volatile
  4860                           
  4861                           ;pin_manager.c: 58: ANSELB = 0x10;
  4862  060C  3010               	movlw	16
  4863  060D  0023               	movlb	3	; select bank3
  4864  060E  008D               	movwf	13	;volatile
  4865                           
  4866                           ;pin_manager.c: 59: WPUB = 0x00;
  4867  060F  0024               	movlb	4	; select bank4
  4868  0610  018D               	clrf	13	;volatile
  4869                           
  4870                           ;pin_manager.c: 61: LATC = 0x20;
  4871  0611  3020               	movlw	32
  4872  0612  0022               	movlb	2	; select bank2
  4873  0613  008E               	movwf	14	;volatile
  4874                           
  4875                           ;pin_manager.c: 62: TRISC = 0xDF;
  4876  0614  30DF               	movlw	223
  4877  0615  0021               	movlb	1	; select bank1
  4878  0616  008E               	movwf	14	;volatile
  4879                           
  4880                           ;pin_manager.c: 63: ANSELC = 0xCB;
  4881  0617  30CB               	movlw	203
  4882  0618  0023               	movlb	3	; select bank3
  4883  0619  008E               	movwf	14	;volatile
  4884                           
  4885                           ;pin_manager.c: 64: WPUC = 0x00;
  4886  061A  0024               	movlb	4	; select bank4
  4887  061B  018E               	clrf	14	;volatile
  4888                           
  4889                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x01;
  4890  061C  0021               	movlb	1	; select bank1
  4891  061D  1795               	bsf	21,7	;volatile
  4892                           
  4893                           ;pin_manager.c: 69: bool state = GIE;
  4894  061E  3000               	movlw	0
  4895  061F  1B8B               	btfsc	11,7	;volatile
  4896  0620  3001               	movlw	1
  4897  0621  00F0               	movwf	PIN_MANAGER_Initialize@state
  4898                           
  4899                           ;pin_manager.c: 70: GIE = 0;
  4900  0622  138B               	bcf	11,7	;volatile
  4901                           
  4902                           ;pin_manager.c: 71: PPSLOCK = 0x55;
  4903  0623  3055               	movlw	85
  4904  0624  003C               	movlb	28	; select bank28
  4905  0625  008F               	movwf	15	;volatile
  4906                           
  4907                           ;pin_manager.c: 72: PPSLOCK = 0xAA;
  4908  0626  30AA               	movlw	170
  4909  0627  008F               	movwf	15	;volatile
  4910                           
  4911                           ;pin_manager.c: 73: PPSLOCKbits.PPSLOCKED = 0x00;
  4912  0628  100F               	bcf	15,0	;volatile
  4913                           
  4914                           ;pin_manager.c: 75: RXPPS = 0x0D;
  4915  0629  300D               	movlw	13
  4916  062A  00A4               	movwf	36	;volatile
  4917                           
  4918                           ;pin_manager.c: 76: RB7PPS = 0x12;
  4919  062B  3012               	movlw	18
  4920  062C  003D               	movlb	29	; select bank29
  4921  062D  009F               	movwf	31	;volatile
  4922                           
  4923                           ;pin_manager.c: 77: PPSLOCK = 0x55;
  4924  062E  3055               	movlw	85
  4925  062F  003C               	movlb	28	; select bank28
  4926  0630  008F               	movwf	15	;volatile
  4927                           
  4928                           ;pin_manager.c: 78: PPSLOCK = 0xAA;
  4929  0631  30AA               	movlw	170
  4930  0632  008F               	movwf	15	;volatile
  4931                           
  4932                           ;pin_manager.c: 79: PPSLOCKbits.PPSLOCKED = 0x01;
  4933  0633  140F               	bsf	15,0	;volatile
  4934                           
  4935                           ;pin_manager.c: 80: GIE = state;
  4936  0634  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  4937  0635  2E38               	goto	u50
  4938  0636  178B               	bsf	11,7	;volatile
  4939  0637  0008               	return
  4940  0638                     u50:	
  4941  0638  138B               	bcf	11,7	;volatile
  4942  0639  0008               	return
  4943  063A                     __end_of_PIN_MANAGER_Initialize:	
  4944                           
  4945                           	psect	text18
  4946  04E0                     __ptext18:	
  4947 ;; *************** function _OSCILLATOR_Initialize *****************
  4948 ;; Defined at:
  4949 ;;		line 85 in file "mcc_generated_files/mcc.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_SYSTEM_Initialize
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _OSCILLATOR_Initialize
  4978  04E0                     _OSCILLATOR_Initialize:	
  4979                           
  4980                           ;mcc.c: 87: OSCCON = 0x7A;
  4981                           
  4982                           ;incstack = 0
  4983                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4984  04E0  307A               	movlw	122
  4985  04E1  0021               	movlb	1	; select bank1
  4986  04E2  0099               	movwf	25	;volatile
  4987                           
  4988                           ;mcc.c: 89: OSCSTAT = 0x00;
  4989  04E3  019A               	clrf	26	;volatile
  4990                           
  4991                           ;mcc.c: 91: OSCTUNE = 0x00;
  4992  04E4  0198               	clrf	24	;volatile
  4993  04E5  0008               	return
  4994  04E6                     __end_of_OSCILLATOR_Initialize:	
  4995                           
  4996                           	psect	text19
  4997  051B                     __ptext19:	
  4998 ;; *************** function _EUSART_Initialize *****************
  4999 ;; Defined at:
  5000 ;;		line 56 in file "mcc_generated_files/eusart.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;		None
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;		None
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      void 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;Total ram usage:        0 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_SYSTEM_Initialize
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           
  5028                           ;psect for function _EUSART_Initialize
  5029  051B                     _EUSART_Initialize:	
  5030                           
  5031                           ;eusart.c: 60: BAUD1CON = 0x48;
  5032                           
  5033                           ;incstack = 0
  5034                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5035  051B  3048               	movlw	72
  5036  051C  0023               	movlb	3	; select bank3
  5037  051D  009F               	movwf	31	;volatile
  5038                           
  5039                           ;eusart.c: 63: RC1STA = 0x90;
  5040  051E  3090               	movlw	144
  5041  051F  009D               	movwf	29	;volatile
  5042                           
  5043                           ;eusart.c: 66: TX1STA = 0x26;
  5044  0520  3026               	movlw	38
  5045  0521  009E               	movwf	30	;volatile
  5046                           
  5047                           ;eusart.c: 69: SPBRGL = 0x22;
  5048  0522  3022               	movlw	34
  5049  0523  009B               	movwf	27	;volatile
  5050                           
  5051                           ;eusart.c: 72: SPBRGH = 0x00;
  5052  0524  019C               	clrf	28	;volatile
  5053  0525  0008               	return
  5054  0526                     __end_of_EUSART_Initialize:	
  5055                           
  5056                           	psect	text20
  5057  04F4                     __ptext20:	
  5058 ;; *************** function _ADC1_Initialize *****************
  5059 ;; Defined at:
  5060 ;;		line 65 in file "mcc_generated_files/adc1.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      void 
  5067 ;; Registers used:
  5068 ;;		wreg, status,2
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5078 ;;Total ram usage:        0 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_SYSTEM_Initialize
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function _ADC1_Initialize
  5089  04F4                     _ADC1_Initialize:	
  5090                           
  5091                           ;adc1.c: 69: ADCON0 = 0x01;
  5092                           
  5093                           ;incstack = 0
  5094                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  5095  04F4  3001               	movlw	1
  5096  04F5  0021               	movlb	1	; select bank1
  5097  04F6  009D               	movwf	29	;volatile
  5098                           
  5099                           ;adc1.c: 72: ADCON1 = 0x50;
  5100  04F7  3050               	movlw	80
  5101  04F8  009E               	movwf	30	;volatile
  5102                           
  5103                           ;adc1.c: 75: ADCON2 = 0x00;
  5104  04F9  019F               	clrf	31	;volatile
  5105                           
  5106                           ;adc1.c: 78: ADRESL = 0x00;
  5107  04FA  019B               	clrf	27	;volatile
  5108                           
  5109                           ;adc1.c: 81: ADRESH = 0x00;
  5110  04FB  019C               	clrf	28	;volatile
  5111  04FC  0008               	return
  5112  04FD                     __end_of_ADC1_Initialize:	
  5113                           
  5114                           	psect	text21
  5115  056F                     __ptext21:	
  5116 ;; *************** function _ADC1_GetConversion *****************
  5117 ;; Defined at:
  5118 ;;		line 109 in file "mcc_generated_files/adc1.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  channel         1    wreg     enum E11970
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  channel         1    3[COMMON] enum E11970
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  2    0[COMMON] unsigned int 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;Total ram usage:        4 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; This function calls:
  5139 ;;		Nothing
  5140 ;; This function is called by:
  5141 ;;		_main
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           
  5146                           ;psect for function _ADC1_GetConversion
  5147  056F                     _ADC1_GetConversion:	
  5148                           
  5149                           ;incstack = 0
  5150                           ; Regs used in _ADC1_GetConversion: [wreg+status,2+status,0]
  5151                           ;ADC1_GetConversion@channel stored from wreg
  5152  056F  00F3               	movwf	ADC1_GetConversion@channel
  5153                           
  5154                           ;adc1.c: 111: ADCON0bits.CHS = channel;
  5155  0570  0873               	movf	ADC1_GetConversion@channel,w
  5156  0571  00F2               	movwf	??_ADC1_GetConversion
  5157  0572  0DF2               	rlf	??_ADC1_GetConversion,f
  5158  0573  0DF2               	rlf	??_ADC1_GetConversion,f
  5159  0574  0021               	movlb	1	; select bank1
  5160  0575  081D               	movf	29,w	;volatile
  5161  0576  0672               	xorwf	??_ADC1_GetConversion,w
  5162  0577  3983               	andlw	-125
  5163  0578  0672               	xorwf	??_ADC1_GetConversion,w
  5164  0579  009D               	movwf	29	;volatile
  5165                           
  5166                           ;adc1.c: 114: ADCON0bits.ADON = 1;
  5167  057A  141D               	bsf	29,0	;volatile
  5168                           
  5169                           ;adc1.c: 117: _delay((unsigned long)((5)*(16000000/4000000.0)));
  5170  057B  3006               	movlw	6
  5171  057C  00F2               	movwf	??_ADC1_GetConversion
  5172  057D                     u777:	
  5173  057D  0BF2               	decfsz	??_ADC1_GetConversion,f
  5174  057E  2D7D               	goto	u777
  5175  057F  0000               	nop
  5176                           
  5177                           ;adc1.c: 120: ADCON0bits.GO_nDONE = 1;
  5178  0580  0021               	movlb	1	; select bank1
  5179  0581  149D               	bsf	29,1	;volatile
  5180  0582                     l182:	
  5181                           ;adc1.c: 123: while (ADCON0bits.GO_nDONE) {
  5182                           
  5183  0582  189D               	btfsc	29,1	;volatile
  5184  0583  2D82               	goto	l182
  5185                           
  5186                           ;adc1.c: 124: }
  5187                           ;adc1.c: 127: return ((ADRESH << 8) + ADRESL);
  5188  0584  081C               	movf	28,w	;volatile
  5189  0585  00F1               	movwf	?_ADC1_GetConversion+1
  5190  0586  081B               	movf	27,w	;volatile
  5191  0587  00F0               	movwf	?_ADC1_GetConversion
  5192  0588  0008               	return
  5193  0589                     __end_of_ADC1_GetConversion:	
  5194  007E                     btemp	set	126	;btemp
  5195  007E                     wtemp	set	126
  5196  007E                     wtemp0	set	126
  5197  0080                     wtemp1	set	128
  5198  0082                     wtemp2	set	130
  5199  0084                     wtemp3	set	132
  5200  0086                     wtemp4	set	134
  5201  0088                     wtemp5	set	136
  5202  007F                     wtemp6	set	127
  5203  007E                     ttemp	set	126
  5204  007E                     ttemp0	set	126
  5205  0081                     ttemp1	set	129
  5206  0084                     ttemp2	set	132
  5207  0087                     ttemp3	set	135
  5208  007F                     ttemp4	set	127
  5209  007E                     ltemp	set	126
  5210  007E                     ltemp0	set	126
  5211  0082                     ltemp1	set	130
  5212  0086                     ltemp2	set	134
  5213  0080                     ltemp3	set	128


Data Sizes:
    Strings     109
    Constant    8
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      52
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    cputs@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[4]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[4]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_7(CODE[15]), STR_6(CODE[31]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sendCMD@cmd	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[4]), STR_4(CODE[13]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[5]), 

    mygets@p	PTR unsigned char  size(1) Largest target is 32
		 -> rxBuffer(BANK0[32]), 


Critical Paths under _main in COMMON

    _main->_printf
    _sendCMD->_puts
    _puts->_cputs
    _cputs->_putch
    _printf->___lwdiv
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2245
                                             12 COMMON     2     2      0
                                             17 BANK0      3     3      0
                 _ADC1_GetConversion
                  _SYSTEM_Initialize
            _TMR2_HasOverflowOccured
                             _mygets
                             _printf
                            _sendCMD
 ---------------------------------------------------------------------------------
 (1) _sendCMD                                              2     0      2     685
                                              7 COMMON     2     0      2
                             _mygets
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     283
                                              5 COMMON     2     0      2
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2     153
                                              2 COMMON     3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _mygets                                               4     4      0      60
                                              0 COMMON     4     4      0
                              _getch
 ---------------------------------------------------------------------------------
 (3) _getch                                                0     0      0       0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    21      8    1386
                                              8 COMMON     4     4      0
                                              0 BANK0     17     9      8
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR2_HasOverflowOccured                              1     1      0      30
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                    _ADC1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1_GetConversion
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_Start
   _TMR2_HasOverflowOccured
   _mygets
     _getch
       _EUSART_Read
   _printf
     ___lwdiv
     ___wmul
     _isdigit
     _putch
       _EUSART_Write
   _sendCMD
     _mygets
       _getch
         _EUSART_Read
     _puts
       _cputs
         _putch
           _EUSART_Write
       _putch
         _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      34       5       65.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      42      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      42      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Sep 30 23:21:15 2016

                     __CFG_CP$OFF 0000                                l85 04ED                                l78 0507  
                              u50 0638               ___wmul@multiplicand 0072        __end_of_ADC1_GetConversion 0589  
                     __CFG_LVP$ON 0000                               l220 0677                               l182 0582  
                             l259 06EE                               l293 0591                               l701 050F  
                             l289 07F5                               l803 05B5                               l807 05C6  
                             l799 05AA                               _GIE 005F                               _RC2 0072  
                             _PR2 001B                               u515 05D6                               u535 05E0  
                             u545 05EA                               u625 0773                               u555 05F2  
                             u475 0592                               u485 0597                               u645 078C  
                             u755 0697                               u767 0670                               u777 057D  
                 _TMR2_Initialize 0531                      __CFG_BORV$LO 0000                               wreg 0009  
                    __CFG_IESO$ON 0000     TMR2_HasOverflowOccured@status 0070                      ?_EUSART_Read 0070  
                    __CFG_ZCD$OFF 0000                              l1105 05F1                              l1203 07C1  
                            l1109 05FA                              l1141 06F3                              l1205 06CD  
                            l1143 06FC                              l1135 06E9                              l1055 055B  
                            l1233 0685                              l1075 058B                              l1147 0709  
                            l1069 054A                              l1181 079C                              l1157 0737  
                            l1229 067A                              l1191 07B0                              l1175 077D  
                            l1159 074C                              l1097 05D3                              l1169 075E  
                            l1099 05DF                              l1195 07BD                              l1179 0799  
                            l1189 07AC                              STR_1 086C                              STR_2 0860  
                            STR_3 0854                              STR_4 0847                              STR_5 0871  
                            STR_6 0808                              STR_7 0838                              STR_8 0827  
                            _LATA 010C                              _LATB 010D                              _LATC 010E  
                            _T2PR 001B                              _TMR2 001A                              _WPUB 020D  
                            _WPUC 020E                      __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000  
                            _main 063A                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              _puts 0526  
                   __CFG_BOREN$ON 0000                              ltemp 007E                              start 0002  
                            ttemp 007E                              wtemp 007E                     __CFG_MCLRE$ON 0000  
                   __CFG_PLLEN$ON 0000                     ?_EUSART_Write 0070    __size_of_OSCILLATOR_Initialize 0006  
   __end_of_OSCILLATOR_Initialize 04E6                             ?_main 0070                     __CFG_WDTE$OFF 0000  
                           ?_puts 0075                             _T2CON 001C                             _LATA2 0862  
                           _LATA4 0864                             _LATC5 0875                             _T2HLT 001D  
                 __end_of___lwdiv 05FF                             _T2TMR 001A                             _T2RST 001F  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _RXPPS 0E24                             _getch 04D8                       ?_TMR2_Start 0070  
                           _cputs 055B                   __end_of_isdigit 054C                   __end_of_sendCMD 051B  
                           _putch 04DB                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           puts@s 0075                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __initialization 07F6                      __end_of_main 06C8  
                    __end_of_puts 0531                    ??_EUSART_Write 0070           __end_of_TMR2_Initialize 053E  
                  __CFG_LPBOR$OFF 0000                            ??_main 0051                            ??_puts 0077  
                          ?_getch 0070                            _ADCON0 009D                            _ADCON1 009E  
                          _ADCON2 009F                            ?_cputs 0072                            _ADRESH 009C  
                          _ADRESL 009B                            _ANSELA 018C                            ?_putch 0070  
                          _ANSELB 018D                            _ANSELC 018E                            _RC1REG 0199  
                          _RC1STA 019D                            _RB7PPS 0E9F                            _OSCCON 0099  
                          _SPBRGH 019C                            _SPBRGL 019B                            _TX1REG 019A  
                          _TX1STA 019E                    __CFG_PWRTE$OFF 0000                            ___wmul 0589  
                  __CFG_STVREN$ON 0000                         ??___lwdiv 0074               __size_of_TMR2_Start 0003  
                          _mygets 05A4                            _printf 06C8          __size_of_ADC1_Initialize 0009  
                          cputs@s 0072          ?_TMR2_HasOverflowOccured 0070                         ??_isdigit 0070  
                       ??_sendCMD 0079              __size_of_EUSART_Read 000A                 _SYSTEM_Initialize 054C  
         __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070                    __pcstackCOMMON 0070  
             ??_SYSTEM_Initialize 0071                     __end_of_getch 04DB                     __end_of_cputs 056F  
                   __end_of_putch 04E0                  ?_TMR2_Initialize 0070                    _OPTION_REGbits 0095  
                         ??_getch 0070                           ??_cputs 0074         __end_of_SYSTEM_Initialize 055B  
                         ??_putch 0071                _ADC1_GetConversion 056F                        __pbssBANK0 0020  
            __end_of_EUSART_Write 04F4               ?_ADC1_GetConversion 0070                        __pmaintext 063A  
                         ?___wmul 0070                   __CFG_PPS1WAY$ON 0000   __end_of_TMR2_HasOverflowOccured 0507  
                         ?_mygets 0070                           ?_printf 0040              ??_ADC1_GetConversion 0072  
                 __CFG_WDTCCS$SWC 0000                           _OSCSTAT 009A                           _OSCTUNE 0098  
                         _PPSLOCK 0E0F                 ??_ADC1_Initialize 0070                      ??_TMR2_Start 0070  
                 __size_of___wmul 001B                           ___lwdiv 05CB                __end_of_TMR2_Start 04D8  
                         __ptext1 0511                           __ptext2 0526                           __ptext3 055B  
                         __ptext4 05A4                           __ptext5 04D8                           __ptext6 0507  
                         __ptext7 06C8                           __ptext8 04DB                           __ptext9 04EC  
                 __size_of_mygets 0027                   __size_of_printf 012E                 __end_of_hexpowers 0808  
           _OSCILLATOR_Initialize 04E0                         _T2CONbits 001C                           _isdigit 053E  
                         _sendCMD 0511          ??_PIN_MANAGER_Initialize 0070                         _T2HLTbits 001D  
      __size_of_SYSTEM_Initialize 000F                           clrloop0 04E7              end_of_initialization 07FD  
                       _T2RSTbits 001F                 _EUSART_Initialize 051B                ?_EUSART_Initialize 0070  
                         mygets@c 0071                           mygets@i 0072                           mygets@p 0073  
                         printf@c 0050                           printf@f 0040                      __pstringtext 0800  
             ??_EUSART_Initialize 0070                  __CFG_FOSC$INTOSC 0000             __size_of_EUSART_Write 0008  
       __end_of_EUSART_Initialize 0526  __size_of_TMR2_HasOverflowOccured 000A                       printf@width 004E  
       ADC1_GetConversion@channel 0073                    __end_of___wmul 05A4                      _EUSART_Write 04EC  
          ?_OSCILLATOR_Initialize 0070                    __end_of_mygets 05CB                    __end_of_printf 07F6  
             start_initialization 07F6   __size_of_PIN_MANAGER_Initialize 003B                     ??_EUSART_Read 0070  
                     putch@txData 0071                          ??___wmul 0074                   _ADC1_Initialize 04F4  
                        ??_mygets 0070                          ??_printf 0078                        sendCMD@cmd 0077  
                       ___latbits 0002                     __pcstackBANK0 0040          __size_of_TMR2_Initialize 000D  
      __size_of_EUSART_Initialize 000B               __end_of_EUSART_Read 0511                  ___lwdiv@dividend 0072  
          _PIN_MANAGER_Initialize 05FF                          ?___lwdiv 0070                          _BAUD1CON 019F  
                        ?_isdigit 0070                          ?_sendCMD 0077       __size_of_ADC1_GetConversion 001A  
                       _hexpowers 0800                  ___lwdiv@quotient 0075                    __size_of_getch 0003  
                  __size_of_cputs 0014                          _T2CLKCON 001E                    __size_of_putch 0005  
         _TMR2_HasOverflowOccured 04FD                    ___wmul@product 0074                         clear_ram0 04E6  
         __end_of_ADC1_Initialize 04FD                          _PIR1bits 0010              __CFG_WDTCPS$WDTCPS1F 0000  
                      _ADCON0bits 009D                 ___wmul@multiplier 0070                        printf@flag 004A  
                      printf@prec 004D                         main@value 007C                       _EUSART_Read 0507  
               ??_TMR2_Initialize 0070           ??_OSCILLATOR_Initialize 0070                  __size_of___lwdiv 0034  
                     _isdigit$684 0070                  __size_of_isdigit 000E                  __size_of_sendCMD 000A  
                 ___lwdiv@divisor 0070                   ___lwdiv@counter 0077         ??_TMR2_HasOverflowOccured 0070  
                        __ptext10 053E                          __ptext11 0589                          __ptext20 04F4  
                        __ptext12 05CB                          __ptext21 056F                          __ptext13 04FD  
                        __ptext14 054C                          __ptext15 0531                          __ptext16 04D5  
                        __ptext17 05FF                          __ptext18 04E0                          __ptext19 051B  
                   __size_of_main 008E                     __size_of_puts 000B              __CFG_WDTCWS$WDTCWSSW 0000  
                        _rxBuffer 0020                        _RC1STAbits 019D                  ?_ADC1_Initialize 0070  
                       printf@idx 0048                         printf@val 004B                          main@time 007D  
     PIN_MANAGER_Initialize@state 0070                          isdigit@c 0071           ?_PIN_MANAGER_Initialize 0070  
               __CFG_CLKOUTEN$OFF 0000                       _PPSLOCKbits 0E0F                          printf@ap 0049  
                      _TMR2_Start 04D5                EUSART_Write@txData 0070    __end_of_PIN_MANAGER_Initialize 063A  
